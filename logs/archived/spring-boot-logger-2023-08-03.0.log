2023-08-03 11:12:35,264 INFO org.springframework.boot.StartupInfoLogger [main] Starting ShareItApp using Java 11.0.16.1 on DESKTOP-HBQA1DH with PID 10356 (C:\Users\Aser\dev\java-shareit\shareIt-server\target\classes started by Aser in C:\Users\Aser\dev\java-shareit)
2023-08-03 11:12:35,267 INFO org.springframework.boot.SpringApplication [main] No active profile set, falling back to 1 default profile: "default"
2023-08-03 11:12:36,085 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2023-08-03 11:12:36,158 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Finished Spring Data repository scanning in 62 ms. Found 5 JPA repository interfaces.
2023-08-03 11:12:36,840 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [main] Tomcat initialized with port(s): 9090 (http)
2023-08-03 11:12:36,849 INFO org.apache.juli.logging.DirectJDKLog [main] Initializing ProtocolHandler ["http-nio-9090"]
2023-08-03 11:12:36,850 INFO org.apache.juli.logging.DirectJDKLog [main] Starting service [Tomcat]
2023-08-03 11:12:36,850 INFO org.apache.juli.logging.DirectJDKLog [main] Starting Servlet engine: [Apache Tomcat/9.0.71]
2023-08-03 11:12:36,949 INFO org.apache.juli.logging.DirectJDKLog [main] Initializing Spring embedded WebApplicationContext
2023-08-03 11:12:36,950 INFO org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext [main] Root WebApplicationContext: initialization completed in 1639 ms
2023-08-03 11:12:37,030 DEBUG com.zaxxer.hikari.HikariConfig [main] Driver class org.h2.Driver found in Thread context class loader TomcatEmbeddedWebappClassLoader
  context: ROOT
  delegate: true
----------> Parent Classloader:
jdk.internal.loader.ClassLoaders$AppClassLoader@39a054a5

2023-08-03 11:12:37,184 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [main] Fetching JDBC Connection from DataSource
2023-08-03 11:12:37,185 DEBUG com.zaxxer.hikari.HikariConfig [main] HikariPool-1 - configuration:
2023-08-03 11:12:37,188 DEBUG com.zaxxer.hikari.HikariConfig [main] allowPoolSuspension................................false
2023-08-03 11:12:37,188 DEBUG com.zaxxer.hikari.HikariConfig [main] autoCommit................................true
2023-08-03 11:12:37,188 DEBUG com.zaxxer.hikari.HikariConfig [main] catalog................................none
2023-08-03 11:12:37,189 DEBUG com.zaxxer.hikari.HikariConfig [main] connectionInitSql................................none
2023-08-03 11:12:37,189 DEBUG com.zaxxer.hikari.HikariConfig [main] connectionTestQuery................................none
2023-08-03 11:12:37,189 DEBUG com.zaxxer.hikari.HikariConfig [main] connectionTimeout................................30000
2023-08-03 11:12:37,189 DEBUG com.zaxxer.hikari.HikariConfig [main] dataSource................................none
2023-08-03 11:12:37,189 DEBUG com.zaxxer.hikari.HikariConfig [main] dataSourceClassName................................none
2023-08-03 11:12:37,189 DEBUG com.zaxxer.hikari.HikariConfig [main] dataSourceJNDI................................none
2023-08-03 11:12:37,190 DEBUG com.zaxxer.hikari.HikariConfig [main] dataSourceProperties................................{password=<masked>}
2023-08-03 11:12:37,190 DEBUG com.zaxxer.hikari.HikariConfig [main] driverClassName................................"org.h2.Driver"
2023-08-03 11:12:37,190 DEBUG com.zaxxer.hikari.HikariConfig [main] exceptionOverrideClassName................................none
2023-08-03 11:12:37,190 DEBUG com.zaxxer.hikari.HikariConfig [main] healthCheckProperties................................{}
2023-08-03 11:12:37,191 DEBUG com.zaxxer.hikari.HikariConfig [main] healthCheckRegistry................................none
2023-08-03 11:12:37,191 DEBUG com.zaxxer.hikari.HikariConfig [main] idleTimeout................................600000
2023-08-03 11:12:37,191 DEBUG com.zaxxer.hikari.HikariConfig [main] initializationFailTimeout................................1
2023-08-03 11:12:37,191 DEBUG com.zaxxer.hikari.HikariConfig [main] isolateInternalQueries................................false
2023-08-03 11:12:37,191 DEBUG com.zaxxer.hikari.HikariConfig [main] jdbcUrl................................jdbc:h2:mem:my_db
2023-08-03 11:12:37,191 DEBUG com.zaxxer.hikari.HikariConfig [main] keepaliveTime................................0
2023-08-03 11:12:37,192 DEBUG com.zaxxer.hikari.HikariConfig [main] leakDetectionThreshold................................0
2023-08-03 11:12:37,192 DEBUG com.zaxxer.hikari.HikariConfig [main] maxLifetime................................1800000
2023-08-03 11:12:37,192 DEBUG com.zaxxer.hikari.HikariConfig [main] maximumPoolSize................................10
2023-08-03 11:12:37,192 DEBUG com.zaxxer.hikari.HikariConfig [main] metricRegistry................................none
2023-08-03 11:12:37,192 DEBUG com.zaxxer.hikari.HikariConfig [main] metricsTrackerFactory................................com.zaxxer.hikari.metrics.micrometer.MicrometerMetricsTrackerFactory@19b07407
2023-08-03 11:12:37,192 DEBUG com.zaxxer.hikari.HikariConfig [main] minimumIdle................................10
2023-08-03 11:12:37,193 DEBUG com.zaxxer.hikari.HikariConfig [main] password................................<masked>
2023-08-03 11:12:37,193 DEBUG com.zaxxer.hikari.HikariConfig [main] poolName................................"HikariPool-1"
2023-08-03 11:12:37,193 DEBUG com.zaxxer.hikari.HikariConfig [main] readOnly................................false
2023-08-03 11:12:37,193 DEBUG com.zaxxer.hikari.HikariConfig [main] registerMbeans................................false
2023-08-03 11:12:37,193 DEBUG com.zaxxer.hikari.HikariConfig [main] scheduledExecutor................................none
2023-08-03 11:12:37,193 DEBUG com.zaxxer.hikari.HikariConfig [main] schema................................none
2023-08-03 11:12:37,193 DEBUG com.zaxxer.hikari.HikariConfig [main] threadFactory................................internal
2023-08-03 11:12:37,193 DEBUG com.zaxxer.hikari.HikariConfig [main] transactionIsolation................................default
2023-08-03 11:12:37,194 DEBUG com.zaxxer.hikari.HikariConfig [main] username................................"test"
2023-08-03 11:12:37,194 DEBUG com.zaxxer.hikari.HikariConfig [main] validationTimeout................................5000
2023-08-03 11:12:37,194 INFO com.zaxxer.hikari.HikariDataSource [main] HikariPool-1 - Starting...
2023-08-03 11:12:37,386 DEBUG com.zaxxer.hikari.pool.HikariPool [main] HikariPool-1 - Added connection conn0: url=jdbc:h2:mem:my_db user=TEST
2023-08-03 11:12:37,396 INFO com.zaxxer.hikari.HikariDataSource [main] HikariPool-1 - Start completed.
2023-08-03 11:12:37,415 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [main] Fetching JDBC Connection from DataSource
2023-08-03 11:12:37,416 DEBUG org.springframework.jdbc.datasource.init.ScriptUtils [main] Executing SQL script from URL [file:/C:/Users/Aser/dev/java-shareit/shareIt-server/target/classes/schema.sql]
2023-08-03 11:12:37,421 DEBUG org.springframework.jdbc.datasource.init.ScriptUtils [main] 0 returned as update count for SQL: DROP TABLE IF EXISTS users CASCADE
2023-08-03 11:12:37,422 DEBUG org.springframework.jdbc.datasource.init.ScriptUtils [main] 0 returned as update count for SQL: DROP TABLE IF EXISTS requests CASCADE
2023-08-03 11:12:37,422 DEBUG org.springframework.jdbc.datasource.init.ScriptUtils [main] 0 returned as update count for SQL: DROP TABLE IF EXISTS items CASCADE
2023-08-03 11:12:37,422 DEBUG org.springframework.jdbc.datasource.init.ScriptUtils [main] 0 returned as update count for SQL: DROP TABLE IF EXISTS comments CASCADE
2023-08-03 11:12:37,423 DEBUG org.springframework.jdbc.datasource.init.ScriptUtils [main] 0 returned as update count for SQL: DROP TABLE IF EXISTS bookings CASCADE
2023-08-03 11:12:37,423 DEBUG org.springframework.jdbc.datasource.init.ScriptUtils [main] 0 returned as update count for SQL: DROP INDEX IF EXISTS name_description
2023-08-03 11:12:37,432 DEBUG org.springframework.jdbc.datasource.init.ScriptUtils [main] 0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS users ( id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL, name VARCHAR(255) NOT NULL, email VARCHAR(512) NOT NULL, CONSTRAINT pk_user PRIMARY KEY (id), CONSTRAINT uniq_email UNIQUE (email) )
2023-08-03 11:12:37,445 DEBUG org.springframework.jdbc.datasource.init.ScriptUtils [main] 0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS requests ( id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL, description VARCHAR(500) NOT NULL, created TIMESTAMP WITHOUT TIME ZONE NOT NULL, user_id BIGINT NOT NULL, CONSTRAINT pk_request PRIMARY KEY(id), CONSTRAINT fk_requests_to_users FOREIGN KEY(user_id) REFERENCES users(id) )
2023-08-03 11:12:37,448 DEBUG org.springframework.jdbc.datasource.init.ScriptUtils [main] 0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS items ( id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL, owner_id BIGINT NOT NULL, name VARCHAR(255) NOT NULL, description VARCHAR(512) NOT NULL, is_available BOOLEAN, request_id BIGINT, CONSTRAINT pk_item PRIMARY KEY (id), CONSTRAINT fk_items_to_users FOREIGN KEY(owner_id) REFERENCES users(id), CONSTRAINT fk_items_to_requests FOREIGN KEY(request_id) REFERENCES requests(id) )
2023-08-03 11:12:37,449 DEBUG org.springframework.jdbc.datasource.init.ScriptUtils [main] 0 returned as update count for SQL: CREATE INDEX IF NOT EXISTS name_description ON items (name, description)
2023-08-03 11:12:37,453 DEBUG org.springframework.jdbc.datasource.init.ScriptUtils [main] 0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS comments ( id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL, text VARCHAR(500) NOT NULL, author_id BIGINT NOT NULL, item_id BIGINT NOT NULL, created TIMESTAMP WITHOUT TIME ZONE, CONSTRAINT pk_comment PRIMARY KEY (id), CONSTRAINT fk_comments_to_users FOREIGN KEY(author_id) REFERENCES users(id), CONSTRAINT fk_comments_to_items FOREIGN KEY(item_id) REFERENCES items(id) )
2023-08-03 11:12:37,455 DEBUG org.springframework.jdbc.datasource.init.ScriptUtils [main] 0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS bookings ( id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL, start_date TIMESTAMP WITHOUT TIME ZONE, end_date TIMESTAMP WITHOUT TIME ZONE, status VARCHAR(50), booker_id BIGINT NOT NULL, item_id BIGINT NOT NULL, CONSTRAINT pk_booking PRIMARY KEY (id), CONSTRAINT fk_bookings_to_users FOREIGN KEY(booker_id) REFERENCES users(id), CONSTRAINT fk_bookings_to_items FOREIGN KEY(item_id) REFERENCES items(id) )
2023-08-03 11:12:37,455 DEBUG org.springframework.jdbc.datasource.init.ScriptUtils [main] Executed SQL script from URL [file:/C:/Users/Aser/dev/java-shareit/shareIt-server/target/classes/schema.sql] in 39 ms.
2023-08-03 11:12:37,498 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=1, active=0, idle=1, waiting=0)
2023-08-03 11:12:37,501 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn1: url=jdbc:h2:mem:my_db user=TEST
2023-08-03 11:12:37,501 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn2: url=jdbc:h2:mem:my_db user=TEST
2023-08-03 11:12:37,502 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn3: url=jdbc:h2:mem:my_db user=TEST
2023-08-03 11:12:37,502 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn4: url=jdbc:h2:mem:my_db user=TEST
2023-08-03 11:12:37,503 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn5: url=jdbc:h2:mem:my_db user=TEST
2023-08-03 11:12:37,503 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn6: url=jdbc:h2:mem:my_db user=TEST
2023-08-03 11:12:37,504 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn7: url=jdbc:h2:mem:my_db user=TEST
2023-08-03 11:12:37,504 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn8: url=jdbc:h2:mem:my_db user=TEST
2023-08-03 11:12:37,505 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn9: url=jdbc:h2:mem:my_db user=TEST
2023-08-03 11:12:37,505 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 connection adder] HikariPool-1 - After adding stats (total=10, active=0, idle=10, waiting=0)
2023-08-03 11:12:37,522 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [main] Fetching JDBC Connection from DataSource
2023-08-03 11:12:37,563 INFO org.hibernate.jpa.internal.util.LogHelper [main] HHH000204: Processing PersistenceUnitInfo [name: default]
2023-08-03 11:12:37,608 INFO org.hibernate.Version [main] HHH000412: Hibernate ORM core version 5.6.15.Final
2023-08-03 11:12:37,757 INFO org.hibernate.annotations.common.reflection.java.JavaReflectionManager [main] HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2023-08-03 11:12:37,865 INFO org.hibernate.dialect.Dialect [main] HHH000400: Using dialect: org.hibernate.dialect.PostgreSQL10Dialect
2023-08-03 11:12:38,495 INFO org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator [main] HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2023-08-03 11:12:38,506 INFO org.springframework.orm.jpa.AbstractEntityManagerFactoryBean [main] Initialized JPA EntityManagerFactory for persistence unit 'default'
2023-08-03 11:12:38,514 WARN org.springframework.context.support.AbstractApplicationContext [main] Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'errorHandler': Lookup method resolution failed; nested exception is java.lang.IllegalStateException: Failed to introspect Class [ru.practicum.shareit.ErrorHandler] from ClassLoader [jdk.internal.loader.ClassLoaders$AppClassLoader@39a054a5]
2023-08-03 11:12:38,514 INFO org.springframework.orm.jpa.AbstractEntityManagerFactoryBean [main] Closing JPA EntityManagerFactory for persistence unit 'default'
2023-08-03 11:12:38,514 INFO org.hibernate.tool.schema.internal.SchemaDropperImpl$DelayedDropActionImpl [main] HHH000477: Starting delayed evictData of schema as part of SessionFactory shut-down'
2023-08-03 11:12:38,523 INFO com.zaxxer.hikari.HikariDataSource [main] HikariPool-1 - Shutdown initiated...
2023-08-03 11:12:38,523 DEBUG com.zaxxer.hikari.pool.HikariPool [main] HikariPool-1 - Before shutdown stats (total=10, active=0, idle=10, waiting=0)
2023-08-03 11:12:38,525 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn0: url=jdbc:h2:mem:my_db user=TEST: (connection evicted)
2023-08-03 11:12:38,525 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn1: url=jdbc:h2:mem:my_db user=TEST: (connection evicted)
2023-08-03 11:12:38,526 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn2: url=jdbc:h2:mem:my_db user=TEST: (connection evicted)
2023-08-03 11:12:38,526 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn3: url=jdbc:h2:mem:my_db user=TEST: (connection evicted)
2023-08-03 11:12:38,526 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn4: url=jdbc:h2:mem:my_db user=TEST: (connection evicted)
2023-08-03 11:12:38,526 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn5: url=jdbc:h2:mem:my_db user=TEST: (connection evicted)
2023-08-03 11:12:38,526 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn6: url=jdbc:h2:mem:my_db user=TEST: (connection evicted)
2023-08-03 11:12:38,527 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn7: url=jdbc:h2:mem:my_db user=TEST: (connection evicted)
2023-08-03 11:12:38,527 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn8: url=jdbc:h2:mem:my_db user=TEST: (connection evicted)
2023-08-03 11:12:38,527 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn9: url=jdbc:h2:mem:my_db user=TEST: (connection evicted)
2023-08-03 11:12:38,528 DEBUG com.zaxxer.hikari.pool.HikariPool [main] HikariPool-1 - After shutdown stats (total=0, active=0, idle=0, waiting=0)
2023-08-03 11:12:38,528 INFO com.zaxxer.hikari.HikariDataSource [main] HikariPool-1 - Shutdown completed.
2023-08-03 11:12:38,530 INFO org.apache.juli.logging.DirectJDKLog [main] Stopping service [Tomcat]
2023-08-03 11:12:38,546 INFO org.springframework.boot.autoconfigure.logging.ConditionEvaluationReportLoggingListener [main] 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2023-08-03 11:12:38,565 ERROR org.springframework.boot.SpringApplication [main] Application run failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'errorHandler': Lookup method resolution failed; nested exception is java.lang.IllegalStateException: Failed to introspect Class [ru.practicum.shareit.ErrorHandler] from ClassLoader [jdk.internal.loader.ClassLoaders$AppClassLoader@39a054a5]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.determineCandidateConstructors(AutowiredAnnotationBeanPostProcessor.java:289)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.determineConstructorsFromBeanPostProcessors(AbstractAutowireCapableBeanFactory.java:1302)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1219)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:955)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:918)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:583)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:147)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:731)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:408)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:307)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1303)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1292)
	at ru.practicum.shareit.ShareItServerApp.main(ShareItApp.java:10)
Caused by: java.lang.IllegalStateException: Failed to introspect Class [ru.practicum.shareit.ErrorHandler] from ClassLoader [jdk.internal.loader.ClassLoaders$AppClassLoader@39a054a5]
	at org.springframework.util.ReflectionUtils.getDeclaredMethods(ReflectionUtils.java:485)
	at org.springframework.util.ReflectionUtils.doWithLocalMethods(ReflectionUtils.java:321)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.determineCandidateConstructors(AutowiredAnnotationBeanPostProcessor.java:267)
	... 18 common frames omitted
Caused by: java.lang.NoClassDefFoundError: javax/validation/ConstraintViolationException
	at java.base/java.lang.Class.getDeclaredMethods0(Native Method)
	at java.base/java.lang.Class.privateGetDeclaredMethods(Class.java:3166)
	at java.base/java.lang.Class.getDeclaredMethods(Class.java:2309)
	at org.springframework.util.ReflectionUtils.getDeclaredMethods(ReflectionUtils.java:467)
	... 20 common frames omitted
Caused by: java.lang.ClassNotFoundException: javax.validation.ConstraintViolationException
	at java.base/jdk.internal.loader.BuiltinClassLoader.loadClass(BuiltinClassLoader.java:581)
	at java.base/jdk.internal.loader.ClassLoaders$AppClassLoader.loadClass(ClassLoaders.java:178)
	at java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:522)
	... 24 common frames omitted
2023-08-03 11:18:50,970 INFO org.springframework.boot.StartupInfoLogger [main] Starting ShareItApp using Java 11.0.16.1 on DESKTOP-HBQA1DH with PID 3444 (C:\Users\Aser\dev\java-shareit\shareIt-server\target\classes started by Aser in C:\Users\Aser\dev\java-shareit)
2023-08-03 11:18:50,973 INFO org.springframework.boot.SpringApplication [main] No active profile set, falling back to 1 default profile: "default"
2023-08-03 11:18:51,761 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2023-08-03 11:18:51,830 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Finished Spring Data repository scanning in 62 ms. Found 5 JPA repository interfaces.
2023-08-03 11:18:52,523 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [main] Tomcat initialized with port(s): 9090 (http)
2023-08-03 11:18:52,533 INFO org.apache.juli.logging.DirectJDKLog [main] Initializing ProtocolHandler ["http-nio-9090"]
2023-08-03 11:18:52,533 INFO org.apache.juli.logging.DirectJDKLog [main] Starting service [Tomcat]
2023-08-03 11:18:52,533 INFO org.apache.juli.logging.DirectJDKLog [main] Starting Servlet engine: [Apache Tomcat/9.0.71]
2023-08-03 11:18:52,637 INFO org.apache.juli.logging.DirectJDKLog [main] Initializing Spring embedded WebApplicationContext
2023-08-03 11:18:52,637 INFO org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext [main] Root WebApplicationContext: initialization completed in 1622 ms
2023-08-03 11:18:52,715 DEBUG com.zaxxer.hikari.HikariConfig [main] Driver class org.h2.Driver found in Thread context class loader TomcatEmbeddedWebappClassLoader
  context: ROOT
  delegate: true
----------> Parent Classloader:
jdk.internal.loader.ClassLoaders$AppClassLoader@39a054a5

2023-08-03 11:18:52,861 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [main] Fetching JDBC Connection from DataSource
2023-08-03 11:18:52,862 DEBUG com.zaxxer.hikari.HikariConfig [main] HikariPool-1 - configuration:
2023-08-03 11:18:52,864 DEBUG com.zaxxer.hikari.HikariConfig [main] allowPoolSuspension................................false
2023-08-03 11:18:52,864 DEBUG com.zaxxer.hikari.HikariConfig [main] autoCommit................................true
2023-08-03 11:18:52,865 DEBUG com.zaxxer.hikari.HikariConfig [main] catalog................................none
2023-08-03 11:18:52,865 DEBUG com.zaxxer.hikari.HikariConfig [main] connectionInitSql................................none
2023-08-03 11:18:52,865 DEBUG com.zaxxer.hikari.HikariConfig [main] connectionTestQuery................................none
2023-08-03 11:18:52,865 DEBUG com.zaxxer.hikari.HikariConfig [main] connectionTimeout................................30000
2023-08-03 11:18:52,865 DEBUG com.zaxxer.hikari.HikariConfig [main] dataSource................................none
2023-08-03 11:18:52,866 DEBUG com.zaxxer.hikari.HikariConfig [main] dataSourceClassName................................none
2023-08-03 11:18:52,866 DEBUG com.zaxxer.hikari.HikariConfig [main] dataSourceJNDI................................none
2023-08-03 11:18:52,866 DEBUG com.zaxxer.hikari.HikariConfig [main] dataSourceProperties................................{password=<masked>}
2023-08-03 11:18:52,866 DEBUG com.zaxxer.hikari.HikariConfig [main] driverClassName................................"org.h2.Driver"
2023-08-03 11:18:52,867 DEBUG com.zaxxer.hikari.HikariConfig [main] exceptionOverrideClassName................................none
2023-08-03 11:18:52,867 DEBUG com.zaxxer.hikari.HikariConfig [main] healthCheckProperties................................{}
2023-08-03 11:18:52,867 DEBUG com.zaxxer.hikari.HikariConfig [main] healthCheckRegistry................................none
2023-08-03 11:18:52,867 DEBUG com.zaxxer.hikari.HikariConfig [main] idleTimeout................................600000
2023-08-03 11:18:52,867 DEBUG com.zaxxer.hikari.HikariConfig [main] initializationFailTimeout................................1
2023-08-03 11:18:52,867 DEBUG com.zaxxer.hikari.HikariConfig [main] isolateInternalQueries................................false
2023-08-03 11:18:52,868 DEBUG com.zaxxer.hikari.HikariConfig [main] jdbcUrl................................jdbc:h2:mem:my_db
2023-08-03 11:18:52,868 DEBUG com.zaxxer.hikari.HikariConfig [main] keepaliveTime................................0
2023-08-03 11:18:52,868 DEBUG com.zaxxer.hikari.HikariConfig [main] leakDetectionThreshold................................0
2023-08-03 11:18:52,868 DEBUG com.zaxxer.hikari.HikariConfig [main] maxLifetime................................1800000
2023-08-03 11:18:52,868 DEBUG com.zaxxer.hikari.HikariConfig [main] maximumPoolSize................................10
2023-08-03 11:18:52,868 DEBUG com.zaxxer.hikari.HikariConfig [main] metricRegistry................................none
2023-08-03 11:18:52,869 DEBUG com.zaxxer.hikari.HikariConfig [main] metricsTrackerFactory................................com.zaxxer.hikari.metrics.micrometer.MicrometerMetricsTrackerFactory@624b523
2023-08-03 11:18:52,869 DEBUG com.zaxxer.hikari.HikariConfig [main] minimumIdle................................10
2023-08-03 11:18:52,869 DEBUG com.zaxxer.hikari.HikariConfig [main] password................................<masked>
2023-08-03 11:18:52,869 DEBUG com.zaxxer.hikari.HikariConfig [main] poolName................................"HikariPool-1"
2023-08-03 11:18:52,869 DEBUG com.zaxxer.hikari.HikariConfig [main] readOnly................................false
2023-08-03 11:18:52,870 DEBUG com.zaxxer.hikari.HikariConfig [main] registerMbeans................................false
2023-08-03 11:18:52,870 DEBUG com.zaxxer.hikari.HikariConfig [main] scheduledExecutor................................none
2023-08-03 11:18:52,870 DEBUG com.zaxxer.hikari.HikariConfig [main] schema................................none
2023-08-03 11:18:52,870 DEBUG com.zaxxer.hikari.HikariConfig [main] threadFactory................................internal
2023-08-03 11:18:52,870 DEBUG com.zaxxer.hikari.HikariConfig [main] transactionIsolation................................default
2023-08-03 11:18:52,870 DEBUG com.zaxxer.hikari.HikariConfig [main] username................................"test"
2023-08-03 11:18:52,870 DEBUG com.zaxxer.hikari.HikariConfig [main] validationTimeout................................5000
2023-08-03 11:18:52,871 INFO com.zaxxer.hikari.HikariDataSource [main] HikariPool-1 - Starting...
2023-08-03 11:18:53,067 DEBUG com.zaxxer.hikari.pool.HikariPool [main] HikariPool-1 - Added connection conn0: url=jdbc:h2:mem:my_db user=TEST
2023-08-03 11:18:53,076 INFO com.zaxxer.hikari.HikariDataSource [main] HikariPool-1 - Start completed.
2023-08-03 11:18:53,101 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [main] Fetching JDBC Connection from DataSource
2023-08-03 11:18:53,101 DEBUG org.springframework.jdbc.datasource.init.ScriptUtils [main] Executing SQL script from URL [file:/C:/Users/Aser/dev/java-shareit/shareIt-server/target/classes/schema.sql]
2023-08-03 11:18:53,106 DEBUG org.springframework.jdbc.datasource.init.ScriptUtils [main] 0 returned as update count for SQL: DROP TABLE IF EXISTS users CASCADE
2023-08-03 11:18:53,106 DEBUG org.springframework.jdbc.datasource.init.ScriptUtils [main] 0 returned as update count for SQL: DROP TABLE IF EXISTS requests CASCADE
2023-08-03 11:18:53,106 DEBUG org.springframework.jdbc.datasource.init.ScriptUtils [main] 0 returned as update count for SQL: DROP TABLE IF EXISTS items CASCADE
2023-08-03 11:18:53,107 DEBUG org.springframework.jdbc.datasource.init.ScriptUtils [main] 0 returned as update count for SQL: DROP TABLE IF EXISTS comments CASCADE
2023-08-03 11:18:53,107 DEBUG org.springframework.jdbc.datasource.init.ScriptUtils [main] 0 returned as update count for SQL: DROP TABLE IF EXISTS bookings CASCADE
2023-08-03 11:18:53,107 DEBUG org.springframework.jdbc.datasource.init.ScriptUtils [main] 0 returned as update count for SQL: DROP INDEX IF EXISTS name_description
2023-08-03 11:18:53,116 DEBUG org.springframework.jdbc.datasource.init.ScriptUtils [main] 0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS users ( id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL, name VARCHAR(255) NOT NULL, email VARCHAR(512) NOT NULL, CONSTRAINT pk_user PRIMARY KEY (id), CONSTRAINT uniq_email UNIQUE (email) )
2023-08-03 11:18:53,130 DEBUG org.springframework.jdbc.datasource.init.ScriptUtils [main] 0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS requests ( id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL, description VARCHAR(500) NOT NULL, created TIMESTAMP WITHOUT TIME ZONE NOT NULL, user_id BIGINT NOT NULL, CONSTRAINT pk_request PRIMARY KEY(id), CONSTRAINT fk_requests_to_users FOREIGN KEY(user_id) REFERENCES users(id) )
2023-08-03 11:18:53,133 DEBUG org.springframework.jdbc.datasource.init.ScriptUtils [main] 0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS items ( id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL, owner_id BIGINT NOT NULL, name VARCHAR(255) NOT NULL, description VARCHAR(512) NOT NULL, is_available BOOLEAN, request_id BIGINT, CONSTRAINT pk_item PRIMARY KEY (id), CONSTRAINT fk_items_to_users FOREIGN KEY(owner_id) REFERENCES users(id), CONSTRAINT fk_items_to_requests FOREIGN KEY(request_id) REFERENCES requests(id) )
2023-08-03 11:18:53,134 DEBUG org.springframework.jdbc.datasource.init.ScriptUtils [main] 0 returned as update count for SQL: CREATE INDEX IF NOT EXISTS name_description ON items (name, description)
2023-08-03 11:18:53,137 DEBUG org.springframework.jdbc.datasource.init.ScriptUtils [main] 0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS comments ( id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL, text VARCHAR(500) NOT NULL, author_id BIGINT NOT NULL, item_id BIGINT NOT NULL, created TIMESTAMP WITHOUT TIME ZONE, CONSTRAINT pk_comment PRIMARY KEY (id), CONSTRAINT fk_comments_to_users FOREIGN KEY(author_id) REFERENCES users(id), CONSTRAINT fk_comments_to_items FOREIGN KEY(item_id) REFERENCES items(id) )
2023-08-03 11:18:53,140 DEBUG org.springframework.jdbc.datasource.init.ScriptUtils [main] 0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS bookings ( id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL, start_date TIMESTAMP WITHOUT TIME ZONE, end_date TIMESTAMP WITHOUT TIME ZONE, status VARCHAR(50), booker_id BIGINT NOT NULL, item_id BIGINT NOT NULL, CONSTRAINT pk_booking PRIMARY KEY (id), CONSTRAINT fk_bookings_to_users FOREIGN KEY(booker_id) REFERENCES users(id), CONSTRAINT fk_bookings_to_items FOREIGN KEY(item_id) REFERENCES items(id) )
2023-08-03 11:18:53,140 DEBUG org.springframework.jdbc.datasource.init.ScriptUtils [main] Executed SQL script from URL [file:/C:/Users/Aser/dev/java-shareit/shareIt-server/target/classes/schema.sql] in 39 ms.
2023-08-03 11:18:53,178 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=1, active=0, idle=1, waiting=0)
2023-08-03 11:18:53,181 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn1: url=jdbc:h2:mem:my_db user=TEST
2023-08-03 11:18:53,181 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn2: url=jdbc:h2:mem:my_db user=TEST
2023-08-03 11:18:53,182 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn3: url=jdbc:h2:mem:my_db user=TEST
2023-08-03 11:18:53,182 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn4: url=jdbc:h2:mem:my_db user=TEST
2023-08-03 11:18:53,182 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn5: url=jdbc:h2:mem:my_db user=TEST
2023-08-03 11:18:53,182 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn6: url=jdbc:h2:mem:my_db user=TEST
2023-08-03 11:18:53,182 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn7: url=jdbc:h2:mem:my_db user=TEST
2023-08-03 11:18:53,183 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn8: url=jdbc:h2:mem:my_db user=TEST
2023-08-03 11:18:53,183 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn9: url=jdbc:h2:mem:my_db user=TEST
2023-08-03 11:18:53,183 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 connection adder] HikariPool-1 - After adding stats (total=10, active=0, idle=10, waiting=0)
2023-08-03 11:18:53,220 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [main] Fetching JDBC Connection from DataSource
2023-08-03 11:18:53,262 INFO org.hibernate.jpa.internal.util.LogHelper [main] HHH000204: Processing PersistenceUnitInfo [name: default]
2023-08-03 11:18:53,308 INFO org.hibernate.Version [main] HHH000412: Hibernate ORM core version 5.6.15.Final
2023-08-03 11:18:53,461 INFO org.hibernate.annotations.common.reflection.java.JavaReflectionManager [main] HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2023-08-03 11:18:53,583 INFO org.hibernate.dialect.Dialect [main] HHH000400: Using dialect: org.hibernate.dialect.PostgreSQL10Dialect
2023-08-03 11:18:53,665 WARN org.springframework.context.support.AbstractApplicationContext [main] Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory' defined in class path resource [org/springframework/boot/autoconfigure/orm/jpa/HibernateJpaConfiguration.class]: Invocation of init method failed; nested exception is java.lang.NoClassDefFoundError: ru/practicum/shareit/booking/model/Booking$BookingBuilder
2023-08-03 11:18:53,666 INFO com.zaxxer.hikari.HikariDataSource [main] HikariPool-1 - Shutdown initiated...
2023-08-03 11:18:53,666 DEBUG com.zaxxer.hikari.pool.HikariPool [main] HikariPool-1 - Before shutdown stats (total=10, active=0, idle=10, waiting=0)
2023-08-03 11:18:53,667 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn0: url=jdbc:h2:mem:my_db user=TEST: (connection evicted)
2023-08-03 11:18:53,667 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn1: url=jdbc:h2:mem:my_db user=TEST: (connection evicted)
2023-08-03 11:18:53,668 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn2: url=jdbc:h2:mem:my_db user=TEST: (connection evicted)
2023-08-03 11:18:53,668 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn3: url=jdbc:h2:mem:my_db user=TEST: (connection evicted)
2023-08-03 11:18:53,668 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn4: url=jdbc:h2:mem:my_db user=TEST: (connection evicted)
2023-08-03 11:18:53,668 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn5: url=jdbc:h2:mem:my_db user=TEST: (connection evicted)
2023-08-03 11:18:53,669 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn6: url=jdbc:h2:mem:my_db user=TEST: (connection evicted)
2023-08-03 11:18:53,669 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn7: url=jdbc:h2:mem:my_db user=TEST: (connection evicted)
2023-08-03 11:18:53,669 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn8: url=jdbc:h2:mem:my_db user=TEST: (connection evicted)
2023-08-03 11:18:53,669 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn9: url=jdbc:h2:mem:my_db user=TEST: (connection evicted)
2023-08-03 11:18:53,670 DEBUG com.zaxxer.hikari.pool.HikariPool [main] HikariPool-1 - After shutdown stats (total=0, active=0, idle=0, waiting=0)
2023-08-03 11:18:53,670 INFO com.zaxxer.hikari.HikariDataSource [main] HikariPool-1 - Shutdown completed.
2023-08-03 11:18:53,674 INFO org.apache.juli.logging.DirectJDKLog [main] Stopping service [Tomcat]
2023-08-03 11:18:53,688 INFO org.springframework.boot.autoconfigure.logging.ConditionEvaluationReportLoggingListener [main] 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2023-08-03 11:18:53,705 ERROR org.springframework.boot.SpringApplication [main] Application run failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory' defined in class path resource [org/springframework/boot/autoconfigure/orm/jpa/HibernateJpaConfiguration.class]: Invocation of init method failed; nested exception is java.lang.NoClassDefFoundError: ru/practicum/shareit/booking/model/Booking$BookingBuilder
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1804)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:620)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1154)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:908)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:583)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:147)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:731)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:408)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:307)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1303)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1292)
	at ru.practicum.shareit.ShareItServerApp.main(ShareItApp.java:10)
Caused by: java.lang.NoClassDefFoundError: ru/practicum/shareit/booking/model/Booking$BookingBuilder
	at java.base/java.lang.Class.getDeclaredMethods0(Native Method)
	at java.base/java.lang.Class.privateGetDeclaredMethods(Class.java:3166)
	at java.base/java.lang.Class.getDeclaredMethods(Class.java:2309)
	at org.hibernate.annotations.common.reflection.java.JavaXClass.getDeclaredMethodProperties(JavaXClass.java:97)
	at org.hibernate.annotations.common.reflection.java.JavaXClass.getDeclaredProperties(JavaXClass.java:116)
	at org.hibernate.annotations.common.reflection.java.JavaXClass.getDeclaredProperties(JavaXClass.java:108)
	at org.hibernate.cfg.InheritanceState.determineDefaultAccessType(InheritanceState.java:252)
	at org.hibernate.cfg.InheritanceState.getElementsToProcess(InheritanceState.java:211)
	at org.hibernate.cfg.AnnotationBinder.bindClass(AnnotationBinder.java:772)
	at org.hibernate.boot.model.source.internal.annotations.AnnotationMetadataSourceProcessorImpl.processEntityHierarchies(AnnotationMetadataSourceProcessorImpl.java:225)
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess$1.processEntityHierarchies(MetadataBuildingProcess.java:239)
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.complete(MetadataBuildingProcess.java:282)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.metadata(EntityManagerFactoryBuilderImpl.java:1460)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1494)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:58)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:365)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:341)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1863)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1800)
	... 16 common frames omitted
Caused by: java.lang.ClassNotFoundException: ru.practicum.shareit.booking.model.Booking$BookingBuilder
	at java.base/jdk.internal.loader.BuiltinClassLoader.loadClass(BuiltinClassLoader.java:581)
	at java.base/jdk.internal.loader.ClassLoaders$AppClassLoader.loadClass(ClassLoaders.java:178)
	at java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:522)
	... 37 common frames omitted
2023-08-03 11:27:01,713 INFO org.hibernate.validator.internal.util.Version [background-preinit] HV000001: Hibernate Validator 6.2.5.Final
2023-08-03 11:27:01,716 INFO org.springframework.boot.StartupInfoLogger [main] Starting ShareItGateway using Java 18.0.2 on DESKTOP-HBQA1DH with PID 15376 (C:\Users\Aser\dev\java-shareit\shareIt-gateway\target\classes started by Aser in C:\Users\Aser\dev\java-shareit)
2023-08-03 11:27:01,717 INFO org.springframework.boot.SpringApplication [main] No active profile set, falling back to 1 default profile: "default"
2023-08-03 11:27:02,671 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [main] Tomcat initialized with port(s): 8080 (http)
2023-08-03 11:27:02,678 INFO org.apache.juli.logging.DirectJDKLog [main] Initializing ProtocolHandler ["http-nio-8080"]
2023-08-03 11:27:02,678 INFO org.apache.juli.logging.DirectJDKLog [main] Starting service [Tomcat]
2023-08-03 11:27:02,678 INFO org.apache.juli.logging.DirectJDKLog [main] Starting Servlet engine: [Apache Tomcat/9.0.71]
2023-08-03 11:27:02,744 INFO org.apache.juli.logging.DirectJDKLog [main] Initializing Spring embedded WebApplicationContext
2023-08-03 11:27:02,744 INFO org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext [main] Root WebApplicationContext: initialization completed in 986 ms
2023-08-03 11:27:03,306 INFO org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver [main] Exposing 1 endpoint(s) beneath base path '/actuator'
2023-08-03 11:27:03,324 INFO org.apache.juli.logging.DirectJDKLog [main] Starting ProtocolHandler ["http-nio-8080"]
2023-08-03 11:27:03,341 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [main] Tomcat started on port(s): 8080 (http) with context path ''
2023-08-03 11:27:03,357 INFO org.springframework.boot.StartupInfoLogger [main] Started ShareItGateway in 2.066 seconds (JVM running for 2.364)
2023-08-03 12:42:36,733 INFO org.hibernate.validator.internal.util.Version [background-preinit] HV000001: Hibernate Validator 6.2.5.Final
2023-08-03 12:42:36,739 INFO org.springframework.boot.StartupInfoLogger [main] Starting ShareItGateway using Java 18.0.2 on DESKTOP-HBQA1DH with PID 13152 (C:\Users\Aser\dev\java-shareit\shareIt-gateway\target\classes started by Aser in C:\Users\Aser\dev\java-shareit)
2023-08-03 12:42:36,740 INFO org.springframework.boot.SpringApplication [main] No active profile set, falling back to 1 default profile: "default"
2023-08-03 12:42:37,642 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [main] Tomcat initialized with port(s): 8080 (http)
2023-08-03 12:42:37,649 INFO org.apache.juli.logging.DirectJDKLog [main] Initializing ProtocolHandler ["http-nio-8080"]
2023-08-03 12:42:37,649 INFO org.apache.juli.logging.DirectJDKLog [main] Starting service [Tomcat]
2023-08-03 12:42:37,650 INFO org.apache.juli.logging.DirectJDKLog [main] Starting Servlet engine: [Apache Tomcat/9.0.71]
2023-08-03 12:42:37,715 INFO org.apache.juli.logging.DirectJDKLog [main] Initializing Spring embedded WebApplicationContext
2023-08-03 12:42:37,716 INFO org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext [main] Root WebApplicationContext: initialization completed in 932 ms
2023-08-03 12:42:38,276 INFO org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver [main] Exposing 1 endpoint(s) beneath base path '/actuator'
2023-08-03 12:42:38,294 INFO org.apache.juli.logging.DirectJDKLog [main] Starting ProtocolHandler ["http-nio-8080"]
2023-08-03 12:42:38,310 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [main] Tomcat started on port(s): 8080 (http) with context path ''
2023-08-03 12:42:38,323 INFO org.springframework.boot.StartupInfoLogger [main] Started ShareItGateway in 1.964 seconds (JVM running for 2.275)
2023-08-03 12:42:54,563 INFO org.apache.juli.logging.DirectJDKLog [http-nio-8080-exec-2] Initializing Spring DispatcherServlet 'dispatcherServlet'
2023-08-03 12:42:54,563 INFO org.springframework.web.servlet.FrameworkServlet [http-nio-8080-exec-2] Initializing Servlet 'dispatcherServlet'
2023-08-03 12:42:54,564 INFO org.springframework.web.servlet.FrameworkServlet [http-nio-8080-exec-2] Completed initialization in 1 ms
2023-08-03 12:42:54,692 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-2] HTTP POST http://localhost:9090/users
2023-08-03 12:42:54,697 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-2] Accept=[application/json, application/*+json]
2023-08-03 12:42:54,707 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-2] Writing [UserDto(id=0, email=user@user.com, name=user)] as "application/json"
2023-08-03 12:42:54,932 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-2] Response 201 CREATED
2023-08-03 12:42:54,933 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-2] Reading to [java.lang.Object]
2023-08-03 12:42:54,981 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-3] HTTP POST http://localhost:9090/users
2023-08-03 12:42:54,982 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-3] Accept=[application/json, application/*+json]
2023-08-03 12:42:54,982 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-3] Writing [UserDto(id=0, email=user@user.com, name=user)] as "application/json"
2023-08-03 12:42:54,997 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-3] Response 500 INTERNAL_SERVER_ERROR
2023-08-03 12:42:55,033 INFO ru.practicum.shareit.ErrorHandler [http-nio-8080-exec-5] Validation failed for field: email. Error message: Email can not be null
2023-08-03 12:42:55,060 INFO ru.practicum.shareit.ErrorHandler [http-nio-8080-exec-7] Validation failed for field: email. Error message: Email is wrong
2023-08-03 12:42:55,085 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-9] HTTP PATCH http://localhost:9090/users/1
2023-08-03 12:42:55,086 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-9] Accept=[application/json, application/*+json]
2023-08-03 12:42:55,086 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-9] Writing [UserDto(id=0, email=update@user.com, name=update)] as "application/json"
2023-08-03 12:42:55,120 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-9] Response 200 OK
2023-08-03 12:42:55,120 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-9] Reading to [java.lang.Object]
2023-08-03 12:42:55,121 INFO ru.practicum.shareit.user.UserController [http-nio-8080-exec-9] Has been updated: <200,{id=1, email=update@user.com, name=update},[Content-Type:"application/json", Transfer-Encoding:"chunked", Date:"Thu, 03 Aug 2023 08:42:54 GMT", Keep-Alive:"timeout=60", Connection:"keep-alive"]>
2023-08-03 12:42:55,145 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-10] HTTP POST http://localhost:9090/users
2023-08-03 12:42:55,146 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-10] Accept=[application/json, application/*+json]
2023-08-03 12:42:55,146 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-10] Writing [UserDto(id=0, email=user@user.com, name=user)] as "application/json"
2023-08-03 12:42:55,151 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-10] Response 201 CREATED
2023-08-03 12:42:55,151 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-10] Reading to [java.lang.Object]
2023-08-03 12:42:55,173 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-1] HTTP PATCH http://localhost:9090/users/1
2023-08-03 12:42:55,173 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-1] Accept=[application/json, application/*+json]
2023-08-03 12:42:55,174 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-1] Writing [UserDto(id=0, email=null, name=updateName)] as "application/json"
2023-08-03 12:42:55,180 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-1] Response 200 OK
2023-08-03 12:42:55,181 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-1] Reading to [java.lang.Object]
2023-08-03 12:42:55,182 INFO ru.practicum.shareit.user.UserController [http-nio-8080-exec-1] Has been updated: <200,{id=1, email=update@user.com, name=updateName},[Content-Type:"application/json", Transfer-Encoding:"chunked", Date:"Thu, 03 Aug 2023 08:42:54 GMT", Keep-Alive:"timeout=60", Connection:"keep-alive"]>
2023-08-03 12:42:55,205 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-2] HTTP PATCH http://localhost:9090/users/1
2023-08-03 12:42:55,205 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-2] Accept=[application/json, application/*+json]
2023-08-03 12:42:55,206 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-2] Writing [UserDto(id=0, email=updateName@user.com, name=null)] as "application/json"
2023-08-03 12:42:55,211 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-2] Response 200 OK
2023-08-03 12:42:55,212 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-2] Reading to [java.lang.Object]
2023-08-03 12:42:55,212 INFO ru.practicum.shareit.user.UserController [http-nio-8080-exec-2] Has been updated: <200,{id=1, email=updateName@user.com, name=updateName},[Content-Type:"application/json", Transfer-Encoding:"chunked", Date:"Thu, 03 Aug 2023 08:42:54 GMT", Keep-Alive:"timeout=60", Connection:"keep-alive"]>
2023-08-03 12:42:55,231 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-3] HTTP PATCH http://localhost:9090/users/1
2023-08-03 12:42:55,232 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-3] Accept=[application/json, application/*+json]
2023-08-03 12:42:55,232 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-3] Writing [UserDto(id=0, email=updateName@user.com, name=null)] as "application/json"
2023-08-03 12:42:55,240 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-3] Response 200 OK
2023-08-03 12:42:55,241 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-3] Reading to [java.lang.Object]
2023-08-03 12:42:55,241 INFO ru.practicum.shareit.user.UserController [http-nio-8080-exec-3] Has been updated: <200,{id=1, email=updateName@user.com, name=updateName},[Content-Type:"application/json", Transfer-Encoding:"chunked", Date:"Thu, 03 Aug 2023 08:42:54 GMT", Keep-Alive:"timeout=60", Connection:"keep-alive"]>
2023-08-03 12:42:55,269 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-4] HTTP PATCH http://localhost:9090/users/1
2023-08-03 12:42:55,269 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-4] Accept=[application/json, application/*+json]
2023-08-03 12:42:55,270 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-4] Writing [UserDto(id=0, email=user@user.com, name=null)] as "application/json"
2023-08-03 12:42:55,277 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-4] Response 500 INTERNAL_SERVER_ERROR
2023-08-03 12:42:55,278 INFO ru.practicum.shareit.user.UserController [http-nio-8080-exec-4] Has been updated: <500 INTERNAL_SERVER_ERROR Internal Server Error,[B@379067a1,[]>
2023-08-03 12:42:55,299 INFO ru.practicum.shareit.user.UserController [http-nio-8080-exec-6] Request to get user with ID: 1
2023-08-03 12:42:55,300 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-6] HTTP GET http://localhost:9090/users/1
2023-08-03 12:42:55,301 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-6] Accept=[application/json, application/*+json]
2023-08-03 12:42:55,308 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-6] Response 200 OK
2023-08-03 12:42:55,308 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-6] Reading to [java.lang.Object]
2023-08-03 12:42:55,327 INFO ru.practicum.shareit.user.UserController [http-nio-8080-exec-7] Request to get user with ID: 3
2023-08-03 12:42:55,327 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-7] HTTP GET http://localhost:9090/users/3
2023-08-03 12:42:55,328 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-7] Accept=[application/json, application/*+json]
2023-08-03 12:42:55,331 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-7] Response 200 OK
2023-08-03 12:42:55,332 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-7] Reading to [java.lang.Object]
2023-08-03 12:42:55,355 INFO ru.practicum.shareit.user.UserController [http-nio-8080-exec-8] Request to get user with ID: 100
2023-08-03 12:42:55,356 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-8] HTTP GET http://localhost:9090/users/100
2023-08-03 12:42:55,356 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-8] Accept=[application/json, application/*+json]
2023-08-03 12:42:55,362 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-8] Response 404 NOT_FOUND
2023-08-03 12:42:55,383 INFO ru.practicum.shareit.user.UserController [http-nio-8080-exec-9] Request to delete with id: 3
2023-08-03 12:42:55,384 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-9] HTTP DELETE http://localhost:9090/users/3
2023-08-03 12:42:55,384 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-9] Accept=[application/json, application/*+json]
2023-08-03 12:42:55,394 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-9] Response 204 NO_CONTENT
2023-08-03 12:42:55,413 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-10] HTTP POST http://localhost:9090/users
2023-08-03 12:42:55,414 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-10] Accept=[application/json, application/*+json]
2023-08-03 12:42:55,414 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-10] Writing [UserDto(id=0, email=user@user.com, name=user)] as "application/json"
2023-08-03 12:42:55,418 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-10] Response 201 CREATED
2023-08-03 12:42:55,418 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-10] Reading to [java.lang.Object]
2023-08-03 12:42:55,438 INFO ru.practicum.shareit.user.UserController [http-nio-8080-exec-1] Request on get all
2023-08-03 12:42:55,438 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-1] HTTP GET http://localhost:9090/users
2023-08-03 12:42:55,439 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-1] Accept=[application/json, application/*+json]
2023-08-03 12:42:55,455 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-1] Response 200 OK
2023-08-03 12:42:55,456 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-1] Reading to [java.lang.Object]
2023-08-03 12:42:55,505 INFO ru.practicum.shareit.item.ItemController [http-nio-8080-exec-2] Request on add ItemDto(id=0, name=Дрель, description=Простая дрель, available=true, requestId=null), user id: 1
2023-08-03 12:42:55,509 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-2] HTTP POST http://localhost:9090/items
2023-08-03 12:42:55,510 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-2] Accept=[application/json, application/*+json]
2023-08-03 12:42:55,511 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-2] Writing [ItemDto(id=0, name=Дрель, description=Простая дрель, available=true, requestId=null)] as "application/json"
2023-08-03 12:42:55,541 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-2] Response 200 OK
2023-08-03 12:42:55,542 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-2] Reading to [java.lang.Object]
2023-08-03 12:42:55,563 INFO ru.practicum.shareit.ErrorHandler [http-nio-8080-exec-3] Missing request header: Required request header 'X-Sharer-User-Id' for method parameter type Long is not present
2023-08-03 12:42:55,589 INFO ru.practicum.shareit.item.ItemController [http-nio-8080-exec-5] Request on add ItemDto(id=0, name=Дрель, description=Простая дрель, available=true, requestId=null), user id: 10
2023-08-03 12:42:55,589 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-5] HTTP POST http://localhost:9090/items
2023-08-03 12:42:55,590 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-5] Accept=[application/json, application/*+json]
2023-08-03 12:42:55,590 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-5] Writing [ItemDto(id=0, name=Дрель, description=Простая дрель, available=true, requestId=null)] as "application/json"
2023-08-03 12:42:55,596 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-5] Response 404 NOT_FOUND
2023-08-03 12:42:55,618 INFO ru.practicum.shareit.ErrorHandler [http-nio-8080-exec-6] Validation failed for field: available. Error message: Available should be specified
2023-08-03 12:42:55,641 INFO ru.practicum.shareit.ErrorHandler [http-nio-8080-exec-8] Validation failed for field: name. Error message: Name can't blank
2023-08-03 12:42:55,659 INFO ru.practicum.shareit.ErrorHandler [http-nio-8080-exec-10] Validation failed for field: description. Error message: Description can't blank
2023-08-03 12:42:55,683 INFO ru.practicum.shareit.item.ItemController [http-nio-8080-exec-2] Request on edit item id: 1, ItemDto(id=1, name=Дрель+, description=Аккумуляторная дрель, available=false, requestId=null), user id: 1
2023-08-03 12:42:55,684 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-2] HTTP PATCH http://localhost:9090/items/1
2023-08-03 12:42:55,684 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-2] Accept=[application/json, application/*+json]
2023-08-03 12:42:55,684 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-2] Writing [ItemDto(id=1, name=Дрель+, description=Аккумуляторная дрель, available=false, requestId=null)] as "application/json"
2023-08-03 12:42:55,696 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-2] Response 200 OK
2023-08-03 12:42:55,697 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-2] Reading to [java.lang.Object]
2023-08-03 12:42:55,717 INFO ru.practicum.shareit.ErrorHandler [http-nio-8080-exec-3] Missing request header: Required request header 'X-Sharer-User-Id' for method parameter type Long is not present
2023-08-03 12:42:55,740 INFO ru.practicum.shareit.item.ItemController [http-nio-8080-exec-5] Request on edit item id: 1, ItemDto(id=0, name=Дрель, description=Простая дрель, available=false, requestId=null), user id: 3
2023-08-03 12:42:55,740 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-5] HTTP PATCH http://localhost:9090/items/1
2023-08-03 12:42:55,740 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-5] Accept=[application/json, application/*+json]
2023-08-03 12:42:55,740 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-5] Writing [ItemDto(id=0, name=Дрель, description=Простая дрель, available=false, requestId=null)] as "application/json"
2023-08-03 12:42:55,746 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-5] Response 404 NOT_FOUND
2023-08-03 12:42:55,765 INFO ru.practicum.shareit.item.ItemController [http-nio-8080-exec-6] Request on edit item id: 1, ItemDto(id=0, name=null, description=null, available=true, requestId=null), user id: 1
2023-08-03 12:42:55,766 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-6] HTTP PATCH http://localhost:9090/items/1
2023-08-03 12:42:55,766 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-6] Accept=[application/json, application/*+json]
2023-08-03 12:42:55,766 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-6] Writing [ItemDto(id=0, name=null, description=null, available=true, requestId=null)] as "application/json"
2023-08-03 12:42:55,773 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-6] Response 200 OK
2023-08-03 12:42:55,773 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-6] Reading to [java.lang.Object]
2023-08-03 12:42:55,794 INFO ru.practicum.shareit.item.ItemController [http-nio-8080-exec-7] Request on edit item id: 1, ItemDto(id=0, name=null, description=Аккумуляторная дрель + аккумулятор, available=null, requestId=null), user id: 1
2023-08-03 12:42:55,795 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-7] HTTP PATCH http://localhost:9090/items/1
2023-08-03 12:42:55,795 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-7] Accept=[application/json, application/*+json]
2023-08-03 12:42:55,796 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-7] Writing [ItemDto(id=0, name=null, description=Аккумуляторная дрель + аккумулятор, available=null, requestId=null)] as "application/json"
2023-08-03 12:42:55,801 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-7] Response 200 OK
2023-08-03 12:42:55,802 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-7] Reading to [java.lang.Object]
2023-08-03 12:42:55,824 INFO ru.practicum.shareit.item.ItemController [http-nio-8080-exec-8] Request on edit item id: 1, ItemDto(id=0, name=Аккумуляторная дрель, description=null, available=null, requestId=null), user id: 1
2023-08-03 12:42:55,825 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-8] HTTP PATCH http://localhost:9090/items/1
2023-08-03 12:42:55,825 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-8] Accept=[application/json, application/*+json]
2023-08-03 12:42:55,825 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-8] Writing [ItemDto(id=0, name=Аккумуляторная дрель, description=null, available=null, requestId=null)] as "application/json"
2023-08-03 12:42:55,830 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-8] Response 200 OK
2023-08-03 12:42:55,831 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-8] Reading to [java.lang.Object]
2023-08-03 12:42:55,852 INFO ru.practicum.shareit.item.ItemController [http-nio-8080-exec-9] Request from user ID: 1 on get item. ID: 1
2023-08-03 12:42:55,852 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-9] HTTP GET http://localhost:9090/items/1
2023-08-03 12:42:55,852 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-9] Accept=[application/json, application/*+json]
2023-08-03 12:42:55,877 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-9] Response 200 OK
2023-08-03 12:42:55,877 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-9] Reading to [java.lang.Object]
2023-08-03 12:42:55,898 INFO ru.practicum.shareit.item.ItemController [http-nio-8080-exec-10] Request from user ID: 4 on get item. ID: 1
2023-08-03 12:42:55,898 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-10] HTTP GET http://localhost:9090/items/1
2023-08-03 12:42:55,899 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-10] Accept=[application/json, application/*+json]
2023-08-03 12:42:55,906 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-10] Response 200 OK
2023-08-03 12:42:55,907 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-10] Reading to [java.lang.Object]
2023-08-03 12:42:55,930 INFO ru.practicum.shareit.item.ItemController [http-nio-8080-exec-1] Request from user ID: 4 on get item. ID: 100
2023-08-03 12:42:55,931 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-1] HTTP GET http://localhost:9090/items/100
2023-08-03 12:42:55,931 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-1] Accept=[application/json, application/*+json]
2023-08-03 12:42:55,936 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-1] Response 404 NOT_FOUND
2023-08-03 12:42:55,957 INFO ru.practicum.shareit.item.ItemController [http-nio-8080-exec-2] Request on add ItemDto(id=0, name=Отвертка, description=Аккумуляторная отвертка, available=true, requestId=null), user id: 4
2023-08-03 12:42:55,958 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-2] HTTP POST http://localhost:9090/items
2023-08-03 12:42:55,958 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-2] Accept=[application/json, application/*+json]
2023-08-03 12:42:55,958 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-2] Writing [ItemDto(id=0, name=Отвертка, description=Аккумуляторная отвертка, available=true, requestId=null)] as "application/json"
2023-08-03 12:42:55,965 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-2] Response 200 OK
2023-08-03 12:42:55,965 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-2] Reading to [java.lang.Object]
2023-08-03 12:42:55,991 INFO ru.practicum.shareit.item.ItemController [http-nio-8080-exec-3] Request on add ItemDto(id=0, name=Клей Момент, description=Тюбик суперклея марки Момент, available=true, requestId=null), user id: 4
2023-08-03 12:42:55,991 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-3] HTTP POST http://localhost:9090/items
2023-08-03 12:42:55,991 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-3] Accept=[application/json, application/*+json]
2023-08-03 12:42:55,992 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-3] Writing [ItemDto(id=0, name=Клей Момент, description=Тюбик суперклея марки Момент, available=true, requestId=null)] as "application/json"
2023-08-03 12:42:55,998 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-3] Response 200 OK
2023-08-03 12:42:55,998 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-3] Reading to [java.lang.Object]
2023-08-03 12:42:56,024 INFO ru.practicum.shareit.item.ItemController [http-nio-8080-exec-4] Request on get all for user id: 1
2023-08-03 12:42:56,025 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-4] HTTP GET http://localhost:9090/items?from=0&size=20
2023-08-03 12:42:56,025 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-4] Accept=[application/json, application/*+json]
2023-08-03 12:42:56,062 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-4] Response 200 OK
2023-08-03 12:42:56,062 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-4] Reading to [java.lang.Object]
2023-08-03 12:42:56,088 INFO ru.practicum.shareit.item.ItemController [http-nio-8080-exec-5] Request on get all for user id: 4
2023-08-03 12:42:56,088 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-5] HTTP GET http://localhost:9090/items?from=0&size=20
2023-08-03 12:42:56,089 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-5] Accept=[application/json, application/*+json]
2023-08-03 12:42:56,107 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-5] Response 200 OK
2023-08-03 12:42:56,107 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-5] Reading to [java.lang.Object]
2023-08-03 12:42:56,131 INFO ru.practicum.shareit.item.ItemController [http-nio-8080-exec-6] Request on search text: аккУМУляторная
2023-08-03 12:42:56,132 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-6] HTTP GET http://localhost:9090/items/search?text=%D0%B0%D0%BA%D0%BA%D1%83%D0%BC%D1%83%D0%BB%D1%8F%D1%82%D0%BE%D1%80%D0%BD%D0%B0%D1%8F&from=0&size=20
2023-08-03 12:42:56,133 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-6] Accept=[application/json, application/*+json]
2023-08-03 12:42:56,145 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-6] Response 200 OK
2023-08-03 12:42:56,145 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-6] Reading to [java.lang.Object]
2023-08-03 12:42:56,170 INFO ru.practicum.shareit.item.ItemController [http-nio-8080-exec-7] Request on edit item id: 2, ItemDto(id=0, name=null, description=null, available=false, requestId=null), user id: 4
2023-08-03 12:42:56,171 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-7] HTTP PATCH http://localhost:9090/items/2
2023-08-03 12:42:56,171 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-7] Accept=[application/json, application/*+json]
2023-08-03 12:42:56,172 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-7] Writing [ItemDto(id=0, name=null, description=null, available=false, requestId=null)] as "application/json"
2023-08-03 12:42:56,179 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-7] Response 200 OK
2023-08-03 12:42:56,180 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-7] Reading to [java.lang.Object]
2023-08-03 12:42:56,203 INFO ru.practicum.shareit.item.ItemController [http-nio-8080-exec-8] Request on search text: дРелЬ
2023-08-03 12:42:56,204 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-8] HTTP GET http://localhost:9090/items/search?text=%D0%B4%D1%80%D0%B5%D0%BB%D1%8C&from=0&size=20
2023-08-03 12:42:56,204 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-8] Accept=[application/json, application/*+json]
2023-08-03 12:42:56,208 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-8] Response 200 OK
2023-08-03 12:42:56,209 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-8] Reading to [java.lang.Object]
2023-08-03 12:42:56,229 INFO ru.practicum.shareit.item.ItemController [http-nio-8080-exec-9] Request on search text: аккУМУляторная
2023-08-03 12:42:56,229 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-9] HTTP GET http://localhost:9090/items/search?text=%D0%B0%D0%BA%D0%BA%D1%83%D0%BC%D1%83%D0%BB%D1%8F%D1%82%D0%BE%D1%80%D0%BD%D0%B0%D1%8F&from=0&size=20
2023-08-03 12:42:56,230 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-9] Accept=[application/json, application/*+json]
2023-08-03 12:42:56,233 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-9] Response 200 OK
2023-08-03 12:42:56,234 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-9] Reading to [java.lang.Object]
2023-08-03 12:42:56,251 INFO ru.practicum.shareit.item.ItemController [http-nio-8080-exec-10] Request on edit item id: 2, ItemDto(id=0, name=null, description=null, available=true, requestId=null), user id: 4
2023-08-03 12:42:56,252 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-10] HTTP PATCH http://localhost:9090/items/2
2023-08-03 12:42:56,253 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-10] Accept=[application/json, application/*+json]
2023-08-03 12:42:56,253 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-10] Writing [ItemDto(id=0, name=null, description=null, available=true, requestId=null)] as "application/json"
2023-08-03 12:42:56,259 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-10] Response 200 OK
2023-08-03 12:42:56,259 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-10] Reading to [java.lang.Object]
2023-08-03 12:42:56,280 INFO ru.practicum.shareit.item.ItemController [http-nio-8080-exec-1] Request on search text: оТверТ
2023-08-03 12:42:56,281 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-1] HTTP GET http://localhost:9090/items/search?text=%D0%BE%D1%82%D0%B2%D0%B5%D1%80%D1%82&from=0&size=20
2023-08-03 12:42:56,281 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-1] Accept=[application/json, application/*+json]
2023-08-03 12:42:56,285 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-1] Response 200 OK
2023-08-03 12:42:56,286 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-1] Reading to [java.lang.Object]
2023-08-03 12:42:56,307 INFO ru.practicum.shareit.item.ItemController [http-nio-8080-exec-2] Request on search text: 
2023-08-03 12:42:56,328 INFO ru.practicum.shareit.item.ItemController [http-nio-8080-exec-3] Request on edit item id: 2, ItemDto(id=0, name=null, description=null, available=false, requestId=null), user id: 4
2023-08-03 12:42:56,329 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-3] HTTP PATCH http://localhost:9090/items/2
2023-08-03 12:42:56,329 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-3] Accept=[application/json, application/*+json]
2023-08-03 12:42:56,329 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-3] Writing [ItemDto(id=0, name=null, description=null, available=false, requestId=null)] as "application/json"
2023-08-03 12:42:56,334 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-3] Response 200 OK
2023-08-03 12:42:56,334 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-3] Reading to [java.lang.Object]
2023-08-03 12:42:56,385 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-4] HTTP POST http://localhost:9090/bookings
2023-08-03 12:42:56,386 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-4] Accept=[application/json, application/*+json]
2023-08-03 12:42:56,391 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-4] Writing [BookingDto(id=0, itemId=2, start=2023-08-04T12:42:56, end=2023-08-05T12:42:56, status=null, booker=null)] as "application/json"
2023-08-03 12:42:56,412 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-4] Response 400 BAD_REQUEST
2023-08-03 12:42:56,434 INFO ru.practicum.shareit.item.ItemController [http-nio-8080-exec-6] Request on edit item id: 2, ItemDto(id=0, name=null, description=null, available=true, requestId=null), user id: 4
2023-08-03 12:42:56,434 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-6] HTTP PATCH http://localhost:9090/items/2
2023-08-03 12:42:56,435 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-6] Accept=[application/json, application/*+json]
2023-08-03 12:42:56,435 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-6] Writing [ItemDto(id=0, name=null, description=null, available=true, requestId=null)] as "application/json"
2023-08-03 12:42:56,442 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-6] Response 200 OK
2023-08-03 12:42:56,442 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-6] Reading to [java.lang.Object]
2023-08-03 12:42:56,466 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-7] HTTP POST http://localhost:9090/bookings
2023-08-03 12:42:56,466 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-7] Accept=[application/json, application/*+json]
2023-08-03 12:42:56,466 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-7] Writing [BookingDto(id=0, itemId=2, start=2023-08-04T12:42:56, end=2023-08-05T12:42:56, status=null, booker=null)] as "application/json"
2023-08-03 12:42:56,472 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-7] Response 404 NOT_FOUND
2023-08-03 12:42:56,495 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-8] HTTP POST http://localhost:9090/bookings
2023-08-03 12:42:56,495 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-8] Accept=[application/json, application/*+json]
2023-08-03 12:42:56,495 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-8] Writing [BookingDto(id=0, itemId=200, start=2023-08-04T12:42:56, end=2023-08-05T12:42:56, status=null, booker=null)] as "application/json"
2023-08-03 12:42:56,500 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-8] Response 404 NOT_FOUND
2023-08-03 12:42:56,535 INFO ru.practicum.shareit.ErrorHandler [http-nio-8080-exec-9] Validation failed for field: validDateOrder. Error message: End date must be after start date and dates cannot be equal
2023-08-03 12:42:56,535 INFO ru.practicum.shareit.ErrorHandler [http-nio-8080-exec-9] Validation failed for field: end. Error message: должно содержать дату, которая еще не наступила
2023-08-03 12:42:56,559 INFO ru.practicum.shareit.ErrorHandler [http-nio-8080-exec-1] Validation failed for field: validDateOrder. Error message: End date must be after start date and dates cannot be equal
2023-08-03 12:42:56,580 INFO ru.practicum.shareit.ErrorHandler [http-nio-8080-exec-3] Validation failed for field: validDateOrder. Error message: End date must be after start date and dates cannot be equal
2023-08-03 12:42:56,603 INFO ru.practicum.shareit.ErrorHandler [http-nio-8080-exec-5] Validation failed for field: validDateOrder. Error message: End date must be after start date and dates cannot be equal
2023-08-03 12:42:56,603 INFO ru.practicum.shareit.ErrorHandler [http-nio-8080-exec-5] Validation failed for field: start. Error message: не должно равняться null
2023-08-03 12:42:56,631 INFO ru.practicum.shareit.ErrorHandler [http-nio-8080-exec-7] Validation failed for field: end. Error message: не должно равняться null
2023-08-03 12:42:56,631 INFO ru.practicum.shareit.ErrorHandler [http-nio-8080-exec-7] Validation failed for field: validDateOrder. Error message: End date must be after start date and dates cannot be equal
2023-08-03 12:42:56,659 INFO ru.practicum.shareit.ErrorHandler [http-nio-8080-exec-9] Validation failed for field: start. Error message: должно содержать сегодняшнее число или дату, которая еще не наступила
2023-08-03 12:42:56,684 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-1] HTTP POST http://localhost:9090/bookings
2023-08-03 12:42:56,684 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-1] Accept=[application/json, application/*+json]
2023-08-03 12:42:56,685 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-1] Writing [BookingDto(id=0, itemId=2, start=2023-08-03T12:42:59, end=2023-08-03T12:43, status=null, booker=null)] as "application/json"
2023-08-03 12:42:56,698 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-1] Response 200 OK
2023-08-03 12:42:56,698 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-1] Reading to [java.lang.Object]
2023-08-03 12:42:56,717 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-2] HTTP PATCH http://localhost:9090/bookings/1?approved=true
2023-08-03 12:42:56,718 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-2] Accept=[application/json, application/*+json]
2023-08-03 12:42:56,726 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-2] Response 200 OK
2023-08-03 12:42:56,727 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-2] Reading to [java.lang.Object]
2023-08-03 12:42:56,751 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-3] HTTP POST http://localhost:9090/bookings
2023-08-03 12:42:56,751 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-3] Accept=[application/json, application/*+json]
2023-08-03 12:42:56,752 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-3] Writing [BookingDto(id=0, itemId=2, start=2023-08-04T12:42:56, end=2023-08-05T12:42:56, status=null, booker=null)] as "application/json"
2023-08-03 12:42:56,757 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-3] Response 200 OK
2023-08-03 12:42:56,757 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-3] Reading to [java.lang.Object]
2023-08-03 12:42:56,779 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-4] HTTP GET http://localhost:9090/bookings/2
2023-08-03 12:42:56,780 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-4] Accept=[application/json, application/*+json]
2023-08-03 12:42:56,785 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-4] Response 200 OK
2023-08-03 12:42:56,785 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-4] Reading to [java.lang.Object]
2023-08-03 12:42:56,805 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-5] HTTP GET http://localhost:9090/bookings/2
2023-08-03 12:42:56,805 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-5] Accept=[application/json, application/*+json]
2023-08-03 12:42:56,810 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-5] Response 200 OK
2023-08-03 12:42:56,810 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-5] Reading to [java.lang.Object]
2023-08-03 12:42:56,833 INFO ru.practicum.shareit.booking.BookingController [http-nio-8080-exec-6] Get booking with state ALL, userId=100, from=0, size=20
2023-08-03 12:42:56,834 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-6] HTTP GET http://localhost:9090/bookings?state=ALL&from=0&size=20
2023-08-03 12:42:56,835 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-6] Accept=[application/json, application/*+json]
2023-08-03 12:42:56,842 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-6] Response 404 NOT_FOUND
2023-08-03 12:42:56,864 INFO ru.practicum.shareit.booking.BookingController [http-nio-8080-exec-7] Get booking with state ALL, userId=100, from=0, size=20
2023-08-03 12:42:56,864 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-7] HTTP GET http://localhost:9090/bookings/owner?state=ALL&from=0&size=20
2023-08-03 12:42:56,864 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-7] Accept=[application/json, application/*+json]
2023-08-03 12:42:56,868 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-7] Response 404 NOT_FOUND
2023-08-03 12:42:56,886 INFO ru.practicum.shareit.booking.BookingController [http-nio-8080-exec-8] Get booking with state ALL, userId=1, from=0, size=20
2023-08-03 12:42:56,887 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-8] HTTP GET http://localhost:9090/bookings?state=ALL&from=0&size=20
2023-08-03 12:42:56,887 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-8] Accept=[application/json, application/*+json]
2023-08-03 12:42:56,893 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-8] Response 200 OK
2023-08-03 12:42:56,893 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-8] Reading to [java.lang.Object]
2023-08-03 12:42:56,913 INFO ru.practicum.shareit.booking.BookingController [http-nio-8080-exec-9] Get booking with state ALL, userId=1, from=0, size=20
2023-08-03 12:42:56,913 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-9] HTTP GET http://localhost:9090/bookings?state=ALL&from=0&size=20
2023-08-03 12:42:56,913 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-9] Accept=[application/json, application/*+json]
2023-08-03 12:42:56,918 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-9] Response 200 OK
2023-08-03 12:42:56,918 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-9] Reading to [java.lang.Object]
2023-08-03 12:42:56,946 INFO ru.practicum.shareit.booking.BookingController [http-nio-8080-exec-10] Get booking with state FUTURE, userId=1, from=0, size=20
2023-08-03 12:42:56,946 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-10] HTTP GET http://localhost:9090/bookings?state=FUTURE&from=0&size=20
2023-08-03 12:42:56,947 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-10] Accept=[application/json, application/*+json]
2023-08-03 12:42:56,953 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-10] Response 200 OK
2023-08-03 12:42:56,953 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-10] Reading to [java.lang.Object]
2023-08-03 12:42:56,979 INFO ru.practicum.shareit.ErrorHandler [http-nio-8080-exec-1] Bad booking state: Unknown state: UNSUPPORTED_STATUS
2023-08-03 12:42:56,996 INFO ru.practicum.shareit.booking.BookingController [http-nio-8080-exec-3] Get booking with state ALL, userId=4, from=0, size=20
2023-08-03 12:42:56,996 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-3] HTTP GET http://localhost:9090/bookings/owner?state=ALL&from=0&size=20
2023-08-03 12:42:56,997 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-3] Accept=[application/json, application/*+json]
2023-08-03 12:42:57,004 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-3] Response 200 OK
2023-08-03 12:42:57,004 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-3] Reading to [java.lang.Object]
2023-08-03 12:42:57,027 INFO ru.practicum.shareit.booking.BookingController [http-nio-8080-exec-4] Get booking with state ALL, userId=4, from=0, size=20
2023-08-03 12:42:57,027 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-4] HTTP GET http://localhost:9090/bookings/owner?state=ALL&from=0&size=20
2023-08-03 12:42:57,027 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-4] Accept=[application/json, application/*+json]
2023-08-03 12:42:57,031 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-4] Response 200 OK
2023-08-03 12:42:57,032 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-4] Reading to [java.lang.Object]
2023-08-03 12:42:57,054 INFO ru.practicum.shareit.booking.BookingController [http-nio-8080-exec-5] Get booking with state FUTURE, userId=4, from=0, size=20
2023-08-03 12:42:57,055 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-5] HTTP GET http://localhost:9090/bookings/owner?state=FUTURE&from=0&size=20
2023-08-03 12:42:57,055 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-5] Accept=[application/json, application/*+json]
2023-08-03 12:42:57,061 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-5] Response 200 OK
2023-08-03 12:42:57,061 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-5] Reading to [java.lang.Object]
2023-08-03 12:42:57,084 INFO ru.practicum.shareit.ErrorHandler [http-nio-8080-exec-6] Bad booking state: Unknown state: UNSUPPORTED_STATUS
2023-08-03 12:42:57,104 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-8] HTTP GET http://localhost:9090/bookings/1000
2023-08-03 12:42:57,104 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-8] Accept=[application/json, application/*+json]
2023-08-03 12:42:57,108 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-8] Response 404 NOT_FOUND
2023-08-03 12:42:57,123 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-9] HTTP POST http://localhost:9090/users
2023-08-03 12:42:57,123 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-9] Accept=[application/json, application/*+json]
2023-08-03 12:42:57,124 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-9] Writing [UserDto(id=0, email=other@other.com, name=other)] as "application/json"
2023-08-03 12:42:57,127 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-9] Response 201 CREATED
2023-08-03 12:42:57,127 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-9] Reading to [java.lang.Object]
2023-08-03 12:42:57,149 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-10] HTTP GET http://localhost:9090/bookings/1
2023-08-03 12:42:57,149 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-10] Accept=[application/json, application/*+json]
2023-08-03 12:42:57,153 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-10] Response 404 NOT_FOUND
2023-08-03 12:42:57,170 INFO ru.practicum.shareit.ErrorHandler [http-nio-8080-exec-1] Server error Required request parameter 'approved' for method parameter type Boolean is not present
2023-08-03 12:42:57,191 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-3] HTTP PATCH http://localhost:9090/bookings/2?approved=true
2023-08-03 12:42:57,191 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-3] Accept=[application/json, application/*+json]
2023-08-03 12:42:57,196 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-3] Response 404 NOT_FOUND
2023-08-03 12:42:57,213 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-4] HTTP PATCH http://localhost:9090/bookings/2?approved=true
2023-08-03 12:42:57,214 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-4] Accept=[application/json, application/*+json]
2023-08-03 12:42:57,220 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-4] Response 200 OK
2023-08-03 12:42:57,220 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-4] Reading to [java.lang.Object]
2023-08-03 12:42:57,240 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-5] HTTP PATCH http://localhost:9090/bookings/2?approved=true
2023-08-03 12:42:57,241 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-5] Accept=[application/json, application/*+json]
2023-08-03 12:42:57,245 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-5] Response 400 BAD_REQUEST
2023-08-03 12:42:57,266 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-7] HTTP POST http://localhost:9090/users
2023-08-03 12:42:57,266 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-7] Accept=[application/json, application/*+json]
2023-08-03 12:42:57,267 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-7] Writing [UserDto(id=0, email=practicum@yandex.ru, name=practicum)] as "application/json"
2023-08-03 12:42:57,270 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-7] Response 201 CREATED
2023-08-03 12:42:57,271 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-7] Reading to [java.lang.Object]
2023-08-03 12:42:57,295 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-8] HTTP POST http://localhost:9090/bookings
2023-08-03 12:42:57,296 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-8] Accept=[application/json, application/*+json]
2023-08-03 12:42:57,296 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-8] Writing [BookingDto(id=0, itemId=1, start=2023-08-05T12:42:57, end=2023-08-06T12:42:57, status=null, booker=null)] as "application/json"
2023-08-03 12:42:57,301 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-8] Response 404 NOT_FOUND
2023-08-03 12:42:57,325 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-9] HTTP POST http://localhost:9090/bookings
2023-08-03 12:42:57,325 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-9] Accept=[application/json, application/*+json]
2023-08-03 12:42:57,326 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-9] Writing [BookingDto(id=0, itemId=1, start=2023-08-04T12:42:57, end=2023-08-04T13:42:57, status=null, booker=null)] as "application/json"
2023-08-03 12:42:57,331 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-9] Response 200 OK
2023-08-03 12:42:57,331 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-9] Reading to [java.lang.Object]
2023-08-03 12:42:57,349 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-10] HTTP PATCH http://localhost:9090/bookings/3?approved=false
2023-08-03 12:42:57,349 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-10] Accept=[application/json, application/*+json]
2023-08-03 12:42:57,354 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-10] Response 200 OK
2023-08-03 12:42:57,355 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-10] Reading to [java.lang.Object]
2023-08-03 12:42:57,379 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-1] HTTP POST http://localhost:9090/bookings
2023-08-03 12:42:57,380 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-1] Accept=[application/json, application/*+json]
2023-08-03 12:42:57,380 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-1] Writing [BookingDto(id=0, itemId=2, start=2023-08-03T13:42:57, end=2023-08-03T14:42:57, status=null, booker=null)] as "application/json"
2023-08-03 12:42:57,385 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-1] Response 200 OK
2023-08-03 12:42:57,385 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-1] Reading to [java.lang.Object]
2023-08-03 12:42:57,409 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-2] HTTP PATCH http://localhost:9090/bookings/4?approved=true
2023-08-03 12:42:57,410 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-2] Accept=[application/json, application/*+json]
2023-08-03 12:42:57,415 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-2] Response 200 OK
2023-08-03 12:42:57,416 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-2] Reading to [java.lang.Object]
2023-08-03 12:43:01,439 INFO ru.practicum.shareit.item.ItemController [http-nio-8080-exec-3] Request from user ID: 4 on get item. ID: 2
2023-08-03 12:43:01,440 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-3] HTTP GET http://localhost:9090/items/2
2023-08-03 12:43:01,440 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-3] Accept=[application/json, application/*+json]
2023-08-03 12:43:01,451 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-3] Response 200 OK
2023-08-03 12:43:01,451 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-3] Reading to [java.lang.Object]
2023-08-03 12:43:01,473 INFO ru.practicum.shareit.item.ItemController [http-nio-8080-exec-4] Request from user ID: 1 on get item. ID: 2
2023-08-03 12:43:01,473 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-4] HTTP GET http://localhost:9090/items/2
2023-08-03 12:43:01,473 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-4] Accept=[application/json, application/*+json]
2023-08-03 12:43:01,477 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-4] Response 200 OK
2023-08-03 12:43:01,477 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-4] Reading to [java.lang.Object]
2023-08-03 12:43:01,499 INFO ru.practicum.shareit.item.ItemController [http-nio-8080-exec-5] Request from user ID: 5 on get item. ID: 2
2023-08-03 12:43:01,499 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-5] HTTP GET http://localhost:9090/items/2
2023-08-03 12:43:01,499 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-5] Accept=[application/json, application/*+json]
2023-08-03 12:43:01,502 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-5] Response 200 OK
2023-08-03 12:43:01,503 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-5] Reading to [java.lang.Object]
2023-08-03 12:43:01,526 INFO ru.practicum.shareit.item.ItemController [http-nio-8080-exec-6] Request on get all for user id: 4
2023-08-03 12:43:01,527 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-6] HTTP GET http://localhost:9090/items?from=0&size=20
2023-08-03 12:43:01,527 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-6] Accept=[application/json, application/*+json]
2023-08-03 12:43:01,534 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-6] Response 200 OK
2023-08-03 12:43:01,535 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-6] Reading to [java.lang.Object]
2023-08-03 12:43:01,558 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-7] HTTP POST http://localhost:9090/bookings
2023-08-03 12:43:01,558 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-7] Accept=[application/json, application/*+json]
2023-08-03 12:43:01,559 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-7] Writing [BookingDto(id=0, itemId=3, start=2023-08-03T12:43:04, end=2023-08-04T12:43:01, status=null, booker=null)] as "application/json"
2023-08-03 12:43:01,565 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-7] Response 200 OK
2023-08-03 12:43:01,565 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-7] Reading to [java.lang.Object]
2023-08-03 12:43:01,590 INFO ru.practicum.shareit.booking.BookingController [http-nio-8080-exec-8] Get booking with state WAITING, userId=1, from=0, size=20
2023-08-03 12:43:01,590 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-8] HTTP GET http://localhost:9090/bookings?state=WAITING&from=0&size=20
2023-08-03 12:43:01,590 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-8] Accept=[application/json, application/*+json]
2023-08-03 12:43:01,596 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-8] Response 200 OK
2023-08-03 12:43:01,596 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-8] Reading to [java.lang.Object]
2023-08-03 12:43:01,618 INFO ru.practicum.shareit.booking.BookingController [http-nio-8080-exec-9] Get booking with state WAITING, userId=4, from=0, size=20
2023-08-03 12:43:01,618 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-9] HTTP GET http://localhost:9090/bookings/owner?state=WAITING&from=0&size=20
2023-08-03 12:43:01,618 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-9] Accept=[application/json, application/*+json]
2023-08-03 12:43:01,623 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-9] Response 200 OK
2023-08-03 12:43:01,624 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-9] Reading to [java.lang.Object]
2023-08-03 12:43:01,646 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-10] HTTP POST http://localhost:9090/bookings
2023-08-03 12:43:01,647 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-10] Accept=[application/json, application/*+json]
2023-08-03 12:43:01,647 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-10] Writing [BookingDto(id=0, itemId=2, start=2023-08-03T12:43:04, end=2023-08-03T12:43:05, status=null, booker=null)] as "application/json"
2023-08-03 12:43:01,652 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-10] Response 200 OK
2023-08-03 12:43:01,653 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-10] Reading to [java.lang.Object]
2023-08-03 12:43:01,676 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-1] HTTP PATCH http://localhost:9090/bookings/5?approved=false
2023-08-03 12:43:01,676 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-1] Accept=[application/json, application/*+json]
2023-08-03 12:43:01,681 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-1] Response 200 OK
2023-08-03 12:43:01,682 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-1] Reading to [java.lang.Object]
2023-08-03 12:43:01,705 INFO ru.practicum.shareit.booking.BookingController [http-nio-8080-exec-2] Get booking with state REJECTED, userId=1, from=0, size=20
2023-08-03 12:43:01,706 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-2] HTTP GET http://localhost:9090/bookings?state=REJECTED&from=0&size=20
2023-08-03 12:43:01,706 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-2] Accept=[application/json, application/*+json]
2023-08-03 12:43:01,710 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-2] Response 200 OK
2023-08-03 12:43:01,711 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-2] Reading to [java.lang.Object]
2023-08-03 12:43:01,736 INFO ru.practicum.shareit.booking.BookingController [http-nio-8080-exec-3] Get booking with state REJECTED, userId=4, from=0, size=20
2023-08-03 12:43:01,736 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-3] HTTP GET http://localhost:9090/bookings/owner?state=REJECTED&from=0&size=20
2023-08-03 12:43:01,737 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-3] Accept=[application/json, application/*+json]
2023-08-03 12:43:01,742 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-3] Response 200 OK
2023-08-03 12:43:01,742 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-3] Reading to [java.lang.Object]
2023-08-03 12:43:01,762 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-4] HTTP PATCH http://localhost:9090/bookings/6?approved=true
2023-08-03 12:43:01,762 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-4] Accept=[application/json, application/*+json]
2023-08-03 12:43:01,767 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-4] Response 200 OK
2023-08-03 12:43:01,767 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-4] Reading to [java.lang.Object]
2023-08-03 12:43:01,793 INFO ru.practicum.shareit.item.ItemController [http-nio-8080-exec-5] Request on add ItemDto(id=0, name=Кухонный стол, description=Стол для празднования, available=true, requestId=null), user id: 6
2023-08-03 12:43:01,794 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-5] HTTP POST http://localhost:9090/items
2023-08-03 12:43:01,794 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-5] Accept=[application/json, application/*+json]
2023-08-03 12:43:01,794 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-5] Writing [ItemDto(id=0, name=Кухонный стол, description=Стол для празднования, available=true, requestId=null)] as "application/json"
2023-08-03 12:43:01,799 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-5] Response 200 OK
2023-08-03 12:43:01,800 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-5] Reading to [java.lang.Object]
2023-08-03 12:43:01,822 INFO ru.practicum.shareit.item.ItemController [http-nio-8080-exec-6] Request from user ID: 1 on get item. ID: 1
2023-08-03 12:43:01,822 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-6] HTTP GET http://localhost:9090/items/1
2023-08-03 12:43:01,822 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-6] Accept=[application/json, application/*+json]
2023-08-03 12:43:01,830 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-6] Response 200 OK
2023-08-03 12:43:01,830 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-6] Reading to [java.lang.Object]
2023-08-03 12:43:01,855 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-7] HTTP POST http://localhost:9090/bookings
2023-08-03 12:43:01,855 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-7] Accept=[application/json, application/*+json]
2023-08-03 12:43:01,856 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-7] Writing [BookingDto(id=0, itemId=1, start=2023-08-13T12:43:01, end=2023-08-14T12:43:01, status=null, booker=null)] as "application/json"
2023-08-03 12:43:01,860 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-7] Response 200 OK
2023-08-03 12:43:01,860 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-7] Reading to [java.lang.Object]
2023-08-03 12:43:01,882 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-8] HTTP POST http://localhost:9090/bookings
2023-08-03 12:43:01,882 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-8] Accept=[application/json, application/*+json]
2023-08-03 12:43:01,883 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-8] Writing [BookingDto(id=0, itemId=4, start=2023-08-03T12:43:03, end=2023-08-03T13:43:01, status=null, booker=null)] as "application/json"
2023-08-03 12:43:01,889 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-8] Response 200 OK
2023-08-03 12:43:01,889 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-8] Reading to [java.lang.Object]
2023-08-03 12:43:01,908 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-9] HTTP PATCH http://localhost:9090/bookings/8?approved=true
2023-08-03 12:43:01,909 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-9] Accept=[application/json, application/*+json]
2023-08-03 12:43:01,915 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-9] Response 200 OK
2023-08-03 12:43:01,916 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-9] Reading to [java.lang.Object]
2023-08-03 12:43:04,938 INFO ru.practicum.shareit.item.ItemController [http-nio-8080-exec-10] Request from user ID: 1 on get item. ID: 2
2023-08-03 12:43:04,938 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-10] HTTP GET http://localhost:9090/items/2
2023-08-03 12:43:04,938 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-10] Accept=[application/json, application/*+json]
2023-08-03 12:43:04,943 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-10] Response 200 OK
2023-08-03 12:43:04,943 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-10] Reading to [java.lang.Object]
2023-08-03 12:43:07,965 INFO ru.practicum.shareit.item.ItemController [http-nio-8080-exec-1] Request from user ID: 4 on get item. ID: 2
2023-08-03 12:43:07,966 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-1] HTTP GET http://localhost:9090/items/2
2023-08-03 12:43:07,966 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-1] Accept=[application/json, application/*+json]
2023-08-03 12:43:07,971 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-1] Response 200 OK
2023-08-03 12:43:07,972 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-1] Reading to [java.lang.Object]
2023-08-03 12:43:08,001 INFO ru.practicum.shareit.item.ItemController [http-nio-8080-exec-2] Request on add comment Comment for item 1, item id: 1, user id: 4
2023-08-03 12:43:08,003 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-2] HTTP POST http://localhost:9090/items/1/comment
2023-08-03 12:43:08,003 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-2] Accept=[application/json, application/*+json]
2023-08-03 12:43:08,006 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-2] Writing [CommentDto(id=0, text=Comment for item 1, authorName=null, created=null)] as "application/json"
2023-08-03 12:43:08,019 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-2] Response 400 BAD_REQUEST
2023-08-03 12:43:08,042 INFO ru.practicum.shareit.ErrorHandler [http-nio-8080-exec-4] Validation failed for field: text. Error message: не должно быть пустым
2023-08-03 12:43:08,069 INFO ru.practicum.shareit.item.ItemController [http-nio-8080-exec-6] Request on add comment Add comment from user1, item id: 2, user id: 1
2023-08-03 12:43:08,070 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-6] HTTP POST http://localhost:9090/items/2/comment
2023-08-03 12:43:08,070 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-6] Accept=[application/json, application/*+json]
2023-08-03 12:43:08,070 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-6] Writing [CommentDto(id=0, text=Add comment from user1, authorName=null, created=null)] as "application/json"
2023-08-03 12:43:08,081 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-6] Response 200 OK
2023-08-03 12:43:08,081 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-6] Reading to [java.lang.Object]
2023-08-03 12:43:08,097 INFO ru.practicum.shareit.item.ItemController [http-nio-8080-exec-7] Request from user ID: 1 on get item. ID: 2
2023-08-03 12:43:08,097 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-7] HTTP GET http://localhost:9090/items/2
2023-08-03 12:43:08,097 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-7] Accept=[application/json, application/*+json]
2023-08-03 12:43:08,101 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-7] Response 200 OK
2023-08-03 12:43:08,102 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-7] Reading to [java.lang.Object]
2023-08-03 12:43:08,121 INFO ru.practicum.shareit.item.ItemController [http-nio-8080-exec-8] Request from user ID: 4 on get item. ID: 2
2023-08-03 12:43:08,122 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-8] HTTP GET http://localhost:9090/items/2
2023-08-03 12:43:08,122 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-8] Accept=[application/json, application/*+json]
2023-08-03 12:43:08,128 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-8] Response 200 OK
2023-08-03 12:43:08,128 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-8] Reading to [java.lang.Object]
2023-08-03 12:43:08,148 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-9] HTTP PATCH http://localhost:9090/bookings/7?approved=true
2023-08-03 12:43:08,149 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-9] Accept=[application/json, application/*+json]
2023-08-03 12:43:08,156 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-9] Response 200 OK
2023-08-03 12:43:08,156 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-9] Reading to [java.lang.Object]
2023-08-03 12:43:08,176 INFO ru.practicum.shareit.item.ItemController [http-nio-8080-exec-10] Request on add comment Add comment from user5, item id: 1, user id: 5
2023-08-03 12:43:08,176 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-10] HTTP POST http://localhost:9090/items/1/comment
2023-08-03 12:43:08,176 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-10] Accept=[application/json, application/*+json]
2023-08-03 12:43:08,177 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-10] Writing [CommentDto(id=0, text=Add comment from user5, authorName=null, created=null)] as "application/json"
2023-08-03 12:43:08,182 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-10] Response 400 BAD_REQUEST
2023-08-03 12:43:08,204 INFO ru.practicum.shareit.booking.BookingController [http-nio-8080-exec-2] Get booking with state CURRENT, userId=1, from=0, size=20
2023-08-03 12:43:08,205 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-2] HTTP GET http://localhost:9090/bookings?state=CURRENT&from=0&size=20
2023-08-03 12:43:08,205 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-2] Accept=[application/json, application/*+json]
2023-08-03 12:43:08,210 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-2] Response 200 OK
2023-08-03 12:43:08,210 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-2] Reading to [java.lang.Object]
2023-08-03 12:43:08,236 INFO ru.practicum.shareit.booking.BookingController [http-nio-8080-exec-3] Get booking with state CURRENT, userId=4, from=0, size=20
2023-08-03 12:43:08,236 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-3] HTTP GET http://localhost:9090/bookings/owner?state=CURRENT&from=0&size=20
2023-08-03 12:43:08,236 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-3] Accept=[application/json, application/*+json]
2023-08-03 12:43:08,241 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-3] Response 200 OK
2023-08-03 12:43:08,242 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-3] Reading to [java.lang.Object]
2023-08-03 12:43:08,262 INFO ru.practicum.shareit.booking.BookingController [http-nio-8080-exec-4] Get booking with state PAST, userId=1, from=0, size=20
2023-08-03 12:43:08,262 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-4] HTTP GET http://localhost:9090/bookings?state=PAST&from=0&size=20
2023-08-03 12:43:08,262 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-4] Accept=[application/json, application/*+json]
2023-08-03 12:43:08,267 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-4] Response 200 OK
2023-08-03 12:43:08,267 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-4] Reading to [java.lang.Object]
2023-08-03 12:43:08,293 INFO ru.practicum.shareit.booking.BookingController [http-nio-8080-exec-5] Get booking with state PAST, userId=4, from=0, size=20
2023-08-03 12:43:08,293 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-5] HTTP GET http://localhost:9090/bookings/owner?state=PAST&from=0&size=20
2023-08-03 12:43:08,294 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-5] Accept=[application/json, application/*+json]
2023-08-03 12:43:08,299 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-5] Response 200 OK
2023-08-03 12:43:08,300 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-5] Reading to [java.lang.Object]
2023-08-03 12:43:08,323 INFO ru.practicum.shareit.item.ItemController [http-nio-8080-exec-6] Request from user ID: 6 on get item. ID: 4
2023-08-03 12:43:08,323 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-6] HTTP GET http://localhost:9090/items/4
2023-08-03 12:43:08,323 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-6] Accept=[application/json, application/*+json]
2023-08-03 12:43:08,332 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-6] Response 200 OK
2023-08-03 12:43:08,332 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-6] Reading to [java.lang.Object]
2023-08-03 12:43:08,373 INFO ru.practicum.shareit.request.RequestController [http-nio-8080-exec-7] Add request on item RequestDto(id=0, description=Хотел бы воспользоваться щёткой для обуви, created=null, items=null), user id: 99
2023-08-03 12:43:08,374 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-7] HTTP POST http://localhost:9090/requests
2023-08-03 12:43:08,374 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-7] Accept=[application/json, application/*+json]
2023-08-03 12:43:08,375 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-7] Writing [RequestDto(id=0, description=Хотел бы воспользоваться щёткой для обуви, created=null, items=null)] as "application/json"
2023-08-03 12:43:08,393 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-7] Response 404 NOT_FOUND
2023-08-03 12:43:08,417 INFO ru.practicum.shareit.ErrorHandler [http-nio-8080-exec-8] Validation failed for field: description. Error message: Description can't blank
2023-08-03 12:43:08,437 INFO ru.practicum.shareit.request.RequestController [http-nio-8080-exec-10] Request on get all requests from user id: 99
2023-08-03 12:43:08,438 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-10] HTTP GET http://localhost:9090/requests?from=0&size=20
2023-08-03 12:43:08,438 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-10] Accept=[application/json, application/*+json]
2023-08-03 12:43:08,442 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-10] Response 404 NOT_FOUND
2023-08-03 12:43:08,463 INFO ru.practicum.shareit.request.RequestController [http-nio-8080-exec-1] Request on get all requests from user id: 1
2023-08-03 12:43:08,463 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-1] HTTP GET http://localhost:9090/requests?from=0&size=20
2023-08-03 12:43:08,463 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-1] Accept=[application/json, application/*+json]
2023-08-03 12:43:08,472 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-1] Response 200 OK
2023-08-03 12:43:08,472 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-1] Reading to [java.lang.Object]
2023-08-03 12:43:08,491 INFO ru.practicum.shareit.request.RequestController [http-nio-8080-exec-2] Request on get all requests
2023-08-03 12:43:08,491 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-2] HTTP GET http://localhost:9090/requests/all?from=0&size=20
2023-08-03 12:43:08,492 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-2] Accept=[application/json, application/*+json]
2023-08-03 12:43:08,501 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-2] Response 200 OK
2023-08-03 12:43:08,501 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-2] Reading to [java.lang.Object]
2023-08-03 12:43:08,524 INFO ru.practicum.shareit.ErrorHandler [http-nio-8080-exec-3] Validation failed for field: size. Error message: должно быть больше 0
2023-08-03 12:43:08,545 INFO ru.practicum.shareit.ErrorHandler [http-nio-8080-exec-5] Validation failed for field: from. Error message: должно быть больше или равно 0
2023-08-03 12:43:08,563 INFO ru.practicum.shareit.ErrorHandler [http-nio-8080-exec-7] Validation failed for field: size. Error message: должно быть больше 0
2023-08-03 12:43:08,585 INFO ru.practicum.shareit.request.RequestController [http-nio-8080-exec-9] Request on get all requests
2023-08-03 12:43:08,585 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-9] HTTP GET http://localhost:9090/requests/all?from=0&size=20
2023-08-03 12:43:08,585 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-9] Accept=[application/json, application/*+json]
2023-08-03 12:43:08,589 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-9] Response 200 OK
2023-08-03 12:43:08,589 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-9] Reading to [java.lang.Object]
2023-08-03 12:43:08,611 INFO ru.practicum.shareit.request.RequestController [http-nio-8080-exec-10] Add request on item RequestDto(id=0, description=Хотел бы воспользоваться щёткой для обуви, created=null, items=null), user id: 1
2023-08-03 12:43:08,611 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-10] HTTP POST http://localhost:9090/requests
2023-08-03 12:43:08,611 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-10] Accept=[application/json, application/*+json]
2023-08-03 12:43:08,611 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-10] Writing [RequestDto(id=0, description=Хотел бы воспользоваться щёткой для обуви, created=null, items=null)] as "application/json"
2023-08-03 12:43:08,620 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-10] Response 200 OK
2023-08-03 12:43:08,620 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-10] Reading to [java.lang.Object]
2023-08-03 12:43:09,644 INFO ru.practicum.shareit.request.RequestController [http-nio-8080-exec-1] Request on get all requests from user id: 1
2023-08-03 12:43:09,644 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-1] HTTP GET http://localhost:9090/requests?from=0&size=20
2023-08-03 12:43:09,644 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-1] Accept=[application/json, application/*+json]
2023-08-03 12:43:09,649 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-1] Response 200 OK
2023-08-03 12:43:09,649 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-1] Reading to [java.lang.Object]
2023-08-03 12:43:09,667 INFO ru.practicum.shareit.item.ItemController [http-nio-8080-exec-2] Request on add ItemDto(id=0, name=Щётка для обуви, description=Стандартная щётка для обуви, available=true, requestId=1), user id: 4
2023-08-03 12:43:09,667 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-2] HTTP POST http://localhost:9090/items
2023-08-03 12:43:09,667 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-2] Accept=[application/json, application/*+json]
2023-08-03 12:43:09,667 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-2] Writing [ItemDto(id=0, name=Щётка для обуви, description=Стандартная щётка для обуви, available=true, requestId=1)] as "application/json"
2023-08-03 12:43:09,671 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-2] Response 200 OK
2023-08-03 12:43:09,671 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-2] Reading to [java.lang.Object]
2023-08-03 12:43:09,693 INFO ru.practicum.shareit.request.RequestController [http-nio-8080-exec-3] Request on get all requests from user id: 1
2023-08-03 12:43:09,693 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-3] HTTP GET http://localhost:9090/requests?from=0&size=20
2023-08-03 12:43:09,694 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-3] Accept=[application/json, application/*+json]
2023-08-03 12:43:09,700 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-3] Response 200 OK
2023-08-03 12:43:09,701 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-3] Reading to [java.lang.Object]
2023-08-03 12:43:09,722 INFO ru.practicum.shareit.request.RequestController [http-nio-8080-exec-4] Request on get all requests
2023-08-03 12:43:09,722 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-4] HTTP GET http://localhost:9090/requests/all?from=0&size=20
2023-08-03 12:43:09,722 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-4] Accept=[application/json, application/*+json]
2023-08-03 12:43:09,730 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-4] Response 200 OK
2023-08-03 12:43:09,730 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-4] Reading to [java.lang.Object]
2023-08-03 12:43:09,751 INFO ru.practicum.shareit.request.RequestController [http-nio-8080-exec-5] Request on get all requests
2023-08-03 12:43:09,751 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-5] HTTP GET http://localhost:9090/requests/all?from=0&size=20
2023-08-03 12:43:09,751 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-5] Accept=[application/json, application/*+json]
2023-08-03 12:43:09,755 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-5] Response 200 OK
2023-08-03 12:43:09,755 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-5] Reading to [java.lang.Object]
2023-08-03 12:43:09,778 INFO ru.practicum.shareit.request.RequestController [http-nio-8080-exec-6] Request from user ID: 99 on get request. ID: 1
2023-08-03 12:43:09,778 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-6] HTTP GET http://localhost:9090/requests/1
2023-08-03 12:43:09,779 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-6] Accept=[application/json, application/*+json]
2023-08-03 12:43:09,782 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-6] Response 404 NOT_FOUND
2023-08-03 12:43:09,804 INFO ru.practicum.shareit.request.RequestController [http-nio-8080-exec-7] Request from user ID: 1 on get request. ID: 99
2023-08-03 12:43:09,804 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-7] HTTP GET http://localhost:9090/requests/99
2023-08-03 12:43:09,804 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-7] Accept=[application/json, application/*+json]
2023-08-03 12:43:09,808 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-7] Response 404 NOT_FOUND
2023-08-03 12:43:09,827 INFO ru.practicum.shareit.request.RequestController [http-nio-8080-exec-8] Request from user ID: 4 on get request. ID: 1
2023-08-03 12:43:09,828 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-8] HTTP GET http://localhost:9090/requests/1
2023-08-03 12:43:09,828 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-8] Accept=[application/json, application/*+json]
2023-08-03 12:43:09,832 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-8] Response 200 OK
2023-08-03 12:43:09,833 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-8] Reading to [java.lang.Object]
2023-08-03 12:43:09,856 INFO ru.practicum.shareit.request.RequestController [http-nio-8080-exec-9] Request from user ID: 1 on get request. ID: 1
2023-08-03 12:43:09,857 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-9] HTTP GET http://localhost:9090/requests/1
2023-08-03 12:43:09,857 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-9] Accept=[application/json, application/*+json]
2023-08-03 12:43:09,861 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-9] Response 200 OK
2023-08-03 12:43:09,862 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-9] Reading to [java.lang.Object]
2023-08-03 12:43:09,888 INFO ru.practicum.shareit.ErrorHandler [http-nio-8080-exec-10] Validation failed for field: size. Error message: должно быть больше 0
2023-08-03 12:43:09,909 INFO ru.practicum.shareit.ErrorHandler [http-nio-8080-exec-2] Validation failed for field: size. Error message: должно быть больше 0
2023-08-03 12:43:09,931 INFO ru.practicum.shareit.ErrorHandler [http-nio-8080-exec-4] Validation failed for field: from. Error message: должно быть больше или равно 0
2023-08-03 12:43:09,952 INFO ru.practicum.shareit.ErrorHandler [http-nio-8080-exec-6] Validation failed for field: from. Error message: должно быть больше или равно 0
2023-08-03 12:43:09,984 INFO ru.practicum.shareit.ErrorHandler [http-nio-8080-exec-8] Validation failed for field: size. Error message: должно быть больше 0
2023-08-03 12:43:10,004 INFO ru.practicum.shareit.ErrorHandler [http-nio-8080-exec-10] Validation failed for field: size. Error message: должно быть больше 0
2023-08-03 12:43:10,025 INFO ru.practicum.shareit.booking.BookingController [http-nio-8080-exec-2] Get booking with state ALL, userId=1, from=4, size=2
2023-08-03 12:43:10,026 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-2] HTTP GET http://localhost:9090/bookings?state=ALL&from=4&size=2
2023-08-03 12:43:10,026 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-2] Accept=[application/json, application/*+json]
2023-08-03 12:43:10,030 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-2] Response 200 OK
2023-08-03 12:43:10,030 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-2] Reading to [java.lang.Object]
2023-08-03 12:43:10,050 INFO ru.practicum.shareit.booking.BookingController [http-nio-8080-exec-3] Get booking with state ALL, userId=1, from=1, size=1
2023-08-03 12:43:10,050 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-3] HTTP GET http://localhost:9090/bookings/owner?state=ALL&from=1&size=1
2023-08-03 12:43:10,050 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-3] Accept=[application/json, application/*+json]
2023-08-03 12:43:10,059 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-3] Response 200 OK
2023-08-03 12:43:10,059 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-3] Reading to [java.lang.Object]
2023-08-03 13:43:43,229 INFO org.hibernate.validator.internal.util.Version [background-preinit] HV000001: Hibernate Validator 6.2.5.Final
2023-08-03 13:43:43,234 INFO org.springframework.boot.StartupInfoLogger [main] Starting ShareItGateway using Java 18.0.2 on DESKTOP-HBQA1DH with PID 5372 (C:\Users\Aser\dev\java-shareit\shareIt-gateway\target\classes started by Aser in C:\Users\Aser\dev\java-shareit)
2023-08-03 13:43:43,235 INFO org.springframework.boot.SpringApplication [main] No active profile set, falling back to 1 default profile: "default"
2023-08-03 13:43:44,151 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [main] Tomcat initialized with port(s): 8080 (http)
2023-08-03 13:43:44,158 INFO org.apache.juli.logging.DirectJDKLog [main] Initializing ProtocolHandler ["http-nio-8080"]
2023-08-03 13:43:44,159 INFO org.apache.juli.logging.DirectJDKLog [main] Starting service [Tomcat]
2023-08-03 13:43:44,159 INFO org.apache.juli.logging.DirectJDKLog [main] Starting Servlet engine: [Apache Tomcat/9.0.71]
2023-08-03 13:43:44,222 INFO org.apache.juli.logging.DirectJDKLog [main] Initializing Spring embedded WebApplicationContext
2023-08-03 13:43:44,222 INFO org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext [main] Root WebApplicationContext: initialization completed in 943 ms
2023-08-03 13:43:44,798 INFO org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver [main] Exposing 1 endpoint(s) beneath base path '/actuator'
2023-08-03 13:43:44,814 INFO org.apache.juli.logging.DirectJDKLog [main] Starting ProtocolHandler ["http-nio-8080"]
2023-08-03 13:43:44,830 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [main] Tomcat started on port(s): 8080 (http) with context path ''
2023-08-03 13:43:44,842 INFO org.springframework.boot.StartupInfoLogger [main] Started ShareItGateway in 2.008 seconds (JVM running for 2.29)
2023-08-03 13:43:52,202 INFO org.apache.juli.logging.DirectJDKLog [http-nio-8080-exec-1] Initializing Spring DispatcherServlet 'dispatcherServlet'
2023-08-03 13:43:52,202 INFO org.springframework.web.servlet.FrameworkServlet [http-nio-8080-exec-1] Initializing Servlet 'dispatcherServlet'
2023-08-03 13:43:52,203 INFO org.springframework.web.servlet.FrameworkServlet [http-nio-8080-exec-1] Completed initialization in 1 ms
2023-08-03 13:43:52,320 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-1] HTTP POST http://localhost:9090/users
2023-08-03 13:43:52,325 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-1] Accept=[application/json, application/*+json]
2023-08-03 13:43:52,336 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-1] Writing [UserDto(id=0, email=user@user.com, name=user)] as "application/json"
2023-08-03 13:43:52,567 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-1] Response 201 CREATED
2023-08-03 13:43:52,567 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-1] Reading to [java.lang.Object]
2023-08-03 13:43:52,624 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-3] HTTP POST http://localhost:9090/users
2023-08-03 13:43:52,624 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-3] Accept=[application/json, application/*+json]
2023-08-03 13:43:52,625 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-3] Writing [UserDto(id=0, email=user@user.com, name=user)] as "application/json"
2023-08-03 13:43:52,642 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-3] Response 500 INTERNAL_SERVER_ERROR
2023-08-03 13:43:52,678 INFO ru.practicum.shareit.ErrorHandler [http-nio-8080-exec-5] Validation failed for field: email. Error message: Email can not be null
2023-08-03 13:43:52,709 INFO ru.practicum.shareit.ErrorHandler [http-nio-8080-exec-7] Validation failed for field: email. Error message: Email is wrong
2023-08-03 13:43:52,734 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-9] HTTP PATCH http://localhost:9090/users/1
2023-08-03 13:43:52,735 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-9] Accept=[application/json, application/*+json]
2023-08-03 13:43:52,735 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-9] Writing [UserDto(id=0, email=update@user.com, name=update)] as "application/json"
2023-08-03 13:43:52,767 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-9] Response 200 OK
2023-08-03 13:43:52,767 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-9] Reading to [java.lang.Object]
2023-08-03 13:43:52,768 INFO ru.practicum.shareit.user.UserController [http-nio-8080-exec-9] Has been updated: <200,{id=1, email=update@user.com, name=update},[Content-Type:"application/json", Transfer-Encoding:"chunked", Date:"Thu, 03 Aug 2023 09:43:52 GMT", Keep-Alive:"timeout=60", Connection:"keep-alive"]>
2023-08-03 13:43:52,791 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-10] HTTP POST http://localhost:9090/users
2023-08-03 13:43:52,791 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-10] Accept=[application/json, application/*+json]
2023-08-03 13:43:52,791 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-10] Writing [UserDto(id=0, email=user@user.com, name=user)] as "application/json"
2023-08-03 13:43:52,799 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-10] Response 201 CREATED
2023-08-03 13:43:52,800 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-10] Reading to [java.lang.Object]
2023-08-03 13:43:52,819 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-2] HTTP PATCH http://localhost:9090/users/1
2023-08-03 13:43:52,819 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-2] Accept=[application/json, application/*+json]
2023-08-03 13:43:52,820 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-2] Writing [UserDto(id=0, email=null, name=updateName)] as "application/json"
2023-08-03 13:43:52,826 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-2] Response 200 OK
2023-08-03 13:43:52,828 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-2] Reading to [java.lang.Object]
2023-08-03 13:43:52,829 INFO ru.practicum.shareit.user.UserController [http-nio-8080-exec-2] Has been updated: <200,{id=1, email=update@user.com, name=updateName},[Content-Type:"application/json", Transfer-Encoding:"chunked", Date:"Thu, 03 Aug 2023 09:43:52 GMT", Keep-Alive:"timeout=60", Connection:"keep-alive"]>
2023-08-03 13:43:52,854 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-1] HTTP PATCH http://localhost:9090/users/1
2023-08-03 13:43:52,855 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-1] Accept=[application/json, application/*+json]
2023-08-03 13:43:52,855 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-1] Writing [UserDto(id=0, email=updateName@user.com, name=null)] as "application/json"
2023-08-03 13:43:52,863 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-1] Response 200 OK
2023-08-03 13:43:52,864 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-1] Reading to [java.lang.Object]
2023-08-03 13:43:52,864 INFO ru.practicum.shareit.user.UserController [http-nio-8080-exec-1] Has been updated: <200,{id=1, email=updateName@user.com, name=updateName},[Content-Type:"application/json", Transfer-Encoding:"chunked", Date:"Thu, 03 Aug 2023 09:43:52 GMT", Keep-Alive:"timeout=60", Connection:"keep-alive"]>
2023-08-03 13:43:52,888 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-3] HTTP PATCH http://localhost:9090/users/1
2023-08-03 13:43:52,889 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-3] Accept=[application/json, application/*+json]
2023-08-03 13:43:52,889 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-3] Writing [UserDto(id=0, email=updateName@user.com, name=null)] as "application/json"
2023-08-03 13:43:52,894 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-3] Response 200 OK
2023-08-03 13:43:52,895 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-3] Reading to [java.lang.Object]
2023-08-03 13:43:52,895 INFO ru.practicum.shareit.user.UserController [http-nio-8080-exec-3] Has been updated: <200,{id=1, email=updateName@user.com, name=updateName},[Content-Type:"application/json", Transfer-Encoding:"chunked", Date:"Thu, 03 Aug 2023 09:43:52 GMT", Keep-Alive:"timeout=60", Connection:"keep-alive"]>
2023-08-03 13:43:52,914 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-4] HTTP PATCH http://localhost:9090/users/1
2023-08-03 13:43:52,914 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-4] Accept=[application/json, application/*+json]
2023-08-03 13:43:52,915 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-4] Writing [UserDto(id=0, email=user@user.com, name=null)] as "application/json"
2023-08-03 13:43:52,921 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-4] Response 500 INTERNAL_SERVER_ERROR
2023-08-03 13:43:52,921 INFO ru.practicum.shareit.user.UserController [http-nio-8080-exec-4] Has been updated: <500 INTERNAL_SERVER_ERROR Internal Server Error,[B@5d977ccf,[]>
2023-08-03 13:43:52,941 INFO ru.practicum.shareit.user.UserController [http-nio-8080-exec-6] Request to get user with ID: 1
2023-08-03 13:43:52,942 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-6] HTTP GET http://localhost:9090/users/1
2023-08-03 13:43:52,942 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-6] Accept=[application/json, application/*+json]
2023-08-03 13:43:52,948 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-6] Response 200 OK
2023-08-03 13:43:52,949 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-6] Reading to [java.lang.Object]
2023-08-03 13:43:52,967 INFO ru.practicum.shareit.user.UserController [http-nio-8080-exec-7] Request to get user with ID: 3
2023-08-03 13:43:52,968 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-7] HTTP GET http://localhost:9090/users/3
2023-08-03 13:43:52,968 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-7] Accept=[application/json, application/*+json]
2023-08-03 13:43:52,972 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-7] Response 200 OK
2023-08-03 13:43:52,973 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-7] Reading to [java.lang.Object]
2023-08-03 13:43:52,994 INFO ru.practicum.shareit.user.UserController [http-nio-8080-exec-8] Request to get user with ID: 100
2023-08-03 13:43:52,995 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-8] HTTP GET http://localhost:9090/users/100
2023-08-03 13:43:52,996 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-8] Accept=[application/json, application/*+json]
2023-08-03 13:43:53,003 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-8] Response 404 NOT_FOUND
2023-08-03 13:43:53,021 INFO ru.practicum.shareit.user.UserController [http-nio-8080-exec-9] Request to delete with id: 3
2023-08-03 13:43:53,022 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-9] HTTP DELETE http://localhost:9090/users/3
2023-08-03 13:43:53,022 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-9] Accept=[application/json, application/*+json]
2023-08-03 13:43:53,034 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-9] Response 204 NO_CONTENT
2023-08-03 13:43:53,055 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-10] HTTP POST http://localhost:9090/users
2023-08-03 13:43:53,055 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-10] Accept=[application/json, application/*+json]
2023-08-03 13:43:53,056 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-10] Writing [UserDto(id=0, email=user@user.com, name=user)] as "application/json"
2023-08-03 13:43:53,060 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-10] Response 201 CREATED
2023-08-03 13:43:53,061 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-10] Reading to [java.lang.Object]
2023-08-03 13:43:53,085 INFO ru.practicum.shareit.user.UserController [http-nio-8080-exec-2] Request on get all
2023-08-03 13:43:53,086 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-2] HTTP GET http://localhost:9090/users
2023-08-03 13:43:53,086 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-2] Accept=[application/json, application/*+json]
2023-08-03 13:43:53,105 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-2] Response 200 OK
2023-08-03 13:43:53,106 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-2] Reading to [java.lang.Object]
2023-08-03 13:43:53,148 INFO ru.practicum.shareit.item.ItemController [http-nio-8080-exec-1] Request on add ItemDto(id=0, name=Дрель, description=Простая дрель, available=true, requestId=null), user id: 1
2023-08-03 13:43:53,152 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-1] HTTP POST http://localhost:9090/items
2023-08-03 13:43:53,153 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-1] Accept=[application/json, application/*+json]
2023-08-03 13:43:53,154 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-1] Writing [ItemDto(id=0, name=Дрель, description=Простая дрель, available=true, requestId=null)] as "application/json"
2023-08-03 13:43:53,183 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-1] Response 200 OK
2023-08-03 13:43:53,184 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-1] Reading to [java.lang.Object]
2023-08-03 13:43:53,204 INFO ru.practicum.shareit.ErrorHandler [http-nio-8080-exec-3] Missing request header: Required request header 'X-Sharer-User-Id' for method parameter type Long is not present
2023-08-03 13:43:53,230 INFO ru.practicum.shareit.item.ItemController [http-nio-8080-exec-5] Request on add ItemDto(id=0, name=Дрель, description=Простая дрель, available=true, requestId=null), user id: 10
2023-08-03 13:43:53,231 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-5] HTTP POST http://localhost:9090/items
2023-08-03 13:43:53,231 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-5] Accept=[application/json, application/*+json]
2023-08-03 13:43:53,232 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-5] Writing [ItemDto(id=0, name=Дрель, description=Простая дрель, available=true, requestId=null)] as "application/json"
2023-08-03 13:43:53,239 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-5] Response 404 NOT_FOUND
2023-08-03 13:43:53,267 INFO ru.practicum.shareit.ErrorHandler [http-nio-8080-exec-6] Validation failed for field: available. Error message: Available should be specified
2023-08-03 13:43:53,293 INFO ru.practicum.shareit.ErrorHandler [http-nio-8080-exec-8] Validation failed for field: name. Error message: Name can't blank
2023-08-03 13:43:53,317 INFO ru.practicum.shareit.ErrorHandler [http-nio-8080-exec-10] Validation failed for field: description. Error message: Description can't blank
2023-08-03 13:43:53,339 INFO ru.practicum.shareit.item.ItemController [http-nio-8080-exec-1] Request on edit item id: 1, ItemDto(id=1, name=Дрель+, description=Аккумуляторная дрель, available=false, requestId=null), user id: 1
2023-08-03 13:43:53,340 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-1] HTTP PATCH http://localhost:9090/items/1
2023-08-03 13:43:53,340 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-1] Accept=[application/json, application/*+json]
2023-08-03 13:43:53,341 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-1] Writing [ItemDto(id=1, name=Дрель+, description=Аккумуляторная дрель, available=false, requestId=null)] as "application/json"
2023-08-03 13:43:53,352 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-1] Response 200 OK
2023-08-03 13:43:53,352 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-1] Reading to [java.lang.Object]
2023-08-03 13:43:53,377 INFO ru.practicum.shareit.ErrorHandler [http-nio-8080-exec-3] Missing request header: Required request header 'X-Sharer-User-Id' for method parameter type Long is not present
2023-08-03 13:43:53,400 INFO ru.practicum.shareit.item.ItemController [http-nio-8080-exec-5] Request on edit item id: 1, ItemDto(id=0, name=Дрель, description=Простая дрель, available=false, requestId=null), user id: 3
2023-08-03 13:43:53,400 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-5] HTTP PATCH http://localhost:9090/items/1
2023-08-03 13:43:53,401 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-5] Accept=[application/json, application/*+json]
2023-08-03 13:43:53,401 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-5] Writing [ItemDto(id=0, name=Дрель, description=Простая дрель, available=false, requestId=null)] as "application/json"
2023-08-03 13:43:53,405 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-5] Response 404 NOT_FOUND
2023-08-03 13:43:53,420 INFO ru.practicum.shareit.item.ItemController [http-nio-8080-exec-6] Request on edit item id: 1, ItemDto(id=0, name=null, description=null, available=true, requestId=null), user id: 1
2023-08-03 13:43:53,421 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-6] HTTP PATCH http://localhost:9090/items/1
2023-08-03 13:43:53,421 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-6] Accept=[application/json, application/*+json]
2023-08-03 13:43:53,421 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-6] Writing [ItemDto(id=0, name=null, description=null, available=true, requestId=null)] as "application/json"
2023-08-03 13:43:53,427 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-6] Response 200 OK
2023-08-03 13:43:53,429 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-6] Reading to [java.lang.Object]
2023-08-03 13:43:53,451 INFO ru.practicum.shareit.item.ItemController [http-nio-8080-exec-7] Request on edit item id: 1, ItemDto(id=0, name=null, description=Аккумуляторная дрель + аккумулятор, available=null, requestId=null), user id: 1
2023-08-03 13:43:53,452 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-7] HTTP PATCH http://localhost:9090/items/1
2023-08-03 13:43:53,453 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-7] Accept=[application/json, application/*+json]
2023-08-03 13:43:53,453 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-7] Writing [ItemDto(id=0, name=null, description=Аккумуляторная дрель + аккумулятор, available=null, requestId=null)] as "application/json"
2023-08-03 13:43:53,462 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-7] Response 200 OK
2023-08-03 13:43:53,463 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-7] Reading to [java.lang.Object]
2023-08-03 13:43:53,486 INFO ru.practicum.shareit.item.ItemController [http-nio-8080-exec-8] Request on edit item id: 1, ItemDto(id=0, name=Аккумуляторная дрель, description=null, available=null, requestId=null), user id: 1
2023-08-03 13:43:53,487 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-8] HTTP PATCH http://localhost:9090/items/1
2023-08-03 13:43:53,487 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-8] Accept=[application/json, application/*+json]
2023-08-03 13:43:53,487 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-8] Writing [ItemDto(id=0, name=Аккумуляторная дрель, description=null, available=null, requestId=null)] as "application/json"
2023-08-03 13:43:53,495 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-8] Response 200 OK
2023-08-03 13:43:53,495 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-8] Reading to [java.lang.Object]
2023-08-03 13:43:53,517 INFO ru.practicum.shareit.item.ItemController [http-nio-8080-exec-9] Request from user ID: 1 on get item. ID: 1
2023-08-03 13:43:53,518 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-9] HTTP GET http://localhost:9090/items/1
2023-08-03 13:43:53,518 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-9] Accept=[application/json, application/*+json]
2023-08-03 13:43:53,543 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-9] Response 200 OK
2023-08-03 13:43:53,544 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-9] Reading to [java.lang.Object]
2023-08-03 13:43:53,559 INFO ru.practicum.shareit.item.ItemController [http-nio-8080-exec-10] Request from user ID: 4 on get item. ID: 1
2023-08-03 13:43:53,559 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-10] HTTP GET http://localhost:9090/items/1
2023-08-03 13:43:53,560 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-10] Accept=[application/json, application/*+json]
2023-08-03 13:43:53,566 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-10] Response 200 OK
2023-08-03 13:43:53,576 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-10] Reading to [java.lang.Object]
2023-08-03 13:43:53,595 INFO ru.practicum.shareit.item.ItemController [http-nio-8080-exec-2] Request from user ID: 4 on get item. ID: 100
2023-08-03 13:43:53,595 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-2] HTTP GET http://localhost:9090/items/100
2023-08-03 13:43:53,595 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-2] Accept=[application/json, application/*+json]
2023-08-03 13:43:53,598 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-2] Response 404 NOT_FOUND
2023-08-03 13:43:53,613 INFO ru.practicum.shareit.item.ItemController [http-nio-8080-exec-1] Request on add ItemDto(id=0, name=Отвертка, description=Аккумуляторная отвертка, available=true, requestId=null), user id: 4
2023-08-03 13:43:53,613 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-1] HTTP POST http://localhost:9090/items
2023-08-03 13:43:53,614 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-1] Accept=[application/json, application/*+json]
2023-08-03 13:43:53,614 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-1] Writing [ItemDto(id=0, name=Отвертка, description=Аккумуляторная отвертка, available=true, requestId=null)] as "application/json"
2023-08-03 13:43:53,619 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-1] Response 200 OK
2023-08-03 13:43:53,619 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-1] Reading to [java.lang.Object]
2023-08-03 13:43:53,644 INFO ru.practicum.shareit.item.ItemController [http-nio-8080-exec-3] Request on add ItemDto(id=0, name=Клей Момент, description=Тюбик суперклея марки Момент, available=true, requestId=null), user id: 4
2023-08-03 13:43:53,645 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-3] HTTP POST http://localhost:9090/items
2023-08-03 13:43:53,645 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-3] Accept=[application/json, application/*+json]
2023-08-03 13:43:53,646 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-3] Writing [ItemDto(id=0, name=Клей Момент, description=Тюбик суперклея марки Момент, available=true, requestId=null)] as "application/json"
2023-08-03 13:43:53,652 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-3] Response 200 OK
2023-08-03 13:43:53,653 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-3] Reading to [java.lang.Object]
2023-08-03 13:43:53,682 INFO ru.practicum.shareit.item.ItemController [http-nio-8080-exec-4] Request on get all for user id: 1
2023-08-03 13:43:53,683 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-4] HTTP GET http://localhost:9090/items?from=0&size=20
2023-08-03 13:43:53,684 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-4] Accept=[application/json, application/*+json]
2023-08-03 13:43:53,722 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-4] Response 200 OK
2023-08-03 13:43:53,722 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-4] Reading to [java.lang.Object]
2023-08-03 13:43:53,743 INFO ru.practicum.shareit.item.ItemController [http-nio-8080-exec-5] Request on get all for user id: 4
2023-08-03 13:43:53,743 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-5] HTTP GET http://localhost:9090/items?from=0&size=20
2023-08-03 13:43:53,744 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-5] Accept=[application/json, application/*+json]
2023-08-03 13:43:53,756 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-5] Response 200 OK
2023-08-03 13:43:53,757 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-5] Reading to [java.lang.Object]
2023-08-03 13:43:53,786 INFO ru.practicum.shareit.item.ItemController [http-nio-8080-exec-6] Request on search text: аккУМУляторная
2023-08-03 13:43:53,787 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-6] HTTP GET http://localhost:9090/items/search?text=%D0%B0%D0%BA%D0%BA%D1%83%D0%BC%D1%83%D0%BB%D1%8F%D1%82%D0%BE%D1%80%D0%BD%D0%B0%D1%8F&from=0&size=20
2023-08-03 13:43:53,787 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-6] Accept=[application/json, application/*+json]
2023-08-03 13:43:53,800 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-6] Response 200 OK
2023-08-03 13:43:53,801 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-6] Reading to [java.lang.Object]
2023-08-03 13:43:53,827 INFO ru.practicum.shareit.item.ItemController [http-nio-8080-exec-7] Request on edit item id: 2, ItemDto(id=0, name=null, description=null, available=false, requestId=null), user id: 4
2023-08-03 13:43:53,828 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-7] HTTP PATCH http://localhost:9090/items/2
2023-08-03 13:43:53,828 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-7] Accept=[application/json, application/*+json]
2023-08-03 13:43:53,829 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-7] Writing [ItemDto(id=0, name=null, description=null, available=false, requestId=null)] as "application/json"
2023-08-03 13:43:53,834 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-7] Response 200 OK
2023-08-03 13:43:53,835 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-7] Reading to [java.lang.Object]
2023-08-03 13:43:53,857 INFO ru.practicum.shareit.item.ItemController [http-nio-8080-exec-8] Request on search text: дРелЬ
2023-08-03 13:43:53,857 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-8] HTTP GET http://localhost:9090/items/search?text=%D0%B4%D1%80%D0%B5%D0%BB%D1%8C&from=0&size=20
2023-08-03 13:43:53,858 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-8] Accept=[application/json, application/*+json]
2023-08-03 13:43:53,865 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-8] Response 200 OK
2023-08-03 13:43:53,865 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-8] Reading to [java.lang.Object]
2023-08-03 13:43:53,887 INFO ru.practicum.shareit.item.ItemController [http-nio-8080-exec-9] Request on search text: аккУМУляторная
2023-08-03 13:43:53,888 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-9] HTTP GET http://localhost:9090/items/search?text=%D0%B0%D0%BA%D0%BA%D1%83%D0%BC%D1%83%D0%BB%D1%8F%D1%82%D0%BE%D1%80%D0%BD%D0%B0%D1%8F&from=0&size=20
2023-08-03 13:43:53,889 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-9] Accept=[application/json, application/*+json]
2023-08-03 13:43:53,895 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-9] Response 200 OK
2023-08-03 13:43:53,897 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-9] Reading to [java.lang.Object]
2023-08-03 13:43:53,920 INFO ru.practicum.shareit.item.ItemController [http-nio-8080-exec-10] Request on edit item id: 2, ItemDto(id=0, name=null, description=null, available=true, requestId=null), user id: 4
2023-08-03 13:43:53,921 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-10] HTTP PATCH http://localhost:9090/items/2
2023-08-03 13:43:53,921 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-10] Accept=[application/json, application/*+json]
2023-08-03 13:43:53,922 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-10] Writing [ItemDto(id=0, name=null, description=null, available=true, requestId=null)] as "application/json"
2023-08-03 13:43:53,930 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-10] Response 200 OK
2023-08-03 13:43:53,930 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-10] Reading to [java.lang.Object]
2023-08-03 13:43:53,951 INFO ru.practicum.shareit.item.ItemController [http-nio-8080-exec-2] Request on search text: оТверТ
2023-08-03 13:43:53,952 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-2] HTTP GET http://localhost:9090/items/search?text=%D0%BE%D1%82%D0%B2%D0%B5%D1%80%D1%82&from=0&size=20
2023-08-03 13:43:53,952 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-2] Accept=[application/json, application/*+json]
2023-08-03 13:43:53,955 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-2] Response 200 OK
2023-08-03 13:43:53,955 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-2] Reading to [java.lang.Object]
2023-08-03 13:43:53,975 INFO ru.practicum.shareit.item.ItemController [http-nio-8080-exec-1] Request on search text: 
2023-08-03 13:43:53,999 INFO ru.practicum.shareit.item.ItemController [http-nio-8080-exec-3] Request on edit item id: 2, ItemDto(id=0, name=null, description=null, available=false, requestId=null), user id: 4
2023-08-03 13:43:54,000 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-3] HTTP PATCH http://localhost:9090/items/2
2023-08-03 13:43:54,000 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-3] Accept=[application/json, application/*+json]
2023-08-03 13:43:54,001 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-3] Writing [ItemDto(id=0, name=null, description=null, available=false, requestId=null)] as "application/json"
2023-08-03 13:43:54,006 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-3] Response 200 OK
2023-08-03 13:43:54,007 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-3] Reading to [java.lang.Object]
2023-08-03 13:43:54,072 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-4] HTTP POST http://localhost:9090/bookings
2023-08-03 13:43:54,073 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-4] Accept=[application/json, application/*+json]
2023-08-03 13:43:54,081 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-4] Writing [BookingDto(id=0, itemId=2, start=2023-08-04T13:43:54, end=2023-08-05T13:43:54, status=null, booker=null)] as "application/json"
2023-08-03 13:43:54,117 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-4] Response 400 BAD_REQUEST
2023-08-03 13:43:54,152 INFO ru.practicum.shareit.item.ItemController [http-nio-8080-exec-5] Request on edit item id: 2, ItemDto(id=0, name=null, description=null, available=true, requestId=null), user id: 4
2023-08-03 13:43:54,153 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-5] HTTP PATCH http://localhost:9090/items/2
2023-08-03 13:43:54,155 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-5] Accept=[application/json, application/*+json]
2023-08-03 13:43:54,155 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-5] Writing [ItemDto(id=0, name=null, description=null, available=true, requestId=null)] as "application/json"
2023-08-03 13:43:54,165 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-5] Response 200 OK
2023-08-03 13:43:54,166 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-5] Reading to [java.lang.Object]
2023-08-03 13:43:54,226 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-7] HTTP POST http://localhost:9090/bookings
2023-08-03 13:43:54,227 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-7] Accept=[application/json, application/*+json]
2023-08-03 13:43:54,227 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-7] Writing [BookingDto(id=0, itemId=2, start=2023-08-04T13:43:54, end=2023-08-05T13:43:54, status=null, booker=null)] as "application/json"
2023-08-03 13:43:54,234 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-7] Response 404 NOT_FOUND
2023-08-03 13:43:54,259 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-8] HTTP POST http://localhost:9090/bookings
2023-08-03 13:43:54,259 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-8] Accept=[application/json, application/*+json]
2023-08-03 13:43:54,259 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-8] Writing [BookingDto(id=0, itemId=200, start=2023-08-04T13:43:54, end=2023-08-05T13:43:54, status=null, booker=null)] as "application/json"
2023-08-03 13:43:54,265 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-8] Response 404 NOT_FOUND
2023-08-03 13:43:54,313 INFO ru.practicum.shareit.ErrorHandler [http-nio-8080-exec-9] Validation failed for field: validDateOrder. Error message: End date must be after start date and dates cannot be equal
2023-08-03 13:43:54,314 INFO ru.practicum.shareit.ErrorHandler [http-nio-8080-exec-9] Validation failed for field: end. Error message: должно содержать дату, которая еще не наступила
2023-08-03 13:43:54,341 INFO ru.practicum.shareit.ErrorHandler [http-nio-8080-exec-2] Validation failed for field: validDateOrder. Error message: End date must be after start date and dates cannot be equal
2023-08-03 13:43:54,366 INFO ru.practicum.shareit.ErrorHandler [http-nio-8080-exec-3] Validation failed for field: validDateOrder. Error message: End date must be after start date and dates cannot be equal
2023-08-03 13:43:54,392 INFO ru.practicum.shareit.ErrorHandler [http-nio-8080-exec-6] Validation failed for field: validDateOrder. Error message: End date must be after start date and dates cannot be equal
2023-08-03 13:43:54,392 INFO ru.practicum.shareit.ErrorHandler [http-nio-8080-exec-6] Validation failed for field: start. Error message: не должно равняться null
2023-08-03 13:43:54,413 INFO ru.practicum.shareit.ErrorHandler [http-nio-8080-exec-7] Validation failed for field: end. Error message: не должно равняться null
2023-08-03 13:43:54,413 INFO ru.practicum.shareit.ErrorHandler [http-nio-8080-exec-7] Validation failed for field: validDateOrder. Error message: End date must be after start date and dates cannot be equal
2023-08-03 13:43:54,438 INFO ru.practicum.shareit.ErrorHandler [http-nio-8080-exec-9] Validation failed for field: start. Error message: должно содержать сегодняшнее число или дату, которая еще не наступила
2023-08-03 13:43:54,458 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-2] HTTP POST http://localhost:9090/bookings
2023-08-03 13:43:54,458 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-2] Accept=[application/json, application/*+json]
2023-08-03 13:43:54,458 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-2] Writing [BookingDto(id=0, itemId=2, start=2023-08-03T13:43:57, end=2023-08-03T13:43:58, status=null, booker=null)] as "application/json"
2023-08-03 13:43:54,473 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-2] Response 200 OK
2023-08-03 13:43:54,473 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-2] Reading to [java.lang.Object]
2023-08-03 13:43:54,498 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-1] HTTP PATCH http://localhost:9090/bookings/1?approved=true
2023-08-03 13:43:54,498 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-1] Accept=[application/json, application/*+json]
2023-08-03 13:43:54,507 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-1] Response 200 OK
2023-08-03 13:43:54,507 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-1] Reading to [java.lang.Object]
2023-08-03 13:43:54,533 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-3] HTTP POST http://localhost:9090/bookings
2023-08-03 13:43:54,534 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-3] Accept=[application/json, application/*+json]
2023-08-03 13:43:54,534 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-3] Writing [BookingDto(id=0, itemId=2, start=2023-08-04T13:43:54, end=2023-08-05T13:43:54, status=null, booker=null)] as "application/json"
2023-08-03 13:43:54,544 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-3] Response 200 OK
2023-08-03 13:43:54,545 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-3] Reading to [java.lang.Object]
2023-08-03 13:43:54,572 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-4] HTTP GET http://localhost:9090/bookings/2
2023-08-03 13:43:54,573 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-4] Accept=[application/json, application/*+json]
2023-08-03 13:43:54,582 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-4] Response 200 OK
2023-08-03 13:43:54,582 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-4] Reading to [java.lang.Object]
2023-08-03 13:43:54,606 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-6] HTTP GET http://localhost:9090/bookings/2
2023-08-03 13:43:54,607 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-6] Accept=[application/json, application/*+json]
2023-08-03 13:43:54,614 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-6] Response 200 OK
2023-08-03 13:43:54,615 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-6] Reading to [java.lang.Object]
2023-08-03 13:43:54,638 INFO ru.practicum.shareit.booking.BookingController [http-nio-8080-exec-5] Get booking with state ALL, userId=100, from=0, size=20
2023-08-03 13:43:54,638 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-5] HTTP GET http://localhost:9090/bookings?state=ALL&from=0&size=20
2023-08-03 13:43:54,638 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-5] Accept=[application/json, application/*+json]
2023-08-03 13:43:54,644 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-5] Response 404 NOT_FOUND
2023-08-03 13:43:54,665 INFO ru.practicum.shareit.booking.BookingController [http-nio-8080-exec-7] Get booking with state ALL, userId=100, from=0, size=20
2023-08-03 13:43:54,666 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-7] HTTP GET http://localhost:9090/bookings/owner?state=ALL&from=0&size=20
2023-08-03 13:43:54,666 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-7] Accept=[application/json, application/*+json]
2023-08-03 13:43:54,670 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-7] Response 404 NOT_FOUND
2023-08-03 13:43:54,689 INFO ru.practicum.shareit.booking.BookingController [http-nio-8080-exec-8] Get booking with state ALL, userId=1, from=0, size=20
2023-08-03 13:43:54,689 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-8] HTTP GET http://localhost:9090/bookings?state=ALL&from=0&size=20
2023-08-03 13:43:54,689 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-8] Accept=[application/json, application/*+json]
2023-08-03 13:43:54,695 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-8] Response 200 OK
2023-08-03 13:43:54,695 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-8] Reading to [java.lang.Object]
2023-08-03 13:43:54,718 INFO ru.practicum.shareit.booking.BookingController [http-nio-8080-exec-9] Get booking with state ALL, userId=1, from=0, size=20
2023-08-03 13:43:54,718 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-9] HTTP GET http://localhost:9090/bookings?state=ALL&from=0&size=20
2023-08-03 13:43:54,718 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-9] Accept=[application/json, application/*+json]
2023-08-03 13:43:54,724 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-9] Response 200 OK
2023-08-03 13:43:54,724 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-9] Reading to [java.lang.Object]
2023-08-03 13:43:54,751 INFO ru.practicum.shareit.booking.BookingController [http-nio-8080-exec-10] Get booking with state FUTURE, userId=1, from=0, size=20
2023-08-03 13:43:54,751 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-10] HTTP GET http://localhost:9090/bookings?state=FUTURE&from=0&size=20
2023-08-03 13:43:54,752 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-10] Accept=[application/json, application/*+json]
2023-08-03 13:43:54,760 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-10] Response 200 OK
2023-08-03 13:43:54,761 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-10] Reading to [java.lang.Object]
2023-08-03 13:43:54,790 INFO ru.practicum.shareit.ErrorHandler [http-nio-8080-exec-2] Bad booking state: Unknown state: UNSUPPORTED_STATUS
2023-08-03 13:43:54,812 INFO ru.practicum.shareit.booking.BookingController [http-nio-8080-exec-3] Get booking with state ALL, userId=4, from=0, size=20
2023-08-03 13:43:54,812 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-3] HTTP GET http://localhost:9090/bookings/owner?state=ALL&from=0&size=20
2023-08-03 13:43:54,813 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-3] Accept=[application/json, application/*+json]
2023-08-03 13:43:54,819 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-3] Response 200 OK
2023-08-03 13:43:54,820 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-3] Reading to [java.lang.Object]
2023-08-03 13:43:54,848 INFO ru.practicum.shareit.booking.BookingController [http-nio-8080-exec-4] Get booking with state ALL, userId=4, from=0, size=20
2023-08-03 13:43:54,849 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-4] HTTP GET http://localhost:9090/bookings/owner?state=ALL&from=0&size=20
2023-08-03 13:43:54,849 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-4] Accept=[application/json, application/*+json]
2023-08-03 13:43:54,854 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-4] Response 200 OK
2023-08-03 13:43:54,854 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-4] Reading to [java.lang.Object]
2023-08-03 13:43:54,877 INFO ru.practicum.shareit.booking.BookingController [http-nio-8080-exec-6] Get booking with state FUTURE, userId=4, from=0, size=20
2023-08-03 13:43:54,878 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-6] HTTP GET http://localhost:9090/bookings/owner?state=FUTURE&from=0&size=20
2023-08-03 13:43:54,879 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-6] Accept=[application/json, application/*+json]
2023-08-03 13:43:54,885 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-6] Response 200 OK
2023-08-03 13:43:54,885 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-6] Reading to [java.lang.Object]
2023-08-03 13:43:54,910 INFO ru.practicum.shareit.ErrorHandler [http-nio-8080-exec-5] Bad booking state: Unknown state: UNSUPPORTED_STATUS
2023-08-03 13:43:54,929 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-8] HTTP GET http://localhost:9090/bookings/1000
2023-08-03 13:43:54,930 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-8] Accept=[application/json, application/*+json]
2023-08-03 13:43:54,933 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-8] Response 404 NOT_FOUND
2023-08-03 13:43:54,958 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-9] HTTP POST http://localhost:9090/users
2023-08-03 13:43:54,958 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-9] Accept=[application/json, application/*+json]
2023-08-03 13:43:54,958 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-9] Writing [UserDto(id=0, email=other@other.com, name=other)] as "application/json"
2023-08-03 13:43:54,965 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-9] Response 201 CREATED
2023-08-03 13:43:54,966 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-9] Reading to [java.lang.Object]
2023-08-03 13:43:54,985 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-10] HTTP GET http://localhost:9090/bookings/1
2023-08-03 13:43:54,986 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-10] Accept=[application/json, application/*+json]
2023-08-03 13:43:54,990 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-10] Response 404 NOT_FOUND
2023-08-03 13:43:55,006 INFO ru.practicum.shareit.ErrorHandler [http-nio-8080-exec-2] Server error Required request parameter 'approved' for method parameter type Boolean is not present
2023-08-03 13:43:55,031 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-3] HTTP PATCH http://localhost:9090/bookings/2?approved=true
2023-08-03 13:43:55,031 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-3] Accept=[application/json, application/*+json]
2023-08-03 13:43:55,037 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-3] Response 404 NOT_FOUND
2023-08-03 13:43:55,056 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-4] HTTP PATCH http://localhost:9090/bookings/2?approved=true
2023-08-03 13:43:55,056 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-4] Accept=[application/json, application/*+json]
2023-08-03 13:43:55,064 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-4] Response 200 OK
2023-08-03 13:43:55,065 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-4] Reading to [java.lang.Object]
2023-08-03 13:43:55,084 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-6] HTTP PATCH http://localhost:9090/bookings/2?approved=true
2023-08-03 13:43:55,084 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-6] Accept=[application/json, application/*+json]
2023-08-03 13:43:55,089 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-6] Response 400 BAD_REQUEST
2023-08-03 13:43:55,105 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-7] HTTP POST http://localhost:9090/users
2023-08-03 13:43:55,105 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-7] Accept=[application/json, application/*+json]
2023-08-03 13:43:55,105 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-7] Writing [UserDto(id=0, email=practicum@yandex.ru, name=practicum)] as "application/json"
2023-08-03 13:43:55,109 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-7] Response 201 CREATED
2023-08-03 13:43:55,109 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-7] Reading to [java.lang.Object]
2023-08-03 13:43:55,133 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-8] HTTP POST http://localhost:9090/bookings
2023-08-03 13:43:55,134 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-8] Accept=[application/json, application/*+json]
2023-08-03 13:43:55,134 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-8] Writing [BookingDto(id=0, itemId=1, start=2023-08-05T13:43:55, end=2023-08-06T13:43:55, status=null, booker=null)] as "application/json"
2023-08-03 13:43:55,139 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-8] Response 404 NOT_FOUND
2023-08-03 13:43:55,160 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-9] HTTP POST http://localhost:9090/bookings
2023-08-03 13:43:55,161 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-9] Accept=[application/json, application/*+json]
2023-08-03 13:43:55,161 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-9] Writing [BookingDto(id=0, itemId=1, start=2023-08-04T13:43:55, end=2023-08-04T14:43:55, status=null, booker=null)] as "application/json"
2023-08-03 13:43:55,169 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-9] Response 200 OK
2023-08-03 13:43:55,170 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-9] Reading to [java.lang.Object]
2023-08-03 13:43:55,195 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-10] HTTP PATCH http://localhost:9090/bookings/3?approved=false
2023-08-03 13:43:55,195 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-10] Accept=[application/json, application/*+json]
2023-08-03 13:43:55,201 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-10] Response 200 OK
2023-08-03 13:43:55,202 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-10] Reading to [java.lang.Object]
2023-08-03 13:43:55,232 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-2] HTTP POST http://localhost:9090/bookings
2023-08-03 13:43:55,232 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-2] Accept=[application/json, application/*+json]
2023-08-03 13:43:55,232 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-2] Writing [BookingDto(id=0, itemId=2, start=2023-08-03T14:43:55, end=2023-08-03T15:43:55, status=null, booker=null)] as "application/json"
2023-08-03 13:43:55,239 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-2] Response 200 OK
2023-08-03 13:43:55,239 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-2] Reading to [java.lang.Object]
2023-08-03 13:43:55,266 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-1] HTTP PATCH http://localhost:9090/bookings/4?approved=true
2023-08-03 13:43:55,266 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-1] Accept=[application/json, application/*+json]
2023-08-03 13:43:55,273 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-1] Response 200 OK
2023-08-03 13:43:55,273 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-1] Reading to [java.lang.Object]
2023-08-03 13:43:59,302 INFO ru.practicum.shareit.item.ItemController [http-nio-8080-exec-3] Request from user ID: 4 on get item. ID: 2
2023-08-03 13:43:59,303 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-3] HTTP GET http://localhost:9090/items/2
2023-08-03 13:43:59,303 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-3] Accept=[application/json, application/*+json]
2023-08-03 13:43:59,315 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-3] Response 200 OK
2023-08-03 13:43:59,315 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-3] Reading to [java.lang.Object]
2023-08-03 13:43:59,334 INFO ru.practicum.shareit.item.ItemController [http-nio-8080-exec-4] Request from user ID: 1 on get item. ID: 2
2023-08-03 13:43:59,334 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-4] HTTP GET http://localhost:9090/items/2
2023-08-03 13:43:59,335 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-4] Accept=[application/json, application/*+json]
2023-08-03 13:43:59,339 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-4] Response 200 OK
2023-08-03 13:43:59,339 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-4] Reading to [java.lang.Object]
2023-08-03 13:43:59,362 INFO ru.practicum.shareit.item.ItemController [http-nio-8080-exec-6] Request from user ID: 5 on get item. ID: 2
2023-08-03 13:43:59,362 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-6] HTTP GET http://localhost:9090/items/2
2023-08-03 13:43:59,362 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-6] Accept=[application/json, application/*+json]
2023-08-03 13:43:59,366 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-6] Response 200 OK
2023-08-03 13:43:59,366 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-6] Reading to [java.lang.Object]
2023-08-03 13:43:59,385 INFO ru.practicum.shareit.item.ItemController [http-nio-8080-exec-5] Request on get all for user id: 4
2023-08-03 13:43:59,385 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-5] HTTP GET http://localhost:9090/items?from=0&size=20
2023-08-03 13:43:59,385 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-5] Accept=[application/json, application/*+json]
2023-08-03 13:43:59,395 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-5] Response 200 OK
2023-08-03 13:43:59,396 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-5] Reading to [java.lang.Object]
2023-08-03 13:43:59,421 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-7] HTTP POST http://localhost:9090/bookings
2023-08-03 13:43:59,421 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-7] Accept=[application/json, application/*+json]
2023-08-03 13:43:59,422 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-7] Writing [BookingDto(id=0, itemId=3, start=2023-08-03T13:44:02, end=2023-08-04T13:43:59, status=null, booker=null)] as "application/json"
2023-08-03 13:43:59,429 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-7] Response 200 OK
2023-08-03 13:43:59,429 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-7] Reading to [java.lang.Object]
2023-08-03 13:43:59,451 INFO ru.practicum.shareit.booking.BookingController [http-nio-8080-exec-8] Get booking with state WAITING, userId=1, from=0, size=20
2023-08-03 13:43:59,451 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-8] HTTP GET http://localhost:9090/bookings?state=WAITING&from=0&size=20
2023-08-03 13:43:59,451 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-8] Accept=[application/json, application/*+json]
2023-08-03 13:43:59,457 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-8] Response 200 OK
2023-08-03 13:43:59,457 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-8] Reading to [java.lang.Object]
2023-08-03 13:43:59,483 INFO ru.practicum.shareit.booking.BookingController [http-nio-8080-exec-9] Get booking with state WAITING, userId=4, from=0, size=20
2023-08-03 13:43:59,483 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-9] HTTP GET http://localhost:9090/bookings/owner?state=WAITING&from=0&size=20
2023-08-03 13:43:59,484 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-9] Accept=[application/json, application/*+json]
2023-08-03 13:43:59,489 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-9] Response 200 OK
2023-08-03 13:43:59,489 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-9] Reading to [java.lang.Object]
2023-08-03 13:43:59,514 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-10] HTTP POST http://localhost:9090/bookings
2023-08-03 13:43:59,515 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-10] Accept=[application/json, application/*+json]
2023-08-03 13:43:59,515 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-10] Writing [BookingDto(id=0, itemId=2, start=2023-08-03T13:44:02, end=2023-08-03T13:44:03, status=null, booker=null)] as "application/json"
2023-08-03 13:43:59,520 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-10] Response 200 OK
2023-08-03 13:43:59,521 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-10] Reading to [java.lang.Object]
2023-08-03 13:43:59,542 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-2] HTTP PATCH http://localhost:9090/bookings/5?approved=false
2023-08-03 13:43:59,543 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-2] Accept=[application/json, application/*+json]
2023-08-03 13:43:59,550 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-2] Response 200 OK
2023-08-03 13:43:59,550 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-2] Reading to [java.lang.Object]
2023-08-03 13:43:59,580 INFO ru.practicum.shareit.booking.BookingController [http-nio-8080-exec-1] Get booking with state REJECTED, userId=1, from=0, size=20
2023-08-03 13:43:59,580 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-1] HTTP GET http://localhost:9090/bookings?state=REJECTED&from=0&size=20
2023-08-03 13:43:59,581 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-1] Accept=[application/json, application/*+json]
2023-08-03 13:43:59,586 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-1] Response 200 OK
2023-08-03 13:43:59,586 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-1] Reading to [java.lang.Object]
2023-08-03 13:43:59,612 INFO ru.practicum.shareit.booking.BookingController [http-nio-8080-exec-3] Get booking with state REJECTED, userId=4, from=0, size=20
2023-08-03 13:43:59,613 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-3] HTTP GET http://localhost:9090/bookings/owner?state=REJECTED&from=0&size=20
2023-08-03 13:43:59,614 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-3] Accept=[application/json, application/*+json]
2023-08-03 13:43:59,619 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-3] Response 200 OK
2023-08-03 13:43:59,619 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-3] Reading to [java.lang.Object]
2023-08-03 13:43:59,641 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-4] HTTP PATCH http://localhost:9090/bookings/6?approved=true
2023-08-03 13:43:59,641 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-4] Accept=[application/json, application/*+json]
2023-08-03 13:43:59,647 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-4] Response 200 OK
2023-08-03 13:43:59,647 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-4] Reading to [java.lang.Object]
2023-08-03 13:43:59,668 INFO ru.practicum.shareit.item.ItemController [http-nio-8080-exec-6] Request on add ItemDto(id=0, name=Кухонный стол, description=Стол для празднования, available=true, requestId=null), user id: 6
2023-08-03 13:43:59,669 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-6] HTTP POST http://localhost:9090/items
2023-08-03 13:43:59,669 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-6] Accept=[application/json, application/*+json]
2023-08-03 13:43:59,669 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-6] Writing [ItemDto(id=0, name=Кухонный стол, description=Стол для празднования, available=true, requestId=null)] as "application/json"
2023-08-03 13:43:59,674 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-6] Response 200 OK
2023-08-03 13:43:59,674 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-6] Reading to [java.lang.Object]
2023-08-03 13:43:59,697 INFO ru.practicum.shareit.item.ItemController [http-nio-8080-exec-5] Request from user ID: 1 on get item. ID: 1
2023-08-03 13:43:59,697 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-5] HTTP GET http://localhost:9090/items/1
2023-08-03 13:43:59,697 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-5] Accept=[application/json, application/*+json]
2023-08-03 13:43:59,704 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-5] Response 200 OK
2023-08-03 13:43:59,704 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-5] Reading to [java.lang.Object]
2023-08-03 13:43:59,734 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-7] HTTP POST http://localhost:9090/bookings
2023-08-03 13:43:59,734 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-7] Accept=[application/json, application/*+json]
2023-08-03 13:43:59,735 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-7] Writing [BookingDto(id=0, itemId=1, start=2023-08-13T13:43:59, end=2023-08-14T13:43:59, status=null, booker=null)] as "application/json"
2023-08-03 13:43:59,744 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-7] Response 200 OK
2023-08-03 13:43:59,745 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-7] Reading to [java.lang.Object]
2023-08-03 13:43:59,779 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-8] HTTP POST http://localhost:9090/bookings
2023-08-03 13:43:59,780 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-8] Accept=[application/json, application/*+json]
2023-08-03 13:43:59,780 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-8] Writing [BookingDto(id=0, itemId=4, start=2023-08-03T13:44:01, end=2023-08-03T14:43:59, status=null, booker=null)] as "application/json"
2023-08-03 13:43:59,789 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-8] Response 200 OK
2023-08-03 13:43:59,789 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-8] Reading to [java.lang.Object]
2023-08-03 13:43:59,818 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-9] HTTP PATCH http://localhost:9090/bookings/8?approved=true
2023-08-03 13:43:59,818 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-9] Accept=[application/json, application/*+json]
2023-08-03 13:43:59,824 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-9] Response 200 OK
2023-08-03 13:43:59,825 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-9] Reading to [java.lang.Object]
2023-08-03 13:44:02,848 INFO ru.practicum.shareit.item.ItemController [http-nio-8080-exec-10] Request from user ID: 1 on get item. ID: 2
2023-08-03 13:44:02,849 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-10] HTTP GET http://localhost:9090/items/2
2023-08-03 13:44:02,849 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-10] Accept=[application/json, application/*+json]
2023-08-03 13:44:02,854 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-10] Response 200 OK
2023-08-03 13:44:02,854 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-10] Reading to [java.lang.Object]
2023-08-03 13:44:05,877 INFO ru.practicum.shareit.item.ItemController [http-nio-8080-exec-2] Request from user ID: 4 on get item. ID: 2
2023-08-03 13:44:05,877 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-2] HTTP GET http://localhost:9090/items/2
2023-08-03 13:44:05,877 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-2] Accept=[application/json, application/*+json]
2023-08-03 13:44:05,883 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-2] Response 200 OK
2023-08-03 13:44:05,883 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-2] Reading to [java.lang.Object]
2023-08-03 13:44:05,910 INFO ru.practicum.shareit.item.ItemController [http-nio-8080-exec-1] Request on add comment Comment for item 1, item id: 1, user id: 4
2023-08-03 13:44:05,911 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-1] HTTP POST http://localhost:9090/items/1/comment
2023-08-03 13:44:05,911 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-1] Accept=[application/json, application/*+json]
2023-08-03 13:44:05,914 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-1] Writing [CommentDto(id=0, text=Comment for item 1, authorName=null, created=null)] as "application/json"
2023-08-03 13:44:05,924 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-1] Response 400 BAD_REQUEST
2023-08-03 13:44:05,948 INFO ru.practicum.shareit.ErrorHandler [http-nio-8080-exec-4] Validation failed for field: text. Error message: не должно быть пустым
2023-08-03 13:44:05,972 INFO ru.practicum.shareit.item.ItemController [http-nio-8080-exec-5] Request on add comment Add comment from user1, item id: 2, user id: 1
2023-08-03 13:44:05,972 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-5] HTTP POST http://localhost:9090/items/2/comment
2023-08-03 13:44:05,973 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-5] Accept=[application/json, application/*+json]
2023-08-03 13:44:05,973 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-5] Writing [CommentDto(id=0, text=Add comment from user1, authorName=null, created=null)] as "application/json"
2023-08-03 13:44:05,984 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-5] Response 200 OK
2023-08-03 13:44:05,985 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-5] Reading to [java.lang.Object]
2023-08-03 13:44:06,004 INFO ru.practicum.shareit.item.ItemController [http-nio-8080-exec-7] Request from user ID: 1 on get item. ID: 2
2023-08-03 13:44:06,004 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-7] HTTP GET http://localhost:9090/items/2
2023-08-03 13:44:06,004 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-7] Accept=[application/json, application/*+json]
2023-08-03 13:44:06,008 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-7] Response 200 OK
2023-08-03 13:44:06,009 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-7] Reading to [java.lang.Object]
2023-08-03 13:44:06,029 INFO ru.practicum.shareit.item.ItemController [http-nio-8080-exec-8] Request from user ID: 4 on get item. ID: 2
2023-08-03 13:44:06,029 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-8] HTTP GET http://localhost:9090/items/2
2023-08-03 13:44:06,030 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-8] Accept=[application/json, application/*+json]
2023-08-03 13:44:06,035 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-8] Response 200 OK
2023-08-03 13:44:06,036 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-8] Reading to [java.lang.Object]
2023-08-03 13:44:06,060 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-9] HTTP PATCH http://localhost:9090/bookings/7?approved=true
2023-08-03 13:44:06,060 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-9] Accept=[application/json, application/*+json]
2023-08-03 13:44:06,066 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-9] Response 200 OK
2023-08-03 13:44:06,066 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-9] Reading to [java.lang.Object]
2023-08-03 13:44:06,088 INFO ru.practicum.shareit.item.ItemController [http-nio-8080-exec-10] Request on add comment Add comment from user5, item id: 1, user id: 5
2023-08-03 13:44:06,089 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-10] HTTP POST http://localhost:9090/items/1/comment
2023-08-03 13:44:06,089 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-10] Accept=[application/json, application/*+json]
2023-08-03 13:44:06,089 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-10] Writing [CommentDto(id=0, text=Add comment from user5, authorName=null, created=null)] as "application/json"
2023-08-03 13:44:06,098 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-10] Response 400 BAD_REQUEST
2023-08-03 13:44:06,123 INFO ru.practicum.shareit.booking.BookingController [http-nio-8080-exec-1] Get booking with state CURRENT, userId=1, from=0, size=20
2023-08-03 13:44:06,124 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-1] HTTP GET http://localhost:9090/bookings?state=CURRENT&from=0&size=20
2023-08-03 13:44:06,124 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-1] Accept=[application/json, application/*+json]
2023-08-03 13:44:06,132 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-1] Response 200 OK
2023-08-03 13:44:06,132 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-1] Reading to [java.lang.Object]
2023-08-03 13:44:06,162 INFO ru.practicum.shareit.booking.BookingController [http-nio-8080-exec-3] Get booking with state CURRENT, userId=4, from=0, size=20
2023-08-03 13:44:06,162 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-3] HTTP GET http://localhost:9090/bookings/owner?state=CURRENT&from=0&size=20
2023-08-03 13:44:06,163 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-3] Accept=[application/json, application/*+json]
2023-08-03 13:44:06,169 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-3] Response 200 OK
2023-08-03 13:44:06,169 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-3] Reading to [java.lang.Object]
2023-08-03 13:44:06,194 INFO ru.practicum.shareit.booking.BookingController [http-nio-8080-exec-4] Get booking with state PAST, userId=1, from=0, size=20
2023-08-03 13:44:06,194 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-4] HTTP GET http://localhost:9090/bookings?state=PAST&from=0&size=20
2023-08-03 13:44:06,195 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-4] Accept=[application/json, application/*+json]
2023-08-03 13:44:06,199 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-4] Response 200 OK
2023-08-03 13:44:06,199 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-4] Reading to [java.lang.Object]
2023-08-03 13:44:06,223 INFO ru.practicum.shareit.booking.BookingController [http-nio-8080-exec-6] Get booking with state PAST, userId=4, from=0, size=20
2023-08-03 13:44:06,223 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-6] HTTP GET http://localhost:9090/bookings/owner?state=PAST&from=0&size=20
2023-08-03 13:44:06,224 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-6] Accept=[application/json, application/*+json]
2023-08-03 13:44:06,229 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-6] Response 200 OK
2023-08-03 13:44:06,229 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-6] Reading to [java.lang.Object]
2023-08-03 13:44:06,256 INFO ru.practicum.shareit.item.ItemController [http-nio-8080-exec-5] Request from user ID: 6 on get item. ID: 4
2023-08-03 13:44:06,256 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-5] HTTP GET http://localhost:9090/items/4
2023-08-03 13:44:06,256 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-5] Accept=[application/json, application/*+json]
2023-08-03 13:44:06,265 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-5] Response 200 OK
2023-08-03 13:44:06,265 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-5] Reading to [java.lang.Object]
2023-08-03 13:44:06,306 INFO ru.practicum.shareit.request.RequestController [http-nio-8080-exec-7] Add request on item RequestDto(id=0, description=Хотел бы воспользоваться щёткой для обуви, created=null, items=null), user id: 99
2023-08-03 13:44:06,307 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-7] HTTP POST http://localhost:9090/requests
2023-08-03 13:44:06,307 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-7] Accept=[application/json, application/*+json]
2023-08-03 13:44:06,308 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-7] Writing [RequestDto(id=0, description=Хотел бы воспользоваться щёткой для обуви, created=null, items=null)] as "application/json"
2023-08-03 13:44:06,330 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-7] Response 404 NOT_FOUND
2023-08-03 13:44:06,366 INFO ru.practicum.shareit.ErrorHandler [http-nio-8080-exec-8] Validation failed for field: description. Error message: Description can't blank
2023-08-03 13:44:06,387 INFO ru.practicum.shareit.request.RequestController [http-nio-8080-exec-10] Request on get all requests from user id: 99
2023-08-03 13:44:06,388 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-10] HTTP GET http://localhost:9090/requests?from=0&size=20
2023-08-03 13:44:06,388 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-10] Accept=[application/json, application/*+json]
2023-08-03 13:44:06,395 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-10] Response 404 NOT_FOUND
2023-08-03 13:44:06,419 INFO ru.practicum.shareit.request.RequestController [http-nio-8080-exec-2] Request on get all requests from user id: 1
2023-08-03 13:44:06,419 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-2] HTTP GET http://localhost:9090/requests?from=0&size=20
2023-08-03 13:44:06,419 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-2] Accept=[application/json, application/*+json]
2023-08-03 13:44:06,428 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-2] Response 200 OK
2023-08-03 13:44:06,429 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-2] Reading to [java.lang.Object]
2023-08-03 13:44:06,450 INFO ru.practicum.shareit.request.RequestController [http-nio-8080-exec-1] Request on get all requests
2023-08-03 13:44:06,450 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-1] HTTP GET http://localhost:9090/requests/all?from=0&size=20
2023-08-03 13:44:06,450 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-1] Accept=[application/json, application/*+json]
2023-08-03 13:44:06,458 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-1] Response 200 OK
2023-08-03 13:44:06,459 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-1] Reading to [java.lang.Object]
2023-08-03 13:44:06,484 INFO ru.practicum.shareit.ErrorHandler [http-nio-8080-exec-3] Validation failed for field: size. Error message: должно быть больше 0
2023-08-03 13:44:06,504 INFO ru.practicum.shareit.ErrorHandler [http-nio-8080-exec-6] Validation failed for field: from. Error message: должно быть больше или равно 0
2023-08-03 13:44:06,532 INFO ru.practicum.shareit.ErrorHandler [http-nio-8080-exec-7] Validation failed for field: size. Error message: должно быть больше 0
2023-08-03 13:44:06,555 INFO ru.practicum.shareit.request.RequestController [http-nio-8080-exec-9] Request on get all requests
2023-08-03 13:44:06,556 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-9] HTTP GET http://localhost:9090/requests/all?from=0&size=20
2023-08-03 13:44:06,556 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-9] Accept=[application/json, application/*+json]
2023-08-03 13:44:06,560 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-9] Response 200 OK
2023-08-03 13:44:06,561 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-9] Reading to [java.lang.Object]
2023-08-03 13:44:06,584 INFO ru.practicum.shareit.request.RequestController [http-nio-8080-exec-10] Add request on item RequestDto(id=0, description=Хотел бы воспользоваться щёткой для обуви, created=null, items=null), user id: 1
2023-08-03 13:44:06,585 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-10] HTTP POST http://localhost:9090/requests
2023-08-03 13:44:06,585 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-10] Accept=[application/json, application/*+json]
2023-08-03 13:44:06,585 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-10] Writing [RequestDto(id=0, description=Хотел бы воспользоваться щёткой для обуви, created=null, items=null)] as "application/json"
2023-08-03 13:44:06,595 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-10] Response 200 OK
2023-08-03 13:44:06,595 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-10] Reading to [java.lang.Object]
2023-08-03 13:44:07,621 INFO ru.practicum.shareit.request.RequestController [http-nio-8080-exec-2] Request on get all requests from user id: 1
2023-08-03 13:44:07,622 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-2] HTTP GET http://localhost:9090/requests?from=0&size=20
2023-08-03 13:44:07,622 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-2] Accept=[application/json, application/*+json]
2023-08-03 13:44:07,628 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-2] Response 200 OK
2023-08-03 13:44:07,629 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-2] Reading to [java.lang.Object]
2023-08-03 13:44:07,649 INFO ru.practicum.shareit.item.ItemController [http-nio-8080-exec-1] Request on add ItemDto(id=0, name=Щётка для обуви, description=Стандартная щётка для обуви, available=true, requestId=1), user id: 4
2023-08-03 13:44:07,649 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-1] HTTP POST http://localhost:9090/items
2023-08-03 13:44:07,649 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-1] Accept=[application/json, application/*+json]
2023-08-03 13:44:07,650 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-1] Writing [ItemDto(id=0, name=Щётка для обуви, description=Стандартная щётка для обуви, available=true, requestId=1)] as "application/json"
2023-08-03 13:44:07,654 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-1] Response 200 OK
2023-08-03 13:44:07,654 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-1] Reading to [java.lang.Object]
2023-08-03 13:44:07,675 INFO ru.practicum.shareit.request.RequestController [http-nio-8080-exec-3] Request on get all requests from user id: 1
2023-08-03 13:44:07,675 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-3] HTTP GET http://localhost:9090/requests?from=0&size=20
2023-08-03 13:44:07,676 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-3] Accept=[application/json, application/*+json]
2023-08-03 13:44:07,681 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-3] Response 200 OK
2023-08-03 13:44:07,682 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-3] Reading to [java.lang.Object]
2023-08-03 13:44:07,707 INFO ru.practicum.shareit.request.RequestController [http-nio-8080-exec-4] Request on get all requests
2023-08-03 13:44:07,707 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-4] HTTP GET http://localhost:9090/requests/all?from=0&size=20
2023-08-03 13:44:07,707 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-4] Accept=[application/json, application/*+json]
2023-08-03 13:44:07,712 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-4] Response 200 OK
2023-08-03 13:44:07,712 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-4] Reading to [java.lang.Object]
2023-08-03 13:44:07,733 INFO ru.practicum.shareit.request.RequestController [http-nio-8080-exec-6] Request on get all requests
2023-08-03 13:44:07,734 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-6] HTTP GET http://localhost:9090/requests/all?from=0&size=20
2023-08-03 13:44:07,734 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-6] Accept=[application/json, application/*+json]
2023-08-03 13:44:07,738 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-6] Response 200 OK
2023-08-03 13:44:07,738 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-6] Reading to [java.lang.Object]
2023-08-03 13:44:07,762 INFO ru.practicum.shareit.request.RequestController [http-nio-8080-exec-5] Request from user ID: 99 on get request. ID: 1
2023-08-03 13:44:07,763 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-5] HTTP GET http://localhost:9090/requests/1
2023-08-03 13:44:07,763 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-5] Accept=[application/json, application/*+json]
2023-08-03 13:44:07,767 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-5] Response 404 NOT_FOUND
2023-08-03 13:44:07,789 INFO ru.practicum.shareit.request.RequestController [http-nio-8080-exec-7] Request from user ID: 1 on get request. ID: 99
2023-08-03 13:44:07,789 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-7] HTTP GET http://localhost:9090/requests/99
2023-08-03 13:44:07,790 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-7] Accept=[application/json, application/*+json]
2023-08-03 13:44:07,796 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-7] Response 404 NOT_FOUND
2023-08-03 13:44:07,817 INFO ru.practicum.shareit.request.RequestController [http-nio-8080-exec-8] Request from user ID: 4 on get request. ID: 1
2023-08-03 13:44:07,818 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-8] HTTP GET http://localhost:9090/requests/1
2023-08-03 13:44:07,818 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-8] Accept=[application/json, application/*+json]
2023-08-03 13:44:07,822 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-8] Response 200 OK
2023-08-03 13:44:07,823 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-8] Reading to [java.lang.Object]
2023-08-03 13:44:07,846 INFO ru.practicum.shareit.request.RequestController [http-nio-8080-exec-9] Request from user ID: 1 on get request. ID: 1
2023-08-03 13:44:07,846 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-9] HTTP GET http://localhost:9090/requests/1
2023-08-03 13:44:07,846 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-9] Accept=[application/json, application/*+json]
2023-08-03 13:44:07,851 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-9] Response 200 OK
2023-08-03 13:44:07,851 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-9] Reading to [java.lang.Object]
2023-08-03 13:44:07,880 INFO ru.practicum.shareit.ErrorHandler [http-nio-8080-exec-10] Validation failed for field: size. Error message: должно быть больше 0
2023-08-03 13:44:07,902 INFO ru.practicum.shareit.ErrorHandler [http-nio-8080-exec-1] Validation failed for field: size. Error message: должно быть больше 0
2023-08-03 13:44:07,924 INFO ru.practicum.shareit.ErrorHandler [http-nio-8080-exec-4] Validation failed for field: from. Error message: должно быть больше или равно 0
2023-08-03 13:44:07,945 INFO ru.practicum.shareit.ErrorHandler [http-nio-8080-exec-5] Validation failed for field: from. Error message: должно быть больше или равно 0
2023-08-03 13:44:07,967 INFO ru.practicum.shareit.ErrorHandler [http-nio-8080-exec-8] Validation failed for field: size. Error message: должно быть больше 0
2023-08-03 13:44:07,986 INFO ru.practicum.shareit.ErrorHandler [http-nio-8080-exec-10] Validation failed for field: size. Error message: должно быть больше 0
2023-08-03 13:44:08,007 INFO ru.practicum.shareit.booking.BookingController [http-nio-8080-exec-1] Get booking with state ALL, userId=1, from=4, size=2
2023-08-03 13:44:08,007 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-1] HTTP GET http://localhost:9090/bookings?state=ALL&from=4&size=2
2023-08-03 13:44:08,007 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-1] Accept=[application/json, application/*+json]
2023-08-03 13:44:08,011 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-1] Response 200 OK
2023-08-03 13:44:08,012 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-1] Reading to [java.lang.Object]
2023-08-03 13:44:08,032 INFO ru.practicum.shareit.booking.BookingController [http-nio-8080-exec-3] Get booking with state ALL, userId=1, from=1, size=1
2023-08-03 13:44:08,032 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-3] HTTP GET http://localhost:9090/bookings/owner?state=ALL&from=1&size=1
2023-08-03 13:44:08,032 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-3] Accept=[application/json, application/*+json]
2023-08-03 13:44:08,041 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-3] Response 200 OK
2023-08-03 13:44:08,042 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-3] Reading to [java.lang.Object]
2023-08-03 13:51:51,874 INFO org.springframework.boot.StartupInfoLogger [main] Starting ShareItServerApp using Java 18.0.2 on DESKTOP-HBQA1DH with PID 16204 (C:\Users\Aser\dev\java-shareit\ser\target\classes started by Aser in C:\Users\Aser\dev\java-shareit)
2023-08-03 13:51:51,877 INFO org.springframework.boot.SpringApplication [main] No active profile set, falling back to 1 default profile: "default"
2023-08-03 13:51:52,505 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2023-08-03 13:51:52,576 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Finished Spring Data repository scanning in 63 ms. Found 5 JPA repository interfaces.
2023-08-03 13:51:53,040 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [main] Tomcat initialized with port(s): 9090 (http)
2023-08-03 13:51:53,047 INFO org.apache.juli.logging.DirectJDKLog [main] Initializing ProtocolHandler ["http-nio-9090"]
2023-08-03 13:51:53,047 INFO org.apache.juli.logging.DirectJDKLog [main] Starting service [Tomcat]
2023-08-03 13:51:53,048 INFO org.apache.juli.logging.DirectJDKLog [main] Starting Servlet engine: [Apache Tomcat/9.0.71]
2023-08-03 13:51:53,122 INFO org.apache.juli.logging.DirectJDKLog [main] Initializing Spring embedded WebApplicationContext
2023-08-03 13:51:53,122 INFO org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext [main] Root WebApplicationContext: initialization completed in 1196 ms
2023-08-03 13:51:53,180 DEBUG com.zaxxer.hikari.HikariConfig [main] Driver class org.h2.Driver found in Thread context class loader TomcatEmbeddedWebappClassLoader
  context: ROOT
  delegate: true
----------> Parent Classloader:
jdk.internal.loader.ClassLoaders$AppClassLoader@3cd1a2f1

2023-08-03 13:51:53,302 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [main] Fetching JDBC Connection from DataSource
2023-08-03 13:51:53,303 DEBUG com.zaxxer.hikari.HikariConfig [main] HikariPool-1 - configuration:
2023-08-03 13:51:53,306 DEBUG com.zaxxer.hikari.HikariConfig [main] allowPoolSuspension................................false
2023-08-03 13:51:53,306 DEBUG com.zaxxer.hikari.HikariConfig [main] autoCommit................................true
2023-08-03 13:51:53,306 DEBUG com.zaxxer.hikari.HikariConfig [main] catalog................................none
2023-08-03 13:51:53,307 DEBUG com.zaxxer.hikari.HikariConfig [main] connectionInitSql................................none
2023-08-03 13:51:53,307 DEBUG com.zaxxer.hikari.HikariConfig [main] connectionTestQuery................................none
2023-08-03 13:51:53,308 DEBUG com.zaxxer.hikari.HikariConfig [main] connectionTimeout................................30000
2023-08-03 13:51:53,308 DEBUG com.zaxxer.hikari.HikariConfig [main] dataSource................................none
2023-08-03 13:51:53,308 DEBUG com.zaxxer.hikari.HikariConfig [main] dataSourceClassName................................none
2023-08-03 13:51:53,308 DEBUG com.zaxxer.hikari.HikariConfig [main] dataSourceJNDI................................none
2023-08-03 13:51:53,309 DEBUG com.zaxxer.hikari.HikariConfig [main] dataSourceProperties................................{password=<masked>}
2023-08-03 13:51:53,309 DEBUG com.zaxxer.hikari.HikariConfig [main] driverClassName................................"org.h2.Driver"
2023-08-03 13:51:53,309 DEBUG com.zaxxer.hikari.HikariConfig [main] exceptionOverrideClassName................................none
2023-08-03 13:51:53,310 DEBUG com.zaxxer.hikari.HikariConfig [main] healthCheckProperties................................{}
2023-08-03 13:51:53,310 DEBUG com.zaxxer.hikari.HikariConfig [main] healthCheckRegistry................................none
2023-08-03 13:51:53,310 DEBUG com.zaxxer.hikari.HikariConfig [main] idleTimeout................................600000
2023-08-03 13:51:53,310 DEBUG com.zaxxer.hikari.HikariConfig [main] initializationFailTimeout................................1
2023-08-03 13:51:53,310 DEBUG com.zaxxer.hikari.HikariConfig [main] isolateInternalQueries................................false
2023-08-03 13:51:53,311 DEBUG com.zaxxer.hikari.HikariConfig [main] jdbcUrl................................jdbc:h2:mem:my_db
2023-08-03 13:51:53,311 DEBUG com.zaxxer.hikari.HikariConfig [main] keepaliveTime................................0
2023-08-03 13:51:53,311 DEBUG com.zaxxer.hikari.HikariConfig [main] leakDetectionThreshold................................0
2023-08-03 13:51:53,311 DEBUG com.zaxxer.hikari.HikariConfig [main] maxLifetime................................1800000
2023-08-03 13:51:53,312 DEBUG com.zaxxer.hikari.HikariConfig [main] maximumPoolSize................................10
2023-08-03 13:51:53,312 DEBUG com.zaxxer.hikari.HikariConfig [main] metricRegistry................................none
2023-08-03 13:51:53,312 DEBUG com.zaxxer.hikari.HikariConfig [main] metricsTrackerFactory................................com.zaxxer.hikari.metrics.micrometer.MicrometerMetricsTrackerFactory@77d381e6
2023-08-03 13:51:53,312 DEBUG com.zaxxer.hikari.HikariConfig [main] minimumIdle................................10
2023-08-03 13:51:53,312 DEBUG com.zaxxer.hikari.HikariConfig [main] password................................<masked>
2023-08-03 13:51:53,312 DEBUG com.zaxxer.hikari.HikariConfig [main] poolName................................"HikariPool-1"
2023-08-03 13:51:53,313 DEBUG com.zaxxer.hikari.HikariConfig [main] readOnly................................false
2023-08-03 13:51:53,313 DEBUG com.zaxxer.hikari.HikariConfig [main] registerMbeans................................false
2023-08-03 13:51:53,313 DEBUG com.zaxxer.hikari.HikariConfig [main] scheduledExecutor................................none
2023-08-03 13:51:53,313 DEBUG com.zaxxer.hikari.HikariConfig [main] schema................................none
2023-08-03 13:51:53,314 DEBUG com.zaxxer.hikari.HikariConfig [main] threadFactory................................internal
2023-08-03 13:51:53,314 DEBUG com.zaxxer.hikari.HikariConfig [main] transactionIsolation................................default
2023-08-03 13:51:53,314 DEBUG com.zaxxer.hikari.HikariConfig [main] username................................"test"
2023-08-03 13:51:53,314 DEBUG com.zaxxer.hikari.HikariConfig [main] validationTimeout................................5000
2023-08-03 13:51:53,314 INFO com.zaxxer.hikari.HikariDataSource [main] HikariPool-1 - Starting...
2023-08-03 13:51:53,474 DEBUG com.zaxxer.hikari.pool.HikariPool [main] HikariPool-1 - Added connection conn0: url=jdbc:h2:mem:my_db user=TEST
2023-08-03 13:51:53,478 INFO com.zaxxer.hikari.HikariDataSource [main] HikariPool-1 - Start completed.
2023-08-03 13:51:53,496 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [main] Fetching JDBC Connection from DataSource
2023-08-03 13:51:53,497 DEBUG org.springframework.jdbc.datasource.init.ScriptUtils [main] Executing SQL script from URL [file:/C:/Users/Aser/dev/java-shareit/ser/target/classes/schema.sql]
2023-08-03 13:51:53,501 DEBUG org.springframework.jdbc.datasource.init.ScriptUtils [main] 0 returned as update count for SQL: DROP TABLE IF EXISTS users CASCADE
2023-08-03 13:51:53,501 DEBUG org.springframework.jdbc.datasource.init.ScriptUtils [main] 0 returned as update count for SQL: DROP TABLE IF EXISTS requests CASCADE
2023-08-03 13:51:53,501 DEBUG org.springframework.jdbc.datasource.init.ScriptUtils [main] 0 returned as update count for SQL: DROP TABLE IF EXISTS items CASCADE
2023-08-03 13:51:53,501 DEBUG org.springframework.jdbc.datasource.init.ScriptUtils [main] 0 returned as update count for SQL: DROP TABLE IF EXISTS comments CASCADE
2023-08-03 13:51:53,502 DEBUG org.springframework.jdbc.datasource.init.ScriptUtils [main] 0 returned as update count for SQL: DROP TABLE IF EXISTS bookings CASCADE
2023-08-03 13:51:53,502 DEBUG org.springframework.jdbc.datasource.init.ScriptUtils [main] 0 returned as update count for SQL: DROP INDEX IF EXISTS name_description
2023-08-03 13:51:53,513 DEBUG org.springframework.jdbc.datasource.init.ScriptUtils [main] 0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS users ( id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL, name VARCHAR(255) NOT NULL, email VARCHAR(512) NOT NULL, CONSTRAINT pk_user PRIMARY KEY (id), CONSTRAINT uniq_email UNIQUE (email) )
2023-08-03 13:51:53,528 DEBUG org.springframework.jdbc.datasource.init.ScriptUtils [main] 0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS requests ( id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL, description VARCHAR(500) NOT NULL, created TIMESTAMP WITHOUT TIME ZONE NOT NULL, user_id BIGINT NOT NULL, CONSTRAINT pk_request PRIMARY KEY(id), CONSTRAINT fk_requests_to_users FOREIGN KEY(user_id) REFERENCES users(id) )
2023-08-03 13:51:53,531 DEBUG org.springframework.jdbc.datasource.init.ScriptUtils [main] 0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS items ( id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL, owner_id BIGINT NOT NULL, name VARCHAR(255) NOT NULL, description VARCHAR(512) NOT NULL, is_available BOOLEAN, request_id BIGINT, CONSTRAINT pk_item PRIMARY KEY (id), CONSTRAINT fk_items_to_users FOREIGN KEY(owner_id) REFERENCES users(id), CONSTRAINT fk_items_to_requests FOREIGN KEY(request_id) REFERENCES requests(id) )
2023-08-03 13:51:53,532 DEBUG org.springframework.jdbc.datasource.init.ScriptUtils [main] 0 returned as update count for SQL: CREATE INDEX IF NOT EXISTS name_description ON items (name, description)
2023-08-03 13:51:53,534 DEBUG org.springframework.jdbc.datasource.init.ScriptUtils [main] 0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS comments ( id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL, text VARCHAR(500) NOT NULL, author_id BIGINT NOT NULL, item_id BIGINT NOT NULL, created TIMESTAMP WITHOUT TIME ZONE, CONSTRAINT pk_comment PRIMARY KEY (id), CONSTRAINT fk_comments_to_users FOREIGN KEY(author_id) REFERENCES users(id), CONSTRAINT fk_comments_to_items FOREIGN KEY(item_id) REFERENCES items(id) )
2023-08-03 13:51:53,537 DEBUG org.springframework.jdbc.datasource.init.ScriptUtils [main] 0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS bookings ( id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL, start_date TIMESTAMP WITHOUT TIME ZONE, end_date TIMESTAMP WITHOUT TIME ZONE, status VARCHAR(50), booker_id BIGINT NOT NULL, item_id BIGINT NOT NULL, CONSTRAINT pk_booking PRIMARY KEY (id), CONSTRAINT fk_bookings_to_users FOREIGN KEY(booker_id) REFERENCES users(id), CONSTRAINT fk_bookings_to_items FOREIGN KEY(item_id) REFERENCES items(id) )
2023-08-03 13:51:53,537 DEBUG org.springframework.jdbc.datasource.init.ScriptUtils [main] Executed SQL script from URL [file:/C:/Users/Aser/dev/java-shareit/ser/target/classes/schema.sql] in 40 ms.
2023-08-03 13:51:53,580 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=1, active=0, idle=1, waiting=0)
2023-08-03 13:51:53,581 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn1: url=jdbc:h2:mem:my_db user=TEST
2023-08-03 13:51:53,582 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn2: url=jdbc:h2:mem:my_db user=TEST
2023-08-03 13:51:53,583 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn3: url=jdbc:h2:mem:my_db user=TEST
2023-08-03 13:51:53,583 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn4: url=jdbc:h2:mem:my_db user=TEST
2023-08-03 13:51:53,584 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn5: url=jdbc:h2:mem:my_db user=TEST
2023-08-03 13:51:53,584 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn6: url=jdbc:h2:mem:my_db user=TEST
2023-08-03 13:51:53,584 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn7: url=jdbc:h2:mem:my_db user=TEST
2023-08-03 13:51:53,585 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn8: url=jdbc:h2:mem:my_db user=TEST
2023-08-03 13:51:53,585 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn9: url=jdbc:h2:mem:my_db user=TEST
2023-08-03 13:51:53,586 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 connection adder] HikariPool-1 - After adding stats (total=10, active=0, idle=10, waiting=0)
2023-08-03 13:51:53,587 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [main] Fetching JDBC Connection from DataSource
2023-08-03 13:51:53,618 INFO org.hibernate.jpa.internal.util.LogHelper [main] HHH000204: Processing PersistenceUnitInfo [name: default]
2023-08-03 13:51:53,655 INFO org.hibernate.Version [main] HHH000412: Hibernate ORM core version 5.6.15.Final
2023-08-03 13:51:53,771 INFO org.hibernate.annotations.common.reflection.java.JavaReflectionManager [main] HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2023-08-03 13:51:53,856 INFO org.hibernate.dialect.Dialect [main] HHH000400: Using dialect: org.hibernate.dialect.PostgreSQL10Dialect
2023-08-03 13:51:54,287 INFO org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator [main] HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2023-08-03 13:51:54,293 INFO org.springframework.orm.jpa.AbstractEntityManagerFactoryBean [main] Initialized JPA EntityManagerFactory for persistence unit 'default'
2023-08-03 13:51:54,826 WARN org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration [main] spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2023-08-03 13:51:55,137 INFO org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver [main] Exposing 1 endpoint(s) beneath base path '/actuator'
2023-08-03 13:51:55,156 INFO org.apache.juli.logging.DirectJDKLog [main] Starting ProtocolHandler ["http-nio-9090"]
2023-08-03 13:51:55,172 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [main] Tomcat started on port(s): 9090 (http) with context path ''
2023-08-03 13:51:55,185 INFO org.springframework.boot.StartupInfoLogger [main] Started ShareItServerApp in 3.723 seconds (JVM running for 4.045)
2023-08-03 13:52:23,582 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-08-03 13:52:23,582 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-08-03 13:52:53,584 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-08-03 13:52:53,584 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-08-03 13:52:56,895 INFO org.springframework.orm.jpa.AbstractEntityManagerFactoryBean [SpringApplicationShutdownHook] Closing JPA EntityManagerFactory for persistence unit 'default'
2023-08-03 13:52:56,896 INFO org.hibernate.tool.schema.internal.SchemaDropperImpl$DelayedDropActionImpl [SpringApplicationShutdownHook] HHH000477: Starting delayed evictData of schema as part of SessionFactory shut-down'
2023-08-03 13:52:56,897 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn0: url=jdbc:h2:mem:my_db user=TEST: (connection is dead)
2023-08-03 13:52:56,897 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn1: url=jdbc:h2:mem:my_db user=TEST: (connection is dead)
2023-08-03 13:52:56,897 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 connection closer] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-08-03 13:52:56,897 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn2: url=jdbc:h2:mem:my_db user=TEST: (connection is dead)
2023-08-03 13:52:56,897 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 connection closer] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-08-03 13:52:56,897 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn3: url=jdbc:h2:mem:my_db user=TEST: (connection is dead)
2023-08-03 13:52:56,898 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 connection closer] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-08-03 13:52:56,898 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn4: url=jdbc:h2:mem:my_db user=TEST: (connection is dead)
2023-08-03 13:52:56,898 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 connection closer] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-08-03 13:52:56,898 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn5: url=jdbc:h2:mem:my_db user=TEST: (connection is dead)
2023-08-03 13:52:56,898 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 connection closer] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-08-03 13:52:56,898 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn6: url=jdbc:h2:mem:my_db user=TEST: (connection is dead)
2023-08-03 13:52:56,898 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 connection closer] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-08-03 13:52:56,898 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn7: url=jdbc:h2:mem:my_db user=TEST: (connection is dead)
2023-08-03 13:52:56,898 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 connection closer] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-08-03 13:52:56,898 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn8: url=jdbc:h2:mem:my_db user=TEST: (connection is dead)
2023-08-03 13:52:56,898 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 connection closer] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-08-03 13:52:56,898 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn9: url=jdbc:h2:mem:my_db user=TEST: (connection is dead)
2023-08-03 13:52:56,898 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 connection closer] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-08-03 13:52:57,083 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn10: url=jdbc:h2:mem:my_db user=TEST
2023-08-03 13:52:57,083 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn11: url=jdbc:h2:mem:my_db user=TEST
2023-08-03 13:52:57,084 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn12: url=jdbc:h2:mem:my_db user=TEST
2023-08-03 13:52:57,084 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn13: url=jdbc:h2:mem:my_db user=TEST
2023-08-03 13:52:57,084 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn14: url=jdbc:h2:mem:my_db user=TEST
2023-08-03 13:52:57,084 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn15: url=jdbc:h2:mem:my_db user=TEST
2023-08-03 13:52:57,085 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn16: url=jdbc:h2:mem:my_db user=TEST
2023-08-03 13:52:57,085 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn17: url=jdbc:h2:mem:my_db user=TEST
2023-08-03 13:52:57,085 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn18: url=jdbc:h2:mem:my_db user=TEST
2023-08-03 13:52:57,085 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn19: url=jdbc:h2:mem:my_db user=TEST
2023-08-03 13:52:57,085 INFO com.zaxxer.hikari.HikariDataSource [SpringApplicationShutdownHook] HikariPool-1 - Shutdown initiated...
2023-08-03 13:52:57,085 DEBUG com.zaxxer.hikari.pool.HikariPool [SpringApplicationShutdownHook] HikariPool-1 - Before shutdown stats (total=10, active=0, idle=10, waiting=0)
2023-08-03 13:52:57,086 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn10: url=jdbc:h2:mem:my_db user=TEST: (connection evicted)
2023-08-03 13:52:57,086 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn11: url=jdbc:h2:mem:my_db user=TEST: (connection evicted)
2023-08-03 13:52:57,086 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn12: url=jdbc:h2:mem:my_db user=TEST: (connection evicted)
2023-08-03 13:52:57,086 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn13: url=jdbc:h2:mem:my_db user=TEST: (connection evicted)
2023-08-03 13:52:57,087 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn14: url=jdbc:h2:mem:my_db user=TEST: (connection evicted)
2023-08-03 13:52:57,087 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn15: url=jdbc:h2:mem:my_db user=TEST: (connection evicted)
2023-08-03 13:52:57,087 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn16: url=jdbc:h2:mem:my_db user=TEST: (connection evicted)
2023-08-03 13:52:57,087 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn17: url=jdbc:h2:mem:my_db user=TEST: (connection evicted)
2023-08-03 13:52:57,087 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn18: url=jdbc:h2:mem:my_db user=TEST: (connection evicted)
2023-08-03 13:52:57,087 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn19: url=jdbc:h2:mem:my_db user=TEST: (connection evicted)
2023-08-03 13:52:57,087 DEBUG com.zaxxer.hikari.pool.HikariPool [SpringApplicationShutdownHook] HikariPool-1 - After shutdown stats (total=0, active=0, idle=0, waiting=0)
2023-08-03 13:52:57,087 INFO com.zaxxer.hikari.HikariDataSource [SpringApplicationShutdownHook] HikariPool-1 - Shutdown completed.
2023-08-03 20:20:25,422 INFO org.springframework.boot.StartupInfoLogger [main] Starting ShareItServerApp using Java 18.0.2 on DESKTOP-HBQA1DH with PID 7668 (C:\Users\Aser\dev\java-shareit\ser\target\classes started by Aser in C:\Users\Aser\dev\java-shareit)
2023-08-03 20:20:25,425 INFO org.springframework.boot.SpringApplication [main] No active profile set, falling back to 1 default profile: "default"
2023-08-03 20:20:26,075 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2023-08-03 20:20:26,144 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Finished Spring Data repository scanning in 62 ms. Found 5 JPA repository interfaces.
2023-08-03 20:20:26,608 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [main] Tomcat initialized with port(s): 9090 (http)
2023-08-03 20:20:26,615 INFO org.apache.juli.logging.DirectJDKLog [main] Initializing ProtocolHandler ["http-nio-9090"]
2023-08-03 20:20:26,616 INFO org.apache.juli.logging.DirectJDKLog [main] Starting service [Tomcat]
2023-08-03 20:20:26,616 INFO org.apache.juli.logging.DirectJDKLog [main] Starting Servlet engine: [Apache Tomcat/9.0.71]
2023-08-03 20:20:26,690 INFO org.apache.juli.logging.DirectJDKLog [main] Initializing Spring embedded WebApplicationContext
2023-08-03 20:20:26,690 INFO org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext [main] Root WebApplicationContext: initialization completed in 1218 ms
2023-08-03 20:20:26,750 DEBUG com.zaxxer.hikari.HikariConfig [main] Driver class org.h2.Driver found in Thread context class loader TomcatEmbeddedWebappClassLoader
  context: ROOT
  delegate: true
----------> Parent Classloader:
jdk.internal.loader.ClassLoaders$AppClassLoader@3cd1a2f1

2023-08-03 20:20:26,922 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [main] Fetching JDBC Connection from DataSource
2023-08-03 20:20:26,922 DEBUG com.zaxxer.hikari.HikariConfig [main] HikariPool-1 - configuration:
2023-08-03 20:20:26,924 DEBUG com.zaxxer.hikari.HikariConfig [main] allowPoolSuspension................................false
2023-08-03 20:20:26,924 DEBUG com.zaxxer.hikari.HikariConfig [main] autoCommit................................true
2023-08-03 20:20:26,924 DEBUG com.zaxxer.hikari.HikariConfig [main] catalog................................none
2023-08-03 20:20:26,925 DEBUG com.zaxxer.hikari.HikariConfig [main] connectionInitSql................................none
2023-08-03 20:20:26,925 DEBUG com.zaxxer.hikari.HikariConfig [main] connectionTestQuery................................none
2023-08-03 20:20:26,926 DEBUG com.zaxxer.hikari.HikariConfig [main] connectionTimeout................................30000
2023-08-03 20:20:26,926 DEBUG com.zaxxer.hikari.HikariConfig [main] dataSource................................none
2023-08-03 20:20:26,926 DEBUG com.zaxxer.hikari.HikariConfig [main] dataSourceClassName................................none
2023-08-03 20:20:26,926 DEBUG com.zaxxer.hikari.HikariConfig [main] dataSourceJNDI................................none
2023-08-03 20:20:26,926 DEBUG com.zaxxer.hikari.HikariConfig [main] dataSourceProperties................................{password=<masked>}
2023-08-03 20:20:26,926 DEBUG com.zaxxer.hikari.HikariConfig [main] driverClassName................................"org.h2.Driver"
2023-08-03 20:20:26,927 DEBUG com.zaxxer.hikari.HikariConfig [main] exceptionOverrideClassName................................none
2023-08-03 20:20:26,927 DEBUG com.zaxxer.hikari.HikariConfig [main] healthCheckProperties................................{}
2023-08-03 20:20:26,927 DEBUG com.zaxxer.hikari.HikariConfig [main] healthCheckRegistry................................none
2023-08-03 20:20:26,927 DEBUG com.zaxxer.hikari.HikariConfig [main] idleTimeout................................600000
2023-08-03 20:20:26,927 DEBUG com.zaxxer.hikari.HikariConfig [main] initializationFailTimeout................................1
2023-08-03 20:20:26,927 DEBUG com.zaxxer.hikari.HikariConfig [main] isolateInternalQueries................................false
2023-08-03 20:20:26,928 DEBUG com.zaxxer.hikari.HikariConfig [main] jdbcUrl................................jdbc:h2:mem:my_db
2023-08-03 20:20:26,928 DEBUG com.zaxxer.hikari.HikariConfig [main] keepaliveTime................................0
2023-08-03 20:20:26,928 DEBUG com.zaxxer.hikari.HikariConfig [main] leakDetectionThreshold................................0
2023-08-03 20:20:26,928 DEBUG com.zaxxer.hikari.HikariConfig [main] maxLifetime................................1800000
2023-08-03 20:20:26,928 DEBUG com.zaxxer.hikari.HikariConfig [main] maximumPoolSize................................10
2023-08-03 20:20:26,928 DEBUG com.zaxxer.hikari.HikariConfig [main] metricRegistry................................none
2023-08-03 20:20:26,928 DEBUG com.zaxxer.hikari.HikariConfig [main] metricsTrackerFactory................................com.zaxxer.hikari.metrics.micrometer.MicrometerMetricsTrackerFactory@789c3057
2023-08-03 20:20:26,929 DEBUG com.zaxxer.hikari.HikariConfig [main] minimumIdle................................10
2023-08-03 20:20:26,929 DEBUG com.zaxxer.hikari.HikariConfig [main] password................................<masked>
2023-08-03 20:20:26,929 DEBUG com.zaxxer.hikari.HikariConfig [main] poolName................................"HikariPool-1"
2023-08-03 20:20:26,929 DEBUG com.zaxxer.hikari.HikariConfig [main] readOnly................................false
2023-08-03 20:20:26,929 DEBUG com.zaxxer.hikari.HikariConfig [main] registerMbeans................................false
2023-08-03 20:20:26,929 DEBUG com.zaxxer.hikari.HikariConfig [main] scheduledExecutor................................none
2023-08-03 20:20:26,929 DEBUG com.zaxxer.hikari.HikariConfig [main] schema................................none
2023-08-03 20:20:26,929 DEBUG com.zaxxer.hikari.HikariConfig [main] threadFactory................................internal
2023-08-03 20:20:26,930 DEBUG com.zaxxer.hikari.HikariConfig [main] transactionIsolation................................default
2023-08-03 20:20:26,930 DEBUG com.zaxxer.hikari.HikariConfig [main] username................................"test"
2023-08-03 20:20:26,930 DEBUG com.zaxxer.hikari.HikariConfig [main] validationTimeout................................5000
2023-08-03 20:20:26,930 INFO com.zaxxer.hikari.HikariDataSource [main] HikariPool-1 - Starting...
2023-08-03 20:20:27,083 DEBUG com.zaxxer.hikari.pool.HikariPool [main] HikariPool-1 - Added connection conn0: url=jdbc:h2:mem:my_db user=TEST
2023-08-03 20:20:27,086 INFO com.zaxxer.hikari.HikariDataSource [main] HikariPool-1 - Start completed.
2023-08-03 20:20:27,126 INFO org.hibernate.jpa.internal.util.LogHelper [main] HHH000204: Processing PersistenceUnitInfo [name: default]
2023-08-03 20:20:27,159 INFO org.hibernate.Version [main] HHH000412: Hibernate ORM core version 5.6.15.Final
2023-08-03 20:20:27,188 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=1, active=0, idle=1, waiting=0)
2023-08-03 20:20:27,189 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn1: url=jdbc:h2:mem:my_db user=TEST
2023-08-03 20:20:27,189 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn2: url=jdbc:h2:mem:my_db user=TEST
2023-08-03 20:20:27,190 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn3: url=jdbc:h2:mem:my_db user=TEST
2023-08-03 20:20:27,190 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn4: url=jdbc:h2:mem:my_db user=TEST
2023-08-03 20:20:27,191 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn5: url=jdbc:h2:mem:my_db user=TEST
2023-08-03 20:20:27,191 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn6: url=jdbc:h2:mem:my_db user=TEST
2023-08-03 20:20:27,192 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn7: url=jdbc:h2:mem:my_db user=TEST
2023-08-03 20:20:27,192 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn8: url=jdbc:h2:mem:my_db user=TEST
2023-08-03 20:20:27,192 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn9: url=jdbc:h2:mem:my_db user=TEST
2023-08-03 20:20:27,192 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 connection adder] HikariPool-1 - After adding stats (total=10, active=0, idle=10, waiting=0)
2023-08-03 20:20:27,273 INFO org.hibernate.annotations.common.reflection.java.JavaReflectionManager [main] HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2023-08-03 20:20:27,354 INFO org.hibernate.dialect.Dialect [main] HHH000400: Using dialect: org.hibernate.dialect.PostgreSQL10Dialect
2023-08-03 20:20:27,778 INFO org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator [main] HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2023-08-03 20:20:27,784 INFO org.springframework.orm.jpa.AbstractEntityManagerFactoryBean [main] Initialized JPA EntityManagerFactory for persistence unit 'default'
2023-08-03 20:20:28,345 WARN org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration [main] spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2023-08-03 20:20:28,661 INFO org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver [main] Exposing 1 endpoint(s) beneath base path '/actuator'
2023-08-03 20:20:28,681 INFO org.apache.juli.logging.DirectJDKLog [main] Starting ProtocolHandler ["http-nio-9090"]
2023-08-03 20:20:28,710 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [main] Tomcat started on port(s): 9090 (http) with context path ''
2023-08-03 20:20:28,723 INFO org.springframework.boot.StartupInfoLogger [main] Started ShareItServerApp in 3.691 seconds (JVM running for 4.013)
2023-08-03 20:20:56,226 INFO org.hibernate.validator.internal.util.Version [background-preinit] HV000001: Hibernate Validator 6.2.5.Final
2023-08-03 20:20:56,232 INFO org.springframework.boot.StartupInfoLogger [main] Starting ShareItGateway using Java 18.0.2 on DESKTOP-HBQA1DH with PID 11224 (C:\Users\Aser\dev\java-shareit\shareIt-gateway\target\classes started by Aser in C:\Users\Aser\dev\java-shareit)
2023-08-03 20:20:56,233 INFO org.springframework.boot.SpringApplication [main] No active profile set, falling back to 1 default profile: "default"
2023-08-03 20:20:57,160 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [main] Tomcat initialized with port(s): 8080 (http)
2023-08-03 20:20:57,167 INFO org.apache.juli.logging.DirectJDKLog [main] Initializing ProtocolHandler ["http-nio-8080"]
2023-08-03 20:20:57,167 INFO org.apache.juli.logging.DirectJDKLog [main] Starting service [Tomcat]
2023-08-03 20:20:57,167 INFO org.apache.juli.logging.DirectJDKLog [main] Starting Servlet engine: [Apache Tomcat/9.0.71]
2023-08-03 20:20:57,189 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-08-03 20:20:57,189 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-08-03 20:20:57,232 INFO org.apache.juli.logging.DirectJDKLog [main] Initializing Spring embedded WebApplicationContext
2023-08-03 20:20:57,232 INFO org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext [main] Root WebApplicationContext: initialization completed in 959 ms
2023-08-03 20:20:57,788 INFO org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver [main] Exposing 1 endpoint(s) beneath base path '/actuator'
2023-08-03 20:20:57,804 INFO org.apache.juli.logging.DirectJDKLog [main] Starting ProtocolHandler ["http-nio-8080"]
2023-08-03 20:20:57,820 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [main] Tomcat started on port(s): 8080 (http) with context path ''
2023-08-03 20:20:57,832 INFO org.springframework.boot.StartupInfoLogger [main] Started ShareItGateway in 2.004 seconds (JVM running for 2.319)
2023-08-03 20:21:21,412 INFO org.apache.juli.logging.DirectJDKLog [http-nio-8080-exec-2] Initializing Spring DispatcherServlet 'dispatcherServlet'
2023-08-03 20:21:21,412 INFO org.springframework.web.servlet.FrameworkServlet [http-nio-8080-exec-2] Initializing Servlet 'dispatcherServlet'
2023-08-03 20:21:21,413 INFO org.springframework.web.servlet.FrameworkServlet [http-nio-8080-exec-2] Completed initialization in 1 ms
2023-08-03 20:21:21,546 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-2] HTTP POST http://localhost:9090/users
2023-08-03 20:21:21,552 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-2] Accept=[application/json, application/*+json]
2023-08-03 20:21:21,561 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-2] Writing [UserDto(id=0, email=user@user.com, name=user)] as "application/json"
2023-08-03 20:21:21,634 INFO org.apache.juli.logging.DirectJDKLog [http-nio-9090-exec-1] Initializing Spring DispatcherServlet 'dispatcherServlet'
2023-08-03 20:21:21,635 INFO org.springframework.web.servlet.FrameworkServlet [http-nio-9090-exec-1] Initializing Servlet 'dispatcherServlet'
2023-08-03 20:21:21,636 INFO org.springframework.web.servlet.FrameworkServlet [http-nio-9090-exec-1] Completed initialization in 1 ms
2023-08-03 20:21:21,767 INFO ru.practicum.user.UserController [http-nio-9090-exec-1] Было создано: ru.practicum.user.model.User@20a0c76e
2023-08-03 20:21:21,793 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-2] Response 201 CREATED
2023-08-03 20:21:21,794 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-2] Reading to [java.lang.Object]
2023-08-03 20:21:21,849 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-3] HTTP POST http://localhost:9090/users
2023-08-03 20:21:21,850 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-3] Accept=[application/json, application/*+json]
2023-08-03 20:21:21,850 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-3] Writing [UserDto(id=0, email=user@user.com, name=user)] as "application/json"
2023-08-03 20:21:21,856 WARN org.hibernate.engine.jdbc.spi.SqlExceptionHelper [http-nio-9090-exec-2] SQL Error: 23505, SQLState: 23505
2023-08-03 20:21:21,856 ERROR org.hibernate.engine.jdbc.spi.SqlExceptionHelper [http-nio-9090-exec-2] Нарушение уникального индекса или первичного ключа: "PUBLIC.UNIQ_EMAIL_INDEX_4 ON PUBLIC.USERS(EMAIL NULLS FIRST) VALUES ( /* 1 */ 'user@user.com' )"
Unique index or primary key violation: "PUBLIC.UNIQ_EMAIL_INDEX_4 ON PUBLIC.USERS(EMAIL NULLS FIRST) VALUES ( /* 1 */ 'user@user.com' )"; SQL statement:
insert into users (email, name) values (?, ?) [23505-214]
2023-08-03 20:21:21,861 INFO ru.practicum.ErrorHandler [http-nio-9090-exec-2] Server error could not execute statement; SQL [n/a]; constraint [null]; nested exception is org.hibernate.exception.ConstraintViolationException: could not execute statement
2023-08-03 20:21:21,866 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-3] Response 500 INTERNAL_SERVER_ERROR
2023-08-03 20:21:21,895 INFO ru.practicum.shareit.ErrorHandler [http-nio-8080-exec-5] Validation failed for field: email. Error message: Email can not be null
2023-08-03 20:21:21,921 INFO ru.practicum.shareit.ErrorHandler [http-nio-8080-exec-7] Validation failed for field: email. Error message: Email is wrong
2023-08-03 20:21:21,947 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-9] HTTP PATCH http://localhost:9090/users/1
2023-08-03 20:21:21,947 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-9] Accept=[application/json, application/*+json]
2023-08-03 20:21:21,948 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-9] Writing [UserDto(id=0, email=update@user.com, name=update)] as "application/json"
2023-08-03 20:21:21,968 INFO ru.practicum.user.UserServiceImpl [http-nio-9090-exec-3] Обновление: ru.practicum.user.model.User@117c4097
2023-08-03 20:21:21,969 INFO ru.practicum.user.UserServiceImpl [http-nio-9090-exec-3] Электронная почта обновлена
2023-08-03 20:21:21,969 INFO ru.practicum.user.UserServiceImpl [http-nio-9090-exec-3] Имя ползователя обновлено
2023-08-03 20:21:21,977 INFO ru.practicum.user.UserController [http-nio-9090-exec-3] Был обновлен: ru.practicum.user.model.User@117c4097
2023-08-03 20:21:21,979 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-9] Response 200 OK
2023-08-03 20:21:21,980 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-9] Reading to [java.lang.Object]
2023-08-03 20:21:21,980 INFO ru.practicum.shareit.user.UserController [http-nio-8080-exec-9] Has been updated: <200,{id=1, email=update@user.com, name=update},[Content-Type:"application/json", Transfer-Encoding:"chunked", Date:"Thu, 03 Aug 2023 16:21:21 GMT", Keep-Alive:"timeout=60", Connection:"keep-alive"]>
2023-08-03 20:21:22,004 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-10] HTTP POST http://localhost:9090/users
2023-08-03 20:21:22,004 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-10] Accept=[application/json, application/*+json]
2023-08-03 20:21:22,005 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-10] Writing [UserDto(id=0, email=user@user.com, name=user)] as "application/json"
2023-08-03 20:21:22,009 INFO ru.practicum.user.UserController [http-nio-9090-exec-4] Было создано: ru.practicum.user.model.User@91eeb33
2023-08-03 20:21:22,011 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-10] Response 201 CREATED
2023-08-03 20:21:22,012 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-10] Reading to [java.lang.Object]
2023-08-03 20:21:22,034 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-1] HTTP PATCH http://localhost:9090/users/1
2023-08-03 20:21:22,034 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-1] Accept=[application/json, application/*+json]
2023-08-03 20:21:22,034 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-1] Writing [UserDto(id=0, email=null, name=updateName)] as "application/json"
2023-08-03 20:21:22,039 INFO ru.practicum.user.UserServiceImpl [http-nio-9090-exec-5] Обновление: ru.practicum.user.model.User@2f386b4
2023-08-03 20:21:22,039 INFO ru.practicum.user.UserServiceImpl [http-nio-9090-exec-5] Имя ползователя обновлено
2023-08-03 20:21:22,041 INFO ru.practicum.user.UserController [http-nio-9090-exec-5] Был обновлен: ru.practicum.user.model.User@2f386b4
2023-08-03 20:21:22,042 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-1] Response 200 OK
2023-08-03 20:21:22,043 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-1] Reading to [java.lang.Object]
2023-08-03 20:21:22,043 INFO ru.practicum.shareit.user.UserController [http-nio-8080-exec-1] Has been updated: <200,{id=1, email=update@user.com, name=updateName},[Content-Type:"application/json", Transfer-Encoding:"chunked", Date:"Thu, 03 Aug 2023 16:21:21 GMT", Keep-Alive:"timeout=60", Connection:"keep-alive"]>
2023-08-03 20:21:22,069 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-2] HTTP PATCH http://localhost:9090/users/1
2023-08-03 20:21:22,069 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-2] Accept=[application/json, application/*+json]
2023-08-03 20:21:22,070 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-2] Writing [UserDto(id=0, email=updateName@user.com, name=null)] as "application/json"
2023-08-03 20:21:22,074 INFO ru.practicum.user.UserServiceImpl [http-nio-9090-exec-6] Обновление: ru.practicum.user.model.User@17301bd5
2023-08-03 20:21:22,074 INFO ru.practicum.user.UserServiceImpl [http-nio-9090-exec-6] Электронная почта обновлена
2023-08-03 20:21:22,075 INFO ru.practicum.user.UserController [http-nio-9090-exec-6] Был обновлен: ru.practicum.user.model.User@17301bd5
2023-08-03 20:21:22,076 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-2] Response 200 OK
2023-08-03 20:21:22,077 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-2] Reading to [java.lang.Object]
2023-08-03 20:21:22,077 INFO ru.practicum.shareit.user.UserController [http-nio-8080-exec-2] Has been updated: <200,{id=1, email=updateName@user.com, name=updateName},[Content-Type:"application/json", Transfer-Encoding:"chunked", Date:"Thu, 03 Aug 2023 16:21:21 GMT", Keep-Alive:"timeout=60", Connection:"keep-alive"]>
2023-08-03 20:21:22,100 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-3] HTTP PATCH http://localhost:9090/users/1
2023-08-03 20:21:22,100 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-3] Accept=[application/json, application/*+json]
2023-08-03 20:21:22,101 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-3] Writing [UserDto(id=0, email=updateName@user.com, name=null)] as "application/json"
2023-08-03 20:21:22,103 INFO ru.practicum.user.UserServiceImpl [http-nio-9090-exec-7] Обновление: ru.practicum.user.model.User@21226da5
2023-08-03 20:21:22,104 INFO ru.practicum.user.UserController [http-nio-9090-exec-7] Был обновлен: ru.practicum.user.model.User@21226da5
2023-08-03 20:21:22,105 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-3] Response 200 OK
2023-08-03 20:21:22,105 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-3] Reading to [java.lang.Object]
2023-08-03 20:21:22,106 INFO ru.practicum.shareit.user.UserController [http-nio-8080-exec-3] Has been updated: <200,{id=1, email=updateName@user.com, name=updateName},[Content-Type:"application/json", Transfer-Encoding:"chunked", Date:"Thu, 03 Aug 2023 16:21:21 GMT", Keep-Alive:"timeout=60", Connection:"keep-alive"]>
2023-08-03 20:21:22,128 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-4] HTTP PATCH http://localhost:9090/users/1
2023-08-03 20:21:22,128 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-4] Accept=[application/json, application/*+json]
2023-08-03 20:21:22,129 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-4] Writing [UserDto(id=0, email=user@user.com, name=null)] as "application/json"
2023-08-03 20:21:22,132 INFO ru.practicum.user.UserServiceImpl [http-nio-9090-exec-8] Обновление: ru.practicum.user.model.User@56d00af4
2023-08-03 20:21:22,132 INFO ru.practicum.user.UserServiceImpl [http-nio-9090-exec-8] Электронная почта обновлена
2023-08-03 20:21:22,134 WARN org.hibernate.engine.jdbc.spi.SqlExceptionHelper [http-nio-9090-exec-8] SQL Error: 23505, SQLState: 23505
2023-08-03 20:21:22,134 ERROR org.hibernate.engine.jdbc.spi.SqlExceptionHelper [http-nio-9090-exec-8] Нарушение уникального индекса или первичного ключа: "PUBLIC.UNIQ_EMAIL_INDEX_4 ON PUBLIC.USERS(EMAIL NULLS FIRST) VALUES ( /* 3 */ 'user@user.com' )"
Unique index or primary key violation: "PUBLIC.UNIQ_EMAIL_INDEX_4 ON PUBLIC.USERS(EMAIL NULLS FIRST) VALUES ( /* 3 */ 'user@user.com' )"; SQL statement:
update users set email=?, name=? where id=? [23505-214]
2023-08-03 20:21:22,134 INFO org.hibernate.engine.jdbc.batch.internal.AbstractBatchImpl [http-nio-9090-exec-8] HHH000010: On release of batch it still contained JDBC statements
2023-08-03 20:21:22,135 INFO ru.practicum.ErrorHandler [http-nio-9090-exec-8] Server error could not execute statement; SQL [n/a]; constraint [null]; nested exception is org.hibernate.exception.ConstraintViolationException: could not execute statement
2023-08-03 20:21:22,136 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-4] Response 500 INTERNAL_SERVER_ERROR
2023-08-03 20:21:22,137 INFO ru.practicum.shareit.user.UserController [http-nio-8080-exec-4] Has been updated: <500 INTERNAL_SERVER_ERROR Internal Server Error,[B@7fd5be25,[]>
2023-08-03 20:21:22,161 INFO ru.practicum.shareit.user.UserController [http-nio-8080-exec-6] Request to get user with ID: 1
2023-08-03 20:21:22,163 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-6] HTTP GET http://localhost:9090/users/1
2023-08-03 20:21:22,163 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-6] Accept=[application/json, application/*+json]
2023-08-03 20:21:22,166 INFO ru.practicum.user.UserController [http-nio-9090-exec-9] Запрос на получение пользователя ID: 1
2023-08-03 20:21:22,167 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-9] Setting JDBC Connection [HikariProxyConnection@1591593926 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST] read-only
2023-08-03 20:21:22,168 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-9] Resetting read-only flag of JDBC Connection [HikariProxyConnection@1591593926 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST]
2023-08-03 20:21:22,170 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-6] Response 200 OK
2023-08-03 20:21:22,171 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-6] Reading to [java.lang.Object]
2023-08-03 20:21:22,194 INFO ru.practicum.shareit.user.UserController [http-nio-8080-exec-7] Request to get user with ID: 3
2023-08-03 20:21:22,195 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-7] HTTP GET http://localhost:9090/users/3
2023-08-03 20:21:22,195 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-7] Accept=[application/json, application/*+json]
2023-08-03 20:21:22,197 INFO ru.practicum.user.UserController [http-nio-9090-exec-10] Запрос на получение пользователя ID: 3
2023-08-03 20:21:22,198 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-10] Setting JDBC Connection [HikariProxyConnection@850353887 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST] read-only
2023-08-03 20:21:22,199 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-10] Resetting read-only flag of JDBC Connection [HikariProxyConnection@850353887 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST]
2023-08-03 20:21:22,201 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-7] Response 200 OK
2023-08-03 20:21:22,202 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-7] Reading to [java.lang.Object]
2023-08-03 20:21:22,229 INFO ru.practicum.shareit.user.UserController [http-nio-8080-exec-8] Request to get user with ID: 100
2023-08-03 20:21:22,229 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-8] HTTP GET http://localhost:9090/users/100
2023-08-03 20:21:22,230 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-8] Accept=[application/json, application/*+json]
2023-08-03 20:21:22,232 INFO ru.practicum.user.UserController [http-nio-9090-exec-1] Запрос на получение пользователя ID: 100
2023-08-03 20:21:22,232 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-1] Setting JDBC Connection [HikariProxyConnection@1341177344 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST] read-only
2023-08-03 20:21:22,233 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-1] Resetting read-only flag of JDBC Connection [HikariProxyConnection@1341177344 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST]
2023-08-03 20:21:22,233 INFO ru.practicum.user.UserServiceImpl [http-nio-9090-exec-1] Throw new NotFoundException
2023-08-03 20:21:22,235 INFO ru.practicum.ErrorHandler [http-nio-9090-exec-1] Not found: User with ID: 100 not found
2023-08-03 20:21:22,237 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-8] Response 404 NOT_FOUND
2023-08-03 20:21:22,260 INFO ru.practicum.shareit.user.UserController [http-nio-8080-exec-9] Request to delete with id: 3
2023-08-03 20:21:22,261 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-9] HTTP DELETE http://localhost:9090/users/3
2023-08-03 20:21:22,261 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-9] Accept=[application/json, application/*+json]
2023-08-03 20:21:22,264 INFO ru.practicum.user.UserController [http-nio-9090-exec-2] Запрос на удаление с ID: 3
2023-08-03 20:21:22,272 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-9] Response 204 NO_CONTENT
2023-08-03 20:21:22,296 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-10] HTTP POST http://localhost:9090/users
2023-08-03 20:21:22,296 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-10] Accept=[application/json, application/*+json]
2023-08-03 20:21:22,297 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-10] Writing [UserDto(id=0, email=user@user.com, name=user)] as "application/json"
2023-08-03 20:21:22,300 INFO ru.practicum.user.UserController [http-nio-9090-exec-3] Было создано: ru.practicum.user.model.User@20cba444
2023-08-03 20:21:22,301 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-10] Response 201 CREATED
2023-08-03 20:21:22,301 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-10] Reading to [java.lang.Object]
2023-08-03 20:21:22,322 INFO ru.practicum.shareit.user.UserController [http-nio-8080-exec-1] Request on get all
2023-08-03 20:21:22,323 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-1] HTTP GET http://localhost:9090/users
2023-08-03 20:21:22,323 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-1] Accept=[application/json, application/*+json]
2023-08-03 20:21:22,325 INFO ru.practicum.user.UserController [http-nio-9090-exec-4] Запрос на получение всего
2023-08-03 20:21:22,326 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-4] Setting JDBC Connection [HikariProxyConnection@945631943 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST] read-only
2023-08-03 20:21:22,335 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-4] Resetting read-only flag of JDBC Connection [HikariProxyConnection@945631943 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST]
2023-08-03 20:21:22,339 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-1] Response 200 OK
2023-08-03 20:21:22,339 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-1] Reading to [java.lang.Object]
2023-08-03 20:21:22,380 INFO ru.practicum.shareit.item.ItemController [http-nio-8080-exec-2] Request on add ItemDto(id=0, name=Дрель, description=Простая дрель, available=true, requestId=null), user id: 1
2023-08-03 20:21:22,384 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-2] HTTP POST http://localhost:9090/items
2023-08-03 20:21:22,384 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-2] Accept=[application/json, application/*+json]
2023-08-03 20:21:22,385 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-2] Writing [ItemDto(id=0, name=Дрель, description=Простая дрель, available=true, requestId=null)] as "application/json"
2023-08-03 20:21:22,395 INFO ru.practicum.item.ItemController [http-nio-9090-exec-5] Запрос на добавление ItemDto(id=0, name=Дрель, description=Простая дрель, available=true, requestId=null), идентификатор пользователя: 1
2023-08-03 20:21:22,412 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-2] Response 200 OK
2023-08-03 20:21:22,412 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-2] Reading to [java.lang.Object]
2023-08-03 20:21:22,437 INFO ru.practicum.shareit.ErrorHandler [http-nio-8080-exec-3] Missing request header: Required request header 'X-Sharer-User-Id' for method parameter type Long is not present
2023-08-03 20:21:22,454 INFO ru.practicum.shareit.item.ItemController [http-nio-8080-exec-5] Request on add ItemDto(id=0, name=Дрель, description=Простая дрель, available=true, requestId=null), user id: 10
2023-08-03 20:21:22,455 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-5] HTTP POST http://localhost:9090/items
2023-08-03 20:21:22,455 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-5] Accept=[application/json, application/*+json]
2023-08-03 20:21:22,455 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-5] Writing [ItemDto(id=0, name=Дрель, description=Простая дрель, available=true, requestId=null)] as "application/json"
2023-08-03 20:21:22,458 INFO ru.practicum.item.ItemController [http-nio-9090-exec-6] Запрос на добавление ItemDto(id=0, name=Дрель, description=Простая дрель, available=true, requestId=null), идентификатор пользователя: 10
2023-08-03 20:21:22,460 INFO ru.practicum.ErrorHandler [http-nio-9090-exec-6] Not found: User with ID: 10 not found
2023-08-03 20:21:22,461 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-5] Response 404 NOT_FOUND
2023-08-03 20:21:22,484 INFO ru.practicum.shareit.ErrorHandler [http-nio-8080-exec-6] Validation failed for field: available. Error message: Available should be specified
2023-08-03 20:21:22,508 INFO ru.practicum.shareit.ErrorHandler [http-nio-8080-exec-8] Validation failed for field: name. Error message: Name can't blank
2023-08-03 20:21:22,529 INFO ru.practicum.shareit.ErrorHandler [http-nio-8080-exec-10] Validation failed for field: description. Error message: Description can't blank
2023-08-03 20:21:22,550 INFO ru.practicum.shareit.item.ItemController [http-nio-8080-exec-2] Request on edit item id: 1, ItemDto(id=1, name=Дрель+, description=Аккумуляторная дрель, available=false, requestId=null), user id: 1
2023-08-03 20:21:22,551 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-2] HTTP PATCH http://localhost:9090/items/1
2023-08-03 20:21:22,551 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-2] Accept=[application/json, application/*+json]
2023-08-03 20:21:22,551 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-2] Writing [ItemDto(id=1, name=Дрель+, description=Аккумуляторная дрель, available=false, requestId=null)] as "application/json"
2023-08-03 20:21:22,555 INFO ru.practicum.item.ItemController [http-nio-9090-exec-7] Запрос на редактирование идентификатора элемента: 1, ItemDto(id=1, name=Дрель+, description=Аккумуляторная дрель, available=false, requestId=null), идентификатор пользователя: 1
2023-08-03 20:21:22,563 INFO ru.practicum.item.ItemServiceImpl [http-nio-9090-exec-7] Обновление: ru.practicum.item.model.Item@26528e48
2023-08-03 20:21:22,563 INFO ru.practicum.item.ItemServiceImpl [http-nio-9090-exec-7] Название обновлено
2023-08-03 20:21:22,563 INFO ru.practicum.item.ItemServiceImpl [http-nio-9090-exec-7] Описание обновлено
2023-08-03 20:21:22,564 INFO ru.practicum.item.ItemServiceImpl [http-nio-9090-exec-7] Доступность обновлена
2023-08-03 20:21:22,567 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-2] Response 200 OK
2023-08-03 20:21:22,568 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-2] Reading to [java.lang.Object]
2023-08-03 20:21:22,591 INFO ru.practicum.shareit.ErrorHandler [http-nio-8080-exec-3] Missing request header: Required request header 'X-Sharer-User-Id' for method parameter type Long is not present
2023-08-03 20:21:22,614 INFO ru.practicum.shareit.item.ItemController [http-nio-8080-exec-5] Request on edit item id: 1, ItemDto(id=0, name=Дрель, description=Простая дрель, available=false, requestId=null), user id: 3
2023-08-03 20:21:22,615 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-5] HTTP PATCH http://localhost:9090/items/1
2023-08-03 20:21:22,615 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-5] Accept=[application/json, application/*+json]
2023-08-03 20:21:22,615 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-5] Writing [ItemDto(id=0, name=Дрель, description=Простая дрель, available=false, requestId=null)] as "application/json"
2023-08-03 20:21:22,618 INFO ru.practicum.item.ItemController [http-nio-9090-exec-8] Запрос на редактирование идентификатора элемента: 1, ItemDto(id=0, name=Дрель, description=Простая дрель, available=false, requestId=null), идентификатор пользователя: 3
2023-08-03 20:21:22,620 INFO ru.practicum.item.ItemServiceImpl [http-nio-9090-exec-8] Обновление: ru.practicum.item.model.Item@77b37e51
2023-08-03 20:21:22,621 INFO ru.practicum.ErrorHandler [http-nio-9090-exec-8] Not found: Пользователь не является владельцем элемента
2023-08-03 20:21:22,623 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-5] Response 404 NOT_FOUND
2023-08-03 20:21:22,644 INFO ru.practicum.shareit.item.ItemController [http-nio-8080-exec-6] Request on edit item id: 1, ItemDto(id=0, name=null, description=null, available=true, requestId=null), user id: 1
2023-08-03 20:21:22,645 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-6] HTTP PATCH http://localhost:9090/items/1
2023-08-03 20:21:22,645 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-6] Accept=[application/json, application/*+json]
2023-08-03 20:21:22,645 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-6] Writing [ItemDto(id=0, name=null, description=null, available=true, requestId=null)] as "application/json"
2023-08-03 20:21:22,647 INFO ru.practicum.item.ItemController [http-nio-9090-exec-9] Запрос на редактирование идентификатора элемента: 1, ItemDto(id=0, name=null, description=null, available=true, requestId=null), идентификатор пользователя: 1
2023-08-03 20:21:22,649 INFO ru.practicum.item.ItemServiceImpl [http-nio-9090-exec-9] Обновление: ru.practicum.item.model.Item@592551ff
2023-08-03 20:21:22,649 INFO ru.practicum.item.ItemServiceImpl [http-nio-9090-exec-9] Доступность обновлена
2023-08-03 20:21:22,652 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-6] Response 200 OK
2023-08-03 20:21:22,653 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-6] Reading to [java.lang.Object]
2023-08-03 20:21:22,676 INFO ru.practicum.shareit.item.ItemController [http-nio-8080-exec-7] Request on edit item id: 1, ItemDto(id=0, name=null, description=Аккумуляторная дрель + аккумулятор, available=null, requestId=null), user id: 1
2023-08-03 20:21:22,676 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-7] HTTP PATCH http://localhost:9090/items/1
2023-08-03 20:21:22,676 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-7] Accept=[application/json, application/*+json]
2023-08-03 20:21:22,677 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-7] Writing [ItemDto(id=0, name=null, description=Аккумуляторная дрель + аккумулятор, available=null, requestId=null)] as "application/json"
2023-08-03 20:21:22,679 INFO ru.practicum.item.ItemController [http-nio-9090-exec-10] Запрос на редактирование идентификатора элемента: 1, ItemDto(id=0, name=null, description=Аккумуляторная дрель + аккумулятор, available=null, requestId=null), идентификатор пользователя: 1
2023-08-03 20:21:22,681 INFO ru.practicum.item.ItemServiceImpl [http-nio-9090-exec-10] Обновление: ru.practicum.item.model.Item@4d194d58
2023-08-03 20:21:22,681 INFO ru.practicum.item.ItemServiceImpl [http-nio-9090-exec-10] Описание обновлено
2023-08-03 20:21:22,684 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-7] Response 200 OK
2023-08-03 20:21:22,685 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-7] Reading to [java.lang.Object]
2023-08-03 20:21:22,704 INFO ru.practicum.shareit.item.ItemController [http-nio-8080-exec-8] Request on edit item id: 1, ItemDto(id=0, name=Аккумуляторная дрель, description=null, available=null, requestId=null), user id: 1
2023-08-03 20:21:22,705 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-8] HTTP PATCH http://localhost:9090/items/1
2023-08-03 20:21:22,705 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-8] Accept=[application/json, application/*+json]
2023-08-03 20:21:22,706 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-8] Writing [ItemDto(id=0, name=Аккумуляторная дрель, description=null, available=null, requestId=null)] as "application/json"
2023-08-03 20:21:22,708 INFO ru.practicum.item.ItemController [http-nio-9090-exec-1] Запрос на редактирование идентификатора элемента: 1, ItemDto(id=0, name=Аккумуляторная дрель, description=null, available=null, requestId=null), идентификатор пользователя: 1
2023-08-03 20:21:22,709 INFO ru.practicum.item.ItemServiceImpl [http-nio-9090-exec-1] Обновление: ru.practicum.item.model.Item@36448d10
2023-08-03 20:21:22,710 INFO ru.practicum.item.ItemServiceImpl [http-nio-9090-exec-1] Название обновлено
2023-08-03 20:21:22,712 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-8] Response 200 OK
2023-08-03 20:21:22,712 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-8] Reading to [java.lang.Object]
2023-08-03 20:21:22,737 INFO ru.practicum.shareit.item.ItemController [http-nio-8080-exec-9] Request from user ID: 1 on get item. ID: 1
2023-08-03 20:21:22,738 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-9] HTTP GET http://localhost:9090/items/1
2023-08-03 20:21:22,738 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-9] Accept=[application/json, application/*+json]
2023-08-03 20:21:22,740 INFO ru.practicum.item.ItemController [http-nio-9090-exec-2] Запрос от идентификатора пользователя: 1 при получении элемента. Идентификатор: 1
2023-08-03 20:21:22,741 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-2] Setting JDBC Connection [HikariProxyConnection@1089575506 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST] read-only
2023-08-03 20:21:22,742 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-2] Resetting read-only flag of JDBC Connection [HikariProxyConnection@1089575506 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST]
2023-08-03 20:21:22,768 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-9] Response 200 OK
2023-08-03 20:21:22,768 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-9] Reading to [java.lang.Object]
2023-08-03 20:21:22,789 INFO ru.practicum.shareit.item.ItemController [http-nio-8080-exec-10] Request from user ID: 4 on get item. ID: 1
2023-08-03 20:21:22,789 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-10] HTTP GET http://localhost:9090/items/1
2023-08-03 20:21:22,790 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-10] Accept=[application/json, application/*+json]
2023-08-03 20:21:22,791 INFO ru.practicum.item.ItemController [http-nio-9090-exec-3] Запрос от идентификатора пользователя: 4 при получении элемента. Идентификатор: 1
2023-08-03 20:21:22,792 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-3] Setting JDBC Connection [HikariProxyConnection@570593178 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST] read-only
2023-08-03 20:21:22,793 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-3] Resetting read-only flag of JDBC Connection [HikariProxyConnection@570593178 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST]
2023-08-03 20:21:22,794 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-10] Response 200 OK
2023-08-03 20:21:22,795 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-10] Reading to [java.lang.Object]
2023-08-03 20:21:22,814 INFO ru.practicum.shareit.item.ItemController [http-nio-8080-exec-1] Request from user ID: 4 on get item. ID: 100
2023-08-03 20:21:22,815 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-1] HTTP GET http://localhost:9090/items/100
2023-08-03 20:21:22,819 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-1] Accept=[application/json, application/*+json]
2023-08-03 20:21:22,821 INFO ru.practicum.item.ItemController [http-nio-9090-exec-4] Запрос от идентификатора пользователя: 4 при получении элемента. Идентификатор: 100
2023-08-03 20:21:22,822 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-4] Setting JDBC Connection [HikariProxyConnection@1240302926 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST] read-only
2023-08-03 20:21:22,823 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-4] Resetting read-only flag of JDBC Connection [HikariProxyConnection@1240302926 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST]
2023-08-03 20:21:22,824 INFO ru.practicum.ErrorHandler [http-nio-9090-exec-4] Not found: Вещь не найдена
2023-08-03 20:21:22,825 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-1] Response 404 NOT_FOUND
2023-08-03 20:21:22,846 INFO ru.practicum.shareit.item.ItemController [http-nio-8080-exec-2] Request on add ItemDto(id=0, name=Отвертка, description=Аккумуляторная отвертка, available=true, requestId=null), user id: 4
2023-08-03 20:21:22,846 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-2] HTTP POST http://localhost:9090/items
2023-08-03 20:21:22,846 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-2] Accept=[application/json, application/*+json]
2023-08-03 20:21:22,847 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-2] Writing [ItemDto(id=0, name=Отвертка, description=Аккумуляторная отвертка, available=true, requestId=null)] as "application/json"
2023-08-03 20:21:22,849 INFO ru.practicum.item.ItemController [http-nio-9090-exec-5] Запрос на добавление ItemDto(id=0, name=Отвертка, description=Аккумуляторная отвертка, available=true, requestId=null), идентификатор пользователя: 4
2023-08-03 20:21:22,852 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-2] Response 200 OK
2023-08-03 20:21:22,853 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-2] Reading to [java.lang.Object]
2023-08-03 20:21:22,875 INFO ru.practicum.shareit.item.ItemController [http-nio-8080-exec-3] Request on add ItemDto(id=0, name=Клей Момент, description=Тюбик суперклея марки Момент, available=true, requestId=null), user id: 4
2023-08-03 20:21:22,875 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-3] HTTP POST http://localhost:9090/items
2023-08-03 20:21:22,876 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-3] Accept=[application/json, application/*+json]
2023-08-03 20:21:22,876 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-3] Writing [ItemDto(id=0, name=Клей Момент, description=Тюбик суперклея марки Момент, available=true, requestId=null)] as "application/json"
2023-08-03 20:21:22,878 INFO ru.practicum.item.ItemController [http-nio-9090-exec-6] Запрос на добавление ItemDto(id=0, name=Клей Момент, description=Тюбик суперклея марки Момент, available=true, requestId=null), идентификатор пользователя: 4
2023-08-03 20:21:22,881 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-3] Response 200 OK
2023-08-03 20:21:22,881 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-3] Reading to [java.lang.Object]
2023-08-03 20:21:22,903 INFO ru.practicum.shareit.item.ItemController [http-nio-8080-exec-4] Request on get all for user id: 1
2023-08-03 20:21:22,905 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-4] HTTP GET http://localhost:9090/items?from=0&size=20
2023-08-03 20:21:22,905 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-4] Accept=[application/json, application/*+json]
2023-08-03 20:21:22,910 INFO ru.practicum.item.ItemController [http-nio-9090-exec-7] Запрос на получение всего для идентификатора пользователя: 1
2023-08-03 20:21:22,911 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-7] Setting JDBC Connection [HikariProxyConnection@1008075647 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST] read-only
2023-08-03 20:21:22,911 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-7] Resetting read-only flag of JDBC Connection [HikariProxyConnection@1008075647 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST]
2023-08-03 20:21:22,929 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-4] Response 200 OK
2023-08-03 20:21:22,930 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-4] Reading to [java.lang.Object]
2023-08-03 20:21:22,951 INFO ru.practicum.shareit.item.ItemController [http-nio-8080-exec-5] Request on get all for user id: 4
2023-08-03 20:21:22,951 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-5] HTTP GET http://localhost:9090/items?from=0&size=20
2023-08-03 20:21:22,951 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-5] Accept=[application/json, application/*+json]
2023-08-03 20:21:22,953 INFO ru.practicum.item.ItemController [http-nio-9090-exec-8] Запрос на получение всего для идентификатора пользователя: 4
2023-08-03 20:21:22,954 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-8] Setting JDBC Connection [HikariProxyConnection@51988113 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST] read-only
2023-08-03 20:21:22,955 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-8] Resetting read-only flag of JDBC Connection [HikariProxyConnection@51988113 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST]
2023-08-03 20:21:22,966 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-5] Response 200 OK
2023-08-03 20:21:22,966 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-5] Reading to [java.lang.Object]
2023-08-03 20:21:22,991 INFO ru.practicum.shareit.item.ItemController [http-nio-8080-exec-6] Request on search text: аккУМУляторная
2023-08-03 20:21:22,992 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-6] HTTP GET http://localhost:9090/items/search?text=%D0%B0%D0%BA%D0%BA%D1%83%D0%BC%D1%83%D0%BB%D1%8F%D1%82%D0%BE%D1%80%D0%BD%D0%B0%D1%8F&from=0&size=20
2023-08-03 20:21:22,993 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-6] Accept=[application/json, application/*+json]
2023-08-03 20:21:22,999 INFO ru.practicum.item.ItemController [http-nio-9090-exec-9] Запрос по поисковому тексту: аккумуляторная
2023-08-03 20:21:23,005 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-6] Response 200 OK
2023-08-03 20:21:23,006 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-6] Reading to [java.lang.Object]
2023-08-03 20:21:23,031 INFO ru.practicum.shareit.item.ItemController [http-nio-8080-exec-7] Request on edit item id: 2, ItemDto(id=0, name=null, description=null, available=false, requestId=null), user id: 4
2023-08-03 20:21:23,032 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-7] HTTP PATCH http://localhost:9090/items/2
2023-08-03 20:21:23,032 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-7] Accept=[application/json, application/*+json]
2023-08-03 20:21:23,032 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-7] Writing [ItemDto(id=0, name=null, description=null, available=false, requestId=null)] as "application/json"
2023-08-03 20:21:23,035 INFO ru.practicum.item.ItemController [http-nio-9090-exec-10] Запрос на редактирование идентификатора элемента: 2, ItemDto(id=0, name=null, description=null, available=false, requestId=null), идентификатор пользователя: 4
2023-08-03 20:21:23,037 INFO ru.practicum.item.ItemServiceImpl [http-nio-9090-exec-10] Обновление: ru.practicum.item.model.Item@1934ba55
2023-08-03 20:21:23,037 INFO ru.practicum.item.ItemServiceImpl [http-nio-9090-exec-10] Доступность обновлена
2023-08-03 20:21:23,041 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-7] Response 200 OK
2023-08-03 20:21:23,041 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-7] Reading to [java.lang.Object]
2023-08-03 20:21:23,060 INFO ru.practicum.shareit.item.ItemController [http-nio-8080-exec-8] Request on search text: дРелЬ
2023-08-03 20:21:23,061 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-8] HTTP GET http://localhost:9090/items/search?text=%D0%B4%D1%80%D0%B5%D0%BB%D1%8C&from=0&size=20
2023-08-03 20:21:23,061 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-8] Accept=[application/json, application/*+json]
2023-08-03 20:21:23,063 INFO ru.practicum.item.ItemController [http-nio-9090-exec-1] Запрос по поисковому тексту: дрель
2023-08-03 20:21:23,067 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-8] Response 200 OK
2023-08-03 20:21:23,067 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-8] Reading to [java.lang.Object]
2023-08-03 20:21:23,093 INFO ru.practicum.shareit.item.ItemController [http-nio-8080-exec-9] Request on search text: аккУМУляторная
2023-08-03 20:21:23,094 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-9] HTTP GET http://localhost:9090/items/search?text=%D0%B0%D0%BA%D0%BA%D1%83%D0%BC%D1%83%D0%BB%D1%8F%D1%82%D0%BE%D1%80%D0%BD%D0%B0%D1%8F&from=0&size=20
2023-08-03 20:21:23,094 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-9] Accept=[application/json, application/*+json]
2023-08-03 20:21:23,097 INFO ru.practicum.item.ItemController [http-nio-9090-exec-2] Запрос по поисковому тексту: аккумуляторная
2023-08-03 20:21:23,099 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-9] Response 200 OK
2023-08-03 20:21:23,100 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-9] Reading to [java.lang.Object]
2023-08-03 20:21:23,121 INFO ru.practicum.shareit.item.ItemController [http-nio-8080-exec-10] Request on edit item id: 2, ItemDto(id=0, name=null, description=null, available=true, requestId=null), user id: 4
2023-08-03 20:21:23,122 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-10] HTTP PATCH http://localhost:9090/items/2
2023-08-03 20:21:23,122 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-10] Accept=[application/json, application/*+json]
2023-08-03 20:21:23,122 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-10] Writing [ItemDto(id=0, name=null, description=null, available=true, requestId=null)] as "application/json"
2023-08-03 20:21:23,124 INFO ru.practicum.item.ItemController [http-nio-9090-exec-3] Запрос на редактирование идентификатора элемента: 2, ItemDto(id=0, name=null, description=null, available=true, requestId=null), идентификатор пользователя: 4
2023-08-03 20:21:23,125 INFO ru.practicum.item.ItemServiceImpl [http-nio-9090-exec-3] Обновление: ru.practicum.item.model.Item@227a1233
2023-08-03 20:21:23,125 INFO ru.practicum.item.ItemServiceImpl [http-nio-9090-exec-3] Доступность обновлена
2023-08-03 20:21:23,127 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-10] Response 200 OK
2023-08-03 20:21:23,127 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-10] Reading to [java.lang.Object]
2023-08-03 20:21:23,148 INFO ru.practicum.shareit.item.ItemController [http-nio-8080-exec-1] Request on search text: оТверТ
2023-08-03 20:21:23,148 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-1] HTTP GET http://localhost:9090/items/search?text=%D0%BE%D1%82%D0%B2%D0%B5%D1%80%D1%82&from=0&size=20
2023-08-03 20:21:23,149 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-1] Accept=[application/json, application/*+json]
2023-08-03 20:21:23,150 INFO ru.practicum.item.ItemController [http-nio-9090-exec-4] Запрос по поисковому тексту: отверт
2023-08-03 20:21:23,153 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-1] Response 200 OK
2023-08-03 20:21:23,154 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-1] Reading to [java.lang.Object]
2023-08-03 20:21:23,174 INFO ru.practicum.shareit.item.ItemController [http-nio-8080-exec-2] Request on search text: 
2023-08-03 20:21:23,194 INFO ru.practicum.shareit.item.ItemController [http-nio-8080-exec-3] Request on edit item id: 2, ItemDto(id=0, name=null, description=null, available=false, requestId=null), user id: 4
2023-08-03 20:21:23,195 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-3] HTTP PATCH http://localhost:9090/items/2
2023-08-03 20:21:23,195 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-3] Accept=[application/json, application/*+json]
2023-08-03 20:21:23,195 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-3] Writing [ItemDto(id=0, name=null, description=null, available=false, requestId=null)] as "application/json"
2023-08-03 20:21:23,197 INFO ru.practicum.item.ItemController [http-nio-9090-exec-5] Запрос на редактирование идентификатора элемента: 2, ItemDto(id=0, name=null, description=null, available=false, requestId=null), идентификатор пользователя: 4
2023-08-03 20:21:23,198 INFO ru.practicum.item.ItemServiceImpl [http-nio-9090-exec-5] Обновление: ru.practicum.item.model.Item@472a99b3
2023-08-03 20:21:23,199 INFO ru.practicum.item.ItemServiceImpl [http-nio-9090-exec-5] Доступность обновлена
2023-08-03 20:21:23,201 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-3] Response 200 OK
2023-08-03 20:21:23,201 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-3] Reading to [java.lang.Object]
2023-08-03 20:21:23,256 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-4] HTTP POST http://localhost:9090/bookings
2023-08-03 20:21:23,256 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-4] Accept=[application/json, application/*+json]
2023-08-03 20:21:23,260 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-4] Writing [BookingDto(id=0, itemId=2, start=2023-08-04T20:21:23, end=2023-08-05T20:21:23, status=null, booker=null)] as "application/json"
2023-08-03 20:21:23,277 INFO ru.practicum.ErrorHandler [http-nio-9090-exec-6] Not available: Элемент с идентификатором: 2 недоступен
2023-08-03 20:21:23,278 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-4] Response 400 BAD_REQUEST
2023-08-03 20:21:23,302 INFO ru.practicum.shareit.item.ItemController [http-nio-8080-exec-6] Request on edit item id: 2, ItemDto(id=0, name=null, description=null, available=true, requestId=null), user id: 4
2023-08-03 20:21:23,302 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-6] HTTP PATCH http://localhost:9090/items/2
2023-08-03 20:21:23,303 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-6] Accept=[application/json, application/*+json]
2023-08-03 20:21:23,303 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-6] Writing [ItemDto(id=0, name=null, description=null, available=true, requestId=null)] as "application/json"
2023-08-03 20:21:23,305 INFO ru.practicum.item.ItemController [http-nio-9090-exec-7] Запрос на редактирование идентификатора элемента: 2, ItemDto(id=0, name=null, description=null, available=true, requestId=null), идентификатор пользователя: 4
2023-08-03 20:21:23,306 INFO ru.practicum.item.ItemServiceImpl [http-nio-9090-exec-7] Обновление: ru.practicum.item.model.Item@4a1c5f0
2023-08-03 20:21:23,306 INFO ru.practicum.item.ItemServiceImpl [http-nio-9090-exec-7] Доступность обновлена
2023-08-03 20:21:23,308 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-6] Response 200 OK
2023-08-03 20:21:23,309 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-6] Reading to [java.lang.Object]
2023-08-03 20:21:23,334 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-7] HTTP POST http://localhost:9090/bookings
2023-08-03 20:21:23,334 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-7] Accept=[application/json, application/*+json]
2023-08-03 20:21:23,334 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-7] Writing [BookingDto(id=0, itemId=2, start=2023-08-04T20:21:23, end=2023-08-05T20:21:23, status=null, booker=null)] as "application/json"
2023-08-03 20:21:23,339 INFO ru.practicum.ErrorHandler [http-nio-9090-exec-8] Not found: User with ID: 100 not found
2023-08-03 20:21:23,341 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-7] Response 404 NOT_FOUND
2023-08-03 20:21:23,360 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-8] HTTP POST http://localhost:9090/bookings
2023-08-03 20:21:23,361 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-8] Accept=[application/json, application/*+json]
2023-08-03 20:21:23,361 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-8] Writing [BookingDto(id=0, itemId=200, start=2023-08-04T20:21:23, end=2023-08-05T20:21:23, status=null, booker=null)] as "application/json"
2023-08-03 20:21:23,364 INFO ru.practicum.ErrorHandler [http-nio-9090-exec-9] Not found: Элемент с идентификатором:200 не найден
2023-08-03 20:21:23,365 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-8] Response 404 NOT_FOUND
2023-08-03 20:21:23,399 INFO ru.practicum.shareit.ErrorHandler [http-nio-8080-exec-9] Validation failed for field: end. Error message: должно содержать дату, которая еще не наступила
2023-08-03 20:21:23,399 INFO ru.practicum.shareit.ErrorHandler [http-nio-8080-exec-9] Validation failed for field: validDateOrder. Error message: End date must be after start date and dates cannot be equal
2023-08-03 20:21:23,418 INFO ru.practicum.shareit.ErrorHandler [http-nio-8080-exec-1] Validation failed for field: validDateOrder. Error message: End date must be after start date and dates cannot be equal
2023-08-03 20:21:23,440 INFO ru.practicum.shareit.ErrorHandler [http-nio-8080-exec-3] Validation failed for field: validDateOrder. Error message: End date must be after start date and dates cannot be equal
2023-08-03 20:21:23,463 INFO ru.practicum.shareit.ErrorHandler [http-nio-8080-exec-5] Validation failed for field: validDateOrder. Error message: End date must be after start date and dates cannot be equal
2023-08-03 20:21:23,463 INFO ru.practicum.shareit.ErrorHandler [http-nio-8080-exec-5] Validation failed for field: start. Error message: не должно равняться null
2023-08-03 20:21:23,488 INFO ru.practicum.shareit.ErrorHandler [http-nio-8080-exec-7] Validation failed for field: validDateOrder. Error message: End date must be after start date and dates cannot be equal
2023-08-03 20:21:23,489 INFO ru.practicum.shareit.ErrorHandler [http-nio-8080-exec-7] Validation failed for field: end. Error message: не должно равняться null
2023-08-03 20:21:23,511 INFO ru.practicum.shareit.ErrorHandler [http-nio-8080-exec-9] Validation failed for field: start. Error message: должно содержать сегодняшнее число или дату, которая еще не наступила
2023-08-03 20:21:23,534 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-1] HTTP POST http://localhost:9090/bookings
2023-08-03 20:21:23,534 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-1] Accept=[application/json, application/*+json]
2023-08-03 20:21:23,534 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-1] Writing [BookingDto(id=0, itemId=2, start=2023-08-03T20:21:26, end=2023-08-03T20:21:27, status=null, booker=null)] as "application/json"
2023-08-03 20:21:23,549 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-1] Response 200 OK
2023-08-03 20:21:23,550 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-1] Reading to [java.lang.Object]
2023-08-03 20:21:23,575 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-2] HTTP PATCH http://localhost:9090/bookings/1?approved=true
2023-08-03 20:21:23,575 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-2] Accept=[application/json, application/*+json]
2023-08-03 20:21:23,583 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-2] Response 200 OK
2023-08-03 20:21:23,583 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-2] Reading to [java.lang.Object]
2023-08-03 20:21:23,605 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-3] HTTP POST http://localhost:9090/bookings
2023-08-03 20:21:23,606 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-3] Accept=[application/json, application/*+json]
2023-08-03 20:21:23,606 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-3] Writing [BookingDto(id=0, itemId=2, start=2023-08-04T20:21:23, end=2023-08-05T20:21:23, status=null, booker=null)] as "application/json"
2023-08-03 20:21:23,613 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-3] Response 200 OK
2023-08-03 20:21:23,613 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-3] Reading to [java.lang.Object]
2023-08-03 20:21:23,636 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-4] HTTP GET http://localhost:9090/bookings/2
2023-08-03 20:21:23,637 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-4] Accept=[application/json, application/*+json]
2023-08-03 20:21:23,639 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-3] Setting JDBC Connection [HikariProxyConnection@649296271 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST] read-only
2023-08-03 20:21:23,641 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-3] Resetting read-only flag of JDBC Connection [HikariProxyConnection@649296271 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST]
2023-08-03 20:21:23,641 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-3] Setting JDBC Connection [HikariProxyConnection@649296271 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST] read-only
2023-08-03 20:21:23,642 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-3] Resetting read-only flag of JDBC Connection [HikariProxyConnection@649296271 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST]
2023-08-03 20:21:23,644 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-4] Response 200 OK
2023-08-03 20:21:23,644 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-4] Reading to [java.lang.Object]
2023-08-03 20:21:23,663 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-5] HTTP GET http://localhost:9090/bookings/2
2023-08-03 20:21:23,663 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-5] Accept=[application/json, application/*+json]
2023-08-03 20:21:23,665 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-4] Setting JDBC Connection [HikariProxyConnection@1948423844 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST] read-only
2023-08-03 20:21:23,666 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-4] Resetting read-only flag of JDBC Connection [HikariProxyConnection@1948423844 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST]
2023-08-03 20:21:23,667 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-4] Setting JDBC Connection [HikariProxyConnection@1948423844 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST] read-only
2023-08-03 20:21:23,667 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-4] Resetting read-only flag of JDBC Connection [HikariProxyConnection@1948423844 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST]
2023-08-03 20:21:23,670 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-5] Response 200 OK
2023-08-03 20:21:23,670 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-5] Reading to [java.lang.Object]
2023-08-03 20:21:23,695 INFO ru.practicum.shareit.booking.BookingController [http-nio-8080-exec-6] Get booking with state ALL, userId=100, from=0, size=20
2023-08-03 20:21:23,695 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-6] HTTP GET http://localhost:9090/bookings?state=ALL&from=0&size=20
2023-08-03 20:21:23,695 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-6] Accept=[application/json, application/*+json]
2023-08-03 20:21:23,699 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-5] Setting JDBC Connection [HikariProxyConnection@1152848730 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST] read-only
2023-08-03 20:21:23,700 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-5] Resetting read-only flag of JDBC Connection [HikariProxyConnection@1152848730 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST]
2023-08-03 20:21:23,700 INFO ru.practicum.ErrorHandler [http-nio-9090-exec-5] Not found: User with ID: 100 not found
2023-08-03 20:21:23,701 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-6] Response 404 NOT_FOUND
2023-08-03 20:21:23,718 INFO ru.practicum.shareit.booking.BookingController [http-nio-8080-exec-7] Get booking with state ALL, userId=100, from=0, size=20
2023-08-03 20:21:23,719 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-7] HTTP GET http://localhost:9090/bookings/owner?state=ALL&from=0&size=20
2023-08-03 20:21:23,719 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-7] Accept=[application/json, application/*+json]
2023-08-03 20:21:23,721 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-6] Setting JDBC Connection [HikariProxyConnection@1322076015 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST] read-only
2023-08-03 20:21:23,722 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-6] Resetting read-only flag of JDBC Connection [HikariProxyConnection@1322076015 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST]
2023-08-03 20:21:23,723 INFO ru.practicum.ErrorHandler [http-nio-9090-exec-6] Not found: User with ID: 100 not found
2023-08-03 20:21:23,724 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-7] Response 404 NOT_FOUND
2023-08-03 20:21:23,744 INFO ru.practicum.shareit.booking.BookingController [http-nio-8080-exec-8] Get booking with state ALL, userId=1, from=0, size=20
2023-08-03 20:21:23,745 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-8] HTTP GET http://localhost:9090/bookings?state=ALL&from=0&size=20
2023-08-03 20:21:23,745 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-8] Accept=[application/json, application/*+json]
2023-08-03 20:21:23,747 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-7] Setting JDBC Connection [HikariProxyConnection@954525931 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST] read-only
2023-08-03 20:21:23,748 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-7] Resetting read-only flag of JDBC Connection [HikariProxyConnection@954525931 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST]
2023-08-03 20:21:23,752 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-8] Response 200 OK
2023-08-03 20:21:23,752 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-8] Reading to [java.lang.Object]
2023-08-03 20:21:23,773 INFO ru.practicum.shareit.booking.BookingController [http-nio-8080-exec-9] Get booking with state ALL, userId=1, from=0, size=20
2023-08-03 20:21:23,773 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-9] HTTP GET http://localhost:9090/bookings?state=ALL&from=0&size=20
2023-08-03 20:21:23,773 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-9] Accept=[application/json, application/*+json]
2023-08-03 20:21:23,775 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-8] Setting JDBC Connection [HikariProxyConnection@450821387 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST] read-only
2023-08-03 20:21:23,776 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-8] Resetting read-only flag of JDBC Connection [HikariProxyConnection@450821387 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST]
2023-08-03 20:21:23,778 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-9] Response 200 OK
2023-08-03 20:21:23,779 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-9] Reading to [java.lang.Object]
2023-08-03 20:21:23,805 INFO ru.practicum.shareit.booking.BookingController [http-nio-8080-exec-10] Get booking with state FUTURE, userId=1, from=0, size=20
2023-08-03 20:21:23,806 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-10] HTTP GET http://localhost:9090/bookings?state=FUTURE&from=0&size=20
2023-08-03 20:21:23,806 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-10] Accept=[application/json, application/*+json]
2023-08-03 20:21:23,809 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-9] Setting JDBC Connection [HikariProxyConnection@239730940 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST] read-only
2023-08-03 20:21:23,810 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-9] Resetting read-only flag of JDBC Connection [HikariProxyConnection@239730940 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST]
2023-08-03 20:21:23,814 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-10] Response 200 OK
2023-08-03 20:21:23,815 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-10] Reading to [java.lang.Object]
2023-08-03 20:21:23,840 INFO ru.practicum.shareit.ErrorHandler [http-nio-8080-exec-1] Bad booking state: Неизвестное состояние: UNSUPPORTED_STATUS
2023-08-03 20:21:23,863 INFO ru.practicum.shareit.booking.BookingController [http-nio-8080-exec-3] Get booking with state ALL, userId=4, from=0, size=20
2023-08-03 20:21:23,863 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-3] HTTP GET http://localhost:9090/bookings/owner?state=ALL&from=0&size=20
2023-08-03 20:21:23,864 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-3] Accept=[application/json, application/*+json]
2023-08-03 20:21:23,865 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-10] Setting JDBC Connection [HikariProxyConnection@471123833 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST] read-only
2023-08-03 20:21:23,866 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-10] Resetting read-only flag of JDBC Connection [HikariProxyConnection@471123833 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST]
2023-08-03 20:21:23,870 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-3] Response 200 OK
2023-08-03 20:21:23,870 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-3] Reading to [java.lang.Object]
2023-08-03 20:21:23,893 INFO ru.practicum.shareit.booking.BookingController [http-nio-8080-exec-4] Get booking with state ALL, userId=4, from=0, size=20
2023-08-03 20:21:23,893 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-4] HTTP GET http://localhost:9090/bookings/owner?state=ALL&from=0&size=20
2023-08-03 20:21:23,893 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-4] Accept=[application/json, application/*+json]
2023-08-03 20:21:23,895 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-1] Setting JDBC Connection [HikariProxyConnection@615743658 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST] read-only
2023-08-03 20:21:23,896 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-1] Resetting read-only flag of JDBC Connection [HikariProxyConnection@615743658 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST]
2023-08-03 20:21:23,898 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-4] Response 200 OK
2023-08-03 20:21:23,899 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-4] Reading to [java.lang.Object]
2023-08-03 20:21:23,922 INFO ru.practicum.shareit.booking.BookingController [http-nio-8080-exec-5] Get booking with state FUTURE, userId=4, from=0, size=20
2023-08-03 20:21:23,923 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-5] HTTP GET http://localhost:9090/bookings/owner?state=FUTURE&from=0&size=20
2023-08-03 20:21:23,923 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-5] Accept=[application/json, application/*+json]
2023-08-03 20:21:23,925 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-2] Setting JDBC Connection [HikariProxyConnection@511738314 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST] read-only
2023-08-03 20:21:23,927 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-2] Resetting read-only flag of JDBC Connection [HikariProxyConnection@511738314 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST]
2023-08-03 20:21:23,932 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-5] Response 200 OK
2023-08-03 20:21:23,932 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-5] Reading to [java.lang.Object]
2023-08-03 20:21:23,957 INFO ru.practicum.shareit.ErrorHandler [http-nio-8080-exec-6] Bad booking state: Неизвестное состояние: UNSUPPORTED_STATUS
2023-08-03 20:21:23,978 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-8] HTTP GET http://localhost:9090/bookings/1000
2023-08-03 20:21:23,978 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-8] Accept=[application/json, application/*+json]
2023-08-03 20:21:23,980 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-3] Setting JDBC Connection [HikariProxyConnection@1409150587 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST] read-only
2023-08-03 20:21:23,981 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-3] Resetting read-only flag of JDBC Connection [HikariProxyConnection@1409150587 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST]
2023-08-03 20:21:23,982 INFO ru.practicum.ErrorHandler [http-nio-9090-exec-3] Not found: Бронирование: 1 000 не найдено
2023-08-03 20:21:23,983 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-8] Response 404 NOT_FOUND
2023-08-03 20:21:24,001 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-9] HTTP POST http://localhost:9090/users
2023-08-03 20:21:24,001 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-9] Accept=[application/json, application/*+json]
2023-08-03 20:21:24,002 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-9] Writing [UserDto(id=0, email=other@other.com, name=other)] as "application/json"
2023-08-03 20:21:24,005 INFO ru.practicum.user.UserController [http-nio-9090-exec-4] Было создано: ru.practicum.user.model.User@186d0767
2023-08-03 20:21:24,006 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-9] Response 201 CREATED
2023-08-03 20:21:24,006 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-9] Reading to [java.lang.Object]
2023-08-03 20:21:24,025 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-10] HTTP GET http://localhost:9090/bookings/1
2023-08-03 20:21:24,025 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-10] Accept=[application/json, application/*+json]
2023-08-03 20:21:24,026 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-5] Setting JDBC Connection [HikariProxyConnection@1645305560 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST] read-only
2023-08-03 20:21:24,028 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-5] Resetting read-only flag of JDBC Connection [HikariProxyConnection@1645305560 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST]
2023-08-03 20:21:24,028 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-5] Setting JDBC Connection [HikariProxyConnection@1645305560 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST] read-only
2023-08-03 20:21:24,029 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-5] Resetting read-only flag of JDBC Connection [HikariProxyConnection@1645305560 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST]
2023-08-03 20:21:24,030 INFO ru.practicum.ErrorHandler [http-nio-9090-exec-5] Not found: User with id: 5 do not have available
2023-08-03 20:21:24,031 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-10] Response 404 NOT_FOUND
2023-08-03 20:21:24,048 INFO ru.practicum.shareit.ErrorHandler [http-nio-8080-exec-1] Server error Required request parameter 'approved' for method parameter type Boolean is not present
2023-08-03 20:21:24,065 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-3] HTTP PATCH http://localhost:9090/bookings/2?approved=true
2023-08-03 20:21:24,065 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-3] Accept=[application/json, application/*+json]
2023-08-03 20:21:24,070 INFO ru.practicum.ErrorHandler [http-nio-9090-exec-6] Not found: User with id: 1 do not have available
2023-08-03 20:21:24,070 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-3] Response 404 NOT_FOUND
2023-08-03 20:21:24,087 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-4] HTTP PATCH http://localhost:9090/bookings/2?approved=true
2023-08-03 20:21:24,087 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-4] Accept=[application/json, application/*+json]
2023-08-03 20:21:24,092 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-4] Response 200 OK
2023-08-03 20:21:24,093 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-4] Reading to [java.lang.Object]
2023-08-03 20:21:24,115 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-5] HTTP PATCH http://localhost:9090/bookings/2?approved=true
2023-08-03 20:21:24,115 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-5] Accept=[application/json, application/*+json]
2023-08-03 20:21:24,119 INFO ru.practicum.ErrorHandler [http-nio-9090-exec-8] Not available: Рассмотрение
2023-08-03 20:21:24,120 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-5] Response 400 BAD_REQUEST
2023-08-03 20:21:24,141 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-7] HTTP POST http://localhost:9090/users
2023-08-03 20:21:24,142 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-7] Accept=[application/json, application/*+json]
2023-08-03 20:21:24,142 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-7] Writing [UserDto(id=0, email=practicum@yandex.ru, name=practicum)] as "application/json"
2023-08-03 20:21:24,145 INFO ru.practicum.user.UserController [http-nio-9090-exec-9] Было создано: ru.practicum.user.model.User@161fb37c
2023-08-03 20:21:24,146 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-7] Response 201 CREATED
2023-08-03 20:21:24,146 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-7] Reading to [java.lang.Object]
2023-08-03 20:21:24,170 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-8] HTTP POST http://localhost:9090/bookings
2023-08-03 20:21:24,171 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-8] Accept=[application/json, application/*+json]
2023-08-03 20:21:24,171 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-8] Writing [BookingDto(id=0, itemId=1, start=2023-08-05T20:21:24, end=2023-08-06T20:21:24, status=null, booker=null)] as "application/json"
2023-08-03 20:21:24,175 INFO ru.practicum.ErrorHandler [http-nio-9090-exec-10] Not found: Ты владелец
2023-08-03 20:21:24,176 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-8] Response 404 NOT_FOUND
2023-08-03 20:21:24,197 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-9] HTTP POST http://localhost:9090/bookings
2023-08-03 20:21:24,197 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-9] Accept=[application/json, application/*+json]
2023-08-03 20:21:24,198 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-9] Writing [BookingDto(id=0, itemId=1, start=2023-08-04T20:21:24, end=2023-08-04T21:21:24, status=null, booker=null)] as "application/json"
2023-08-03 20:21:24,204 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-9] Response 200 OK
2023-08-03 20:21:24,204 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-9] Reading to [java.lang.Object]
2023-08-03 20:21:24,227 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-10] HTTP PATCH http://localhost:9090/bookings/3?approved=false
2023-08-03 20:21:24,228 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-10] Accept=[application/json, application/*+json]
2023-08-03 20:21:24,234 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-10] Response 200 OK
2023-08-03 20:21:24,234 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-10] Reading to [java.lang.Object]
2023-08-03 20:21:24,257 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-1] HTTP POST http://localhost:9090/bookings
2023-08-03 20:21:24,257 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-1] Accept=[application/json, application/*+json]
2023-08-03 20:21:24,258 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-1] Writing [BookingDto(id=0, itemId=2, start=2023-08-03T21:21:24, end=2023-08-03T22:21:24, status=null, booker=null)] as "application/json"
2023-08-03 20:21:24,263 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-1] Response 200 OK
2023-08-03 20:21:24,263 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-1] Reading to [java.lang.Object]
2023-08-03 20:21:24,289 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-2] HTTP PATCH http://localhost:9090/bookings/4?approved=true
2023-08-03 20:21:24,290 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-2] Accept=[application/json, application/*+json]
2023-08-03 20:21:24,296 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-2] Response 200 OK
2023-08-03 20:21:24,296 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-2] Reading to [java.lang.Object]
2023-08-03 20:21:27,191 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-08-03 20:21:27,191 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-08-03 20:21:28,332 INFO ru.practicum.shareit.item.ItemController [http-nio-8080-exec-3] Request from user ID: 4 on get item. ID: 2
2023-08-03 20:21:28,333 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-3] HTTP GET http://localhost:9090/items/2
2023-08-03 20:21:28,333 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-3] Accept=[application/json, application/*+json]
2023-08-03 20:21:28,338 INFO ru.practicum.item.ItemController [http-nio-9090-exec-5] Запрос от идентификатора пользователя: 4 при получении элемента. Идентификатор: 2
2023-08-03 20:21:28,339 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-5] Setting JDBC Connection [HikariProxyConnection@1136540905 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST] read-only
2023-08-03 20:21:28,341 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-5] Resetting read-only flag of JDBC Connection [HikariProxyConnection@1136540905 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST]
2023-08-03 20:21:28,351 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-3] Response 200 OK
2023-08-03 20:21:28,351 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-3] Reading to [java.lang.Object]
2023-08-03 20:21:28,374 INFO ru.practicum.shareit.item.ItemController [http-nio-8080-exec-4] Request from user ID: 1 on get item. ID: 2
2023-08-03 20:21:28,374 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-4] HTTP GET http://localhost:9090/items/2
2023-08-03 20:21:28,375 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-4] Accept=[application/json, application/*+json]
2023-08-03 20:21:28,376 INFO ru.practicum.item.ItemController [http-nio-9090-exec-6] Запрос от идентификатора пользователя: 1 при получении элемента. Идентификатор: 2
2023-08-03 20:21:28,377 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-6] Setting JDBC Connection [HikariProxyConnection@1806615523 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST] read-only
2023-08-03 20:21:28,378 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-6] Resetting read-only flag of JDBC Connection [HikariProxyConnection@1806615523 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST]
2023-08-03 20:21:28,380 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-4] Response 200 OK
2023-08-03 20:21:28,380 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-4] Reading to [java.lang.Object]
2023-08-03 20:21:28,400 INFO ru.practicum.shareit.item.ItemController [http-nio-8080-exec-5] Request from user ID: 5 on get item. ID: 2
2023-08-03 20:21:28,400 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-5] HTTP GET http://localhost:9090/items/2
2023-08-03 20:21:28,400 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-5] Accept=[application/json, application/*+json]
2023-08-03 20:21:28,402 INFO ru.practicum.item.ItemController [http-nio-9090-exec-7] Запрос от идентификатора пользователя: 5 при получении элемента. Идентификатор: 2
2023-08-03 20:21:28,402 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-7] Setting JDBC Connection [HikariProxyConnection@1326204313 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST] read-only
2023-08-03 20:21:28,405 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-7] Resetting read-only flag of JDBC Connection [HikariProxyConnection@1326204313 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST]
2023-08-03 20:21:28,406 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-5] Response 200 OK
2023-08-03 20:21:28,406 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-5] Reading to [java.lang.Object]
2023-08-03 20:21:28,427 INFO ru.practicum.shareit.item.ItemController [http-nio-8080-exec-6] Request on get all for user id: 4
2023-08-03 20:21:28,427 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-6] HTTP GET http://localhost:9090/items?from=0&size=20
2023-08-03 20:21:28,428 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-6] Accept=[application/json, application/*+json]
2023-08-03 20:21:28,429 INFO ru.practicum.item.ItemController [http-nio-9090-exec-8] Запрос на получение всего для идентификатора пользователя: 4
2023-08-03 20:21:28,430 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-8] Setting JDBC Connection [HikariProxyConnection@624443735 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST] read-only
2023-08-03 20:21:28,430 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-8] Resetting read-only flag of JDBC Connection [HikariProxyConnection@624443735 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST]
2023-08-03 20:21:28,435 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-6] Response 200 OK
2023-08-03 20:21:28,436 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-6] Reading to [java.lang.Object]
2023-08-03 20:21:28,467 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-7] HTTP POST http://localhost:9090/bookings
2023-08-03 20:21:28,467 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-7] Accept=[application/json, application/*+json]
2023-08-03 20:21:28,468 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-7] Writing [BookingDto(id=0, itemId=3, start=2023-08-03T20:21:31, end=2023-08-04T20:21:28, status=null, booker=null)] as "application/json"
2023-08-03 20:21:28,474 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-7] Response 200 OK
2023-08-03 20:21:28,474 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-7] Reading to [java.lang.Object]
2023-08-03 20:21:28,498 INFO ru.practicum.shareit.booking.BookingController [http-nio-8080-exec-8] Get booking with state WAITING, userId=1, from=0, size=20
2023-08-03 20:21:28,499 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-8] HTTP GET http://localhost:9090/bookings?state=WAITING&from=0&size=20
2023-08-03 20:21:28,499 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-8] Accept=[application/json, application/*+json]
2023-08-03 20:21:28,501 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-10] Setting JDBC Connection [HikariProxyConnection@786128636 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST] read-only
2023-08-03 20:21:28,502 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-10] Resetting read-only flag of JDBC Connection [HikariProxyConnection@786128636 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST]
2023-08-03 20:21:28,505 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-8] Response 200 OK
2023-08-03 20:21:28,505 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-8] Reading to [java.lang.Object]
2023-08-03 20:21:28,530 INFO ru.practicum.shareit.booking.BookingController [http-nio-8080-exec-9] Get booking with state WAITING, userId=4, from=0, size=20
2023-08-03 20:21:28,530 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-9] HTTP GET http://localhost:9090/bookings/owner?state=WAITING&from=0&size=20
2023-08-03 20:21:28,531 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-9] Accept=[application/json, application/*+json]
2023-08-03 20:21:28,532 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-1] Setting JDBC Connection [HikariProxyConnection@389253287 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST] read-only
2023-08-03 20:21:28,533 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-1] Resetting read-only flag of JDBC Connection [HikariProxyConnection@389253287 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST]
2023-08-03 20:21:28,537 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-9] Response 200 OK
2023-08-03 20:21:28,537 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-9] Reading to [java.lang.Object]
2023-08-03 20:21:28,563 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-10] HTTP POST http://localhost:9090/bookings
2023-08-03 20:21:28,563 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-10] Accept=[application/json, application/*+json]
2023-08-03 20:21:28,564 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-10] Writing [BookingDto(id=0, itemId=2, start=2023-08-03T20:21:31, end=2023-08-03T20:21:32, status=null, booker=null)] as "application/json"
2023-08-03 20:21:28,569 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-10] Response 200 OK
2023-08-03 20:21:28,570 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-10] Reading to [java.lang.Object]
2023-08-03 20:21:28,594 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-1] HTTP PATCH http://localhost:9090/bookings/5?approved=false
2023-08-03 20:21:28,594 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-1] Accept=[application/json, application/*+json]
2023-08-03 20:21:28,599 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-1] Response 200 OK
2023-08-03 20:21:28,600 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-1] Reading to [java.lang.Object]
2023-08-03 20:21:28,624 INFO ru.practicum.shareit.booking.BookingController [http-nio-8080-exec-2] Get booking with state REJECTED, userId=1, from=0, size=20
2023-08-03 20:21:28,624 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-2] HTTP GET http://localhost:9090/bookings?state=REJECTED&from=0&size=20
2023-08-03 20:21:28,624 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-2] Accept=[application/json, application/*+json]
2023-08-03 20:21:28,627 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-4] Setting JDBC Connection [HikariProxyConnection@266406352 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST] read-only
2023-08-03 20:21:28,628 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-4] Resetting read-only flag of JDBC Connection [HikariProxyConnection@266406352 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST]
2023-08-03 20:21:28,631 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-2] Response 200 OK
2023-08-03 20:21:28,631 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-2] Reading to [java.lang.Object]
2023-08-03 20:21:28,660 INFO ru.practicum.shareit.booking.BookingController [http-nio-8080-exec-3] Get booking with state REJECTED, userId=4, from=0, size=20
2023-08-03 20:21:28,661 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-3] HTTP GET http://localhost:9090/bookings/owner?state=REJECTED&from=0&size=20
2023-08-03 20:21:28,661 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-3] Accept=[application/json, application/*+json]
2023-08-03 20:21:28,663 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-5] Setting JDBC Connection [HikariProxyConnection@949059066 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST] read-only
2023-08-03 20:21:28,664 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-5] Resetting read-only flag of JDBC Connection [HikariProxyConnection@949059066 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST]
2023-08-03 20:21:28,667 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-3] Response 200 OK
2023-08-03 20:21:28,667 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-3] Reading to [java.lang.Object]
2023-08-03 20:21:28,691 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-4] HTTP PATCH http://localhost:9090/bookings/6?approved=true
2023-08-03 20:21:28,691 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-4] Accept=[application/json, application/*+json]
2023-08-03 20:21:28,696 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-4] Response 200 OK
2023-08-03 20:21:28,697 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-4] Reading to [java.lang.Object]
2023-08-03 20:21:28,720 INFO ru.practicum.shareit.item.ItemController [http-nio-8080-exec-5] Request on add ItemDto(id=0, name=Кухонный стол, description=Стол для празднования, available=true, requestId=null), user id: 6
2023-08-03 20:21:28,721 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-5] HTTP POST http://localhost:9090/items
2023-08-03 20:21:28,721 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-5] Accept=[application/json, application/*+json]
2023-08-03 20:21:28,722 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-5] Writing [ItemDto(id=0, name=Кухонный стол, description=Стол для празднования, available=true, requestId=null)] as "application/json"
2023-08-03 20:21:28,724 INFO ru.practicum.item.ItemController [http-nio-9090-exec-7] Запрос на добавление ItemDto(id=0, name=Кухонный стол, description=Стол для празднования, available=true, requestId=null), идентификатор пользователя: 6
2023-08-03 20:21:28,726 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-5] Response 200 OK
2023-08-03 20:21:28,727 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-5] Reading to [java.lang.Object]
2023-08-03 20:21:28,750 INFO ru.practicum.shareit.item.ItemController [http-nio-8080-exec-6] Request from user ID: 1 on get item. ID: 1
2023-08-03 20:21:28,750 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-6] HTTP GET http://localhost:9090/items/1
2023-08-03 20:21:28,751 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-6] Accept=[application/json, application/*+json]
2023-08-03 20:21:28,752 INFO ru.practicum.item.ItemController [http-nio-9090-exec-8] Запрос от идентификатора пользователя: 1 при получении элемента. Идентификатор: 1
2023-08-03 20:21:28,753 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-8] Setting JDBC Connection [HikariProxyConnection@1825568091 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST] read-only
2023-08-03 20:21:28,761 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-8] Resetting read-only flag of JDBC Connection [HikariProxyConnection@1825568091 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST]
2023-08-03 20:21:28,765 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-6] Response 200 OK
2023-08-03 20:21:28,766 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-6] Reading to [java.lang.Object]
2023-08-03 20:21:28,792 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-7] HTTP POST http://localhost:9090/bookings
2023-08-03 20:21:28,792 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-7] Accept=[application/json, application/*+json]
2023-08-03 20:21:28,793 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-7] Writing [BookingDto(id=0, itemId=1, start=2023-08-13T20:21:28, end=2023-08-14T20:21:28, status=null, booker=null)] as "application/json"
2023-08-03 20:21:28,797 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-7] Response 200 OK
2023-08-03 20:21:28,797 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-7] Reading to [java.lang.Object]
2023-08-03 20:21:28,823 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-8] HTTP POST http://localhost:9090/bookings
2023-08-03 20:21:28,823 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-8] Accept=[application/json, application/*+json]
2023-08-03 20:21:28,824 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-8] Writing [BookingDto(id=0, itemId=4, start=2023-08-03T20:21:30, end=2023-08-03T21:21:28, status=null, booker=null)] as "application/json"
2023-08-03 20:21:28,828 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-8] Response 200 OK
2023-08-03 20:21:28,829 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-8] Reading to [java.lang.Object]
2023-08-03 20:21:28,849 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-9] HTTP PATCH http://localhost:9090/bookings/8?approved=true
2023-08-03 20:21:28,849 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-9] Accept=[application/json, application/*+json]
2023-08-03 20:21:28,856 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-9] Response 200 OK
2023-08-03 20:21:28,856 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-9] Reading to [java.lang.Object]
2023-08-03 20:21:31,881 INFO ru.practicum.shareit.item.ItemController [http-nio-8080-exec-10] Request from user ID: 1 on get item. ID: 2
2023-08-03 20:21:31,881 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-10] HTTP GET http://localhost:9090/items/2
2023-08-03 20:21:31,882 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-10] Accept=[application/json, application/*+json]
2023-08-03 20:21:31,884 INFO ru.practicum.item.ItemController [http-nio-9090-exec-2] Запрос от идентификатора пользователя: 1 при получении элемента. Идентификатор: 2
2023-08-03 20:21:31,885 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-2] Setting JDBC Connection [HikariProxyConnection@704245587 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST] read-only
2023-08-03 20:21:31,886 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-2] Resetting read-only flag of JDBC Connection [HikariProxyConnection@704245587 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST]
2023-08-03 20:21:31,887 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-10] Response 200 OK
2023-08-03 20:21:31,887 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-10] Reading to [java.lang.Object]
2023-08-03 20:21:34,916 INFO ru.practicum.shareit.item.ItemController [http-nio-8080-exec-1] Request from user ID: 4 on get item. ID: 2
2023-08-03 20:21:34,916 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-1] HTTP GET http://localhost:9090/items/2
2023-08-03 20:21:34,916 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-1] Accept=[application/json, application/*+json]
2023-08-03 20:21:34,919 INFO ru.practicum.item.ItemController [http-nio-9090-exec-3] Запрос от идентификатора пользователя: 4 при получении элемента. Идентификатор: 2
2023-08-03 20:21:34,919 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-3] Setting JDBC Connection [HikariProxyConnection@1083285515 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST] read-only
2023-08-03 20:21:34,920 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-3] Resetting read-only flag of JDBC Connection [HikariProxyConnection@1083285515 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST]
2023-08-03 20:21:34,923 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-1] Response 200 OK
2023-08-03 20:21:34,923 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-1] Reading to [java.lang.Object]
2023-08-03 20:21:34,951 INFO ru.practicum.shareit.item.ItemController [http-nio-8080-exec-2] Request on add comment Comment for item 1, item id: 1, user id: 4
2023-08-03 20:21:34,953 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-2] HTTP POST http://localhost:9090/items/1/comment
2023-08-03 20:21:34,953 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-2] Accept=[application/json, application/*+json]
2023-08-03 20:21:34,957 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-2] Writing [CommentDto(id=0, text=Comment for item 1, authorName=null, created=null)] as "application/json"
2023-08-03 20:21:34,962 INFO ru.practicum.item.ItemController [http-nio-9090-exec-4] Запрос на добавление комментария Comment for item 1, идентификатор элемента: 1, идентификатор пользователя: 4
2023-08-03 20:21:34,969 INFO ru.practicum.ErrorHandler [http-nio-9090-exec-4] Not available: Нет доступного бронирования для идентификатора пользователя: 4 и вещи: 1
2023-08-03 20:21:34,970 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-2] Response 400 BAD_REQUEST
2023-08-03 20:21:34,989 INFO ru.practicum.shareit.ErrorHandler [http-nio-8080-exec-4] Validation failed for field: text. Error message: не должно быть пустым
2023-08-03 20:21:35,011 INFO ru.practicum.shareit.item.ItemController [http-nio-8080-exec-6] Request on add comment Add comment from user1, item id: 2, user id: 1
2023-08-03 20:21:35,012 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-6] HTTP POST http://localhost:9090/items/2/comment
2023-08-03 20:21:35,013 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-6] Accept=[application/json, application/*+json]
2023-08-03 20:21:35,013 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-6] Writing [CommentDto(id=0, text=Add comment from user1, authorName=null, created=null)] as "application/json"
2023-08-03 20:21:35,019 INFO ru.practicum.item.ItemController [http-nio-9090-exec-5] Запрос на добавление комментария Add comment from user1, идентификатор элемента: 2, идентификатор пользователя: 1
2023-08-03 20:21:35,030 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-6] Response 200 OK
2023-08-03 20:21:35,030 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-6] Reading to [java.lang.Object]
2023-08-03 20:21:35,048 INFO ru.practicum.shareit.item.ItemController [http-nio-8080-exec-7] Request from user ID: 1 on get item. ID: 2
2023-08-03 20:21:35,048 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-7] HTTP GET http://localhost:9090/items/2
2023-08-03 20:21:35,048 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-7] Accept=[application/json, application/*+json]
2023-08-03 20:21:35,049 INFO ru.practicum.item.ItemController [http-nio-9090-exec-6] Запрос от идентификатора пользователя: 1 при получении элемента. Идентификатор: 2
2023-08-03 20:21:35,050 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-6] Setting JDBC Connection [HikariProxyConnection@1261885572 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST] read-only
2023-08-03 20:21:35,051 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-6] Resetting read-only flag of JDBC Connection [HikariProxyConnection@1261885572 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST]
2023-08-03 20:21:35,053 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-7] Response 200 OK
2023-08-03 20:21:35,053 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-7] Reading to [java.lang.Object]
2023-08-03 20:21:35,074 INFO ru.practicum.shareit.item.ItemController [http-nio-8080-exec-8] Request from user ID: 4 on get item. ID: 2
2023-08-03 20:21:35,074 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-8] HTTP GET http://localhost:9090/items/2
2023-08-03 20:21:35,074 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-8] Accept=[application/json, application/*+json]
2023-08-03 20:21:35,076 INFO ru.practicum.item.ItemController [http-nio-9090-exec-7] Запрос от идентификатора пользователя: 4 при получении элемента. Идентификатор: 2
2023-08-03 20:21:35,076 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-7] Setting JDBC Connection [HikariProxyConnection@740618493 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST] read-only
2023-08-03 20:21:35,077 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-7] Resetting read-only flag of JDBC Connection [HikariProxyConnection@740618493 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST]
2023-08-03 20:21:35,081 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-8] Response 200 OK
2023-08-03 20:21:35,081 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-8] Reading to [java.lang.Object]
2023-08-03 20:21:35,104 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-9] HTTP PATCH http://localhost:9090/bookings/7?approved=true
2023-08-03 20:21:35,105 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-9] Accept=[application/json, application/*+json]
2023-08-03 20:21:35,111 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-9] Response 200 OK
2023-08-03 20:21:35,111 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-9] Reading to [java.lang.Object]
2023-08-03 20:21:35,133 INFO ru.practicum.shareit.item.ItemController [http-nio-8080-exec-10] Request on add comment Add comment from user5, item id: 1, user id: 5
2023-08-03 20:21:35,133 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-10] HTTP POST http://localhost:9090/items/1/comment
2023-08-03 20:21:35,134 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-10] Accept=[application/json, application/*+json]
2023-08-03 20:21:35,134 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-10] Writing [CommentDto(id=0, text=Add comment from user5, authorName=null, created=null)] as "application/json"
2023-08-03 20:21:35,136 INFO ru.practicum.item.ItemController [http-nio-9090-exec-9] Запрос на добавление комментария Add comment from user5, идентификатор элемента: 1, идентификатор пользователя: 5
2023-08-03 20:21:35,139 INFO ru.practicum.ErrorHandler [http-nio-9090-exec-9] Not available: Нет доступного бронирования для идентификатора пользователя: 5 и вещи: 1
2023-08-03 20:21:35,140 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-10] Response 400 BAD_REQUEST
2023-08-03 20:21:35,162 INFO ru.practicum.shareit.booking.BookingController [http-nio-8080-exec-2] Get booking with state CURRENT, userId=1, from=0, size=20
2023-08-03 20:21:35,162 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-2] HTTP GET http://localhost:9090/bookings?state=CURRENT&from=0&size=20
2023-08-03 20:21:35,162 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-2] Accept=[application/json, application/*+json]
2023-08-03 20:21:35,164 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-10] Setting JDBC Connection [HikariProxyConnection@1132882925 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST] read-only
2023-08-03 20:21:35,166 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-10] Resetting read-only flag of JDBC Connection [HikariProxyConnection@1132882925 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST]
2023-08-03 20:21:35,169 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-2] Response 200 OK
2023-08-03 20:21:35,170 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-2] Reading to [java.lang.Object]
2023-08-03 20:21:35,198 INFO ru.practicum.shareit.booking.BookingController [http-nio-8080-exec-3] Get booking with state CURRENT, userId=4, from=0, size=20
2023-08-03 20:21:35,198 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-3] HTTP GET http://localhost:9090/bookings/owner?state=CURRENT&from=0&size=20
2023-08-03 20:21:35,198 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-3] Accept=[application/json, application/*+json]
2023-08-03 20:21:35,200 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-1] Setting JDBC Connection [HikariProxyConnection@1333024596 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST] read-only
2023-08-03 20:21:35,201 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-1] Resetting read-only flag of JDBC Connection [HikariProxyConnection@1333024596 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST]
2023-08-03 20:21:35,204 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-3] Response 200 OK
2023-08-03 20:21:35,205 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-3] Reading to [java.lang.Object]
2023-08-03 20:21:35,228 INFO ru.practicum.shareit.booking.BookingController [http-nio-8080-exec-4] Get booking with state PAST, userId=1, from=0, size=20
2023-08-03 20:21:35,229 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-4] HTTP GET http://localhost:9090/bookings?state=PAST&from=0&size=20
2023-08-03 20:21:35,229 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-4] Accept=[application/json, application/*+json]
2023-08-03 20:21:35,230 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-2] Setting JDBC Connection [HikariProxyConnection@1725401454 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST] read-only
2023-08-03 20:21:35,231 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-2] Resetting read-only flag of JDBC Connection [HikariProxyConnection@1725401454 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST]
2023-08-03 20:21:35,234 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-4] Response 200 OK
2023-08-03 20:21:35,234 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-4] Reading to [java.lang.Object]
2023-08-03 20:21:35,258 INFO ru.practicum.shareit.booking.BookingController [http-nio-8080-exec-5] Get booking with state PAST, userId=4, from=0, size=20
2023-08-03 20:21:35,259 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-5] HTTP GET http://localhost:9090/bookings/owner?state=PAST&from=0&size=20
2023-08-03 20:21:35,259 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-5] Accept=[application/json, application/*+json]
2023-08-03 20:21:35,260 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-3] Setting JDBC Connection [HikariProxyConnection@1463419920 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST] read-only
2023-08-03 20:21:35,261 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-3] Resetting read-only flag of JDBC Connection [HikariProxyConnection@1463419920 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST]
2023-08-03 20:21:35,264 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-5] Response 200 OK
2023-08-03 20:21:35,264 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-5] Reading to [java.lang.Object]
2023-08-03 20:21:35,288 INFO ru.practicum.shareit.item.ItemController [http-nio-8080-exec-6] Request from user ID: 6 on get item. ID: 4
2023-08-03 20:21:35,288 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-6] HTTP GET http://localhost:9090/items/4
2023-08-03 20:21:35,289 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-6] Accept=[application/json, application/*+json]
2023-08-03 20:21:35,291 INFO ru.practicum.item.ItemController [http-nio-9090-exec-4] Запрос от идентификатора пользователя: 6 при получении элемента. Идентификатор: 4
2023-08-03 20:21:35,292 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-4] Setting JDBC Connection [HikariProxyConnection@869744841 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST] read-only
2023-08-03 20:21:35,293 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-4] Resetting read-only flag of JDBC Connection [HikariProxyConnection@869744841 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST]
2023-08-03 20:21:35,297 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-6] Response 200 OK
2023-08-03 20:21:35,297 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-6] Reading to [java.lang.Object]
2023-08-03 20:21:35,340 INFO ru.practicum.shareit.request.RequestController [http-nio-8080-exec-7] Add request on item RequestDto(id=0, description=Хотел бы воспользоваться щёткой для обуви, created=null, items=null), user id: 99
2023-08-03 20:21:35,341 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-7] HTTP POST http://localhost:9090/requests
2023-08-03 20:21:35,342 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-7] Accept=[application/json, application/*+json]
2023-08-03 20:21:35,343 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-7] Writing [RequestDto(id=0, description=Хотел бы воспользоваться щёткой для обуви, created=null, items=null)] as "application/json"
2023-08-03 20:21:35,353 INFO ru.practicum.request.RequestController [http-nio-9090-exec-5] Добавить запрос на элемент RequestDto(id=0, description=Хотел бы воспользоваться щёткой для обуви, created=null, items=null), идентификатор пользователя: 99
2023-08-03 20:21:35,360 INFO ru.practicum.ErrorHandler [http-nio-9090-exec-5] Not found: User with ID: 99 not found
2023-08-03 20:21:35,361 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-7] Response 404 NOT_FOUND
2023-08-03 20:21:35,388 INFO ru.practicum.shareit.ErrorHandler [http-nio-8080-exec-8] Validation failed for field: description. Error message: Description can't blank
2023-08-03 20:21:35,410 INFO ru.practicum.shareit.request.RequestController [http-nio-8080-exec-10] Request on get all requests from user id: 99
2023-08-03 20:21:35,410 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-10] HTTP GET http://localhost:9090/requests?from=0&size=20
2023-08-03 20:21:35,410 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-10] Accept=[application/json, application/*+json]
2023-08-03 20:21:35,413 INFO ru.practicum.request.RequestController [http-nio-9090-exec-6] Запрос на получение всех запросов от идентификатора пользователя: 99
2023-08-03 20:21:35,413 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-6] Setting JDBC Connection [HikariProxyConnection@1982538780 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST] read-only
2023-08-03 20:21:35,414 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-6] Resetting read-only flag of JDBC Connection [HikariProxyConnection@1982538780 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST]
2023-08-03 20:21:35,415 INFO ru.practicum.ErrorHandler [http-nio-9090-exec-6] Not found: User with ID: 99 not found
2023-08-03 20:21:35,416 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-10] Response 404 NOT_FOUND
2023-08-03 20:21:35,435 INFO ru.practicum.shareit.request.RequestController [http-nio-8080-exec-1] Request on get all requests from user id: 1
2023-08-03 20:21:35,436 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-1] HTTP GET http://localhost:9090/requests?from=0&size=20
2023-08-03 20:21:35,436 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-1] Accept=[application/json, application/*+json]
2023-08-03 20:21:35,438 INFO ru.practicum.request.RequestController [http-nio-9090-exec-7] Запрос на получение всех запросов от идентификатора пользователя: 1
2023-08-03 20:21:35,438 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-7] Setting JDBC Connection [HikariProxyConnection@239499089 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST] read-only
2023-08-03 20:21:35,439 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-7] Resetting read-only flag of JDBC Connection [HikariProxyConnection@239499089 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST]
2023-08-03 20:21:35,445 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-1] Response 200 OK
2023-08-03 20:21:35,446 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-1] Reading to [java.lang.Object]
2023-08-03 20:21:35,465 INFO ru.practicum.shareit.request.RequestController [http-nio-8080-exec-2] Request on get all requests
2023-08-03 20:21:35,465 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-2] HTTP GET http://localhost:9090/requests/all?from=0&size=20
2023-08-03 20:21:35,466 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-2] Accept=[application/json, application/*+json]
2023-08-03 20:21:35,472 INFO ru.practicum.request.RequestController [http-nio-9090-exec-8] Запрос на получение всех запросов
2023-08-03 20:21:35,474 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-2] Response 200 OK
2023-08-03 20:21:35,474 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-2] Reading to [java.lang.Object]
2023-08-03 20:21:35,493 INFO ru.practicum.shareit.ErrorHandler [http-nio-8080-exec-3] Validation failed for field: size. Error message: должно быть больше 0
2023-08-03 20:21:35,516 INFO ru.practicum.shareit.ErrorHandler [http-nio-8080-exec-5] Validation failed for field: from. Error message: должно быть больше или равно 0
2023-08-03 20:21:35,539 INFO ru.practicum.shareit.ErrorHandler [http-nio-8080-exec-7] Validation failed for field: size. Error message: должно быть больше 0
2023-08-03 20:21:35,559 INFO ru.practicum.shareit.request.RequestController [http-nio-8080-exec-9] Request on get all requests
2023-08-03 20:21:35,560 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-9] HTTP GET http://localhost:9090/requests/all?from=0&size=20
2023-08-03 20:21:35,560 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-9] Accept=[application/json, application/*+json]
2023-08-03 20:21:35,562 INFO ru.practicum.request.RequestController [http-nio-9090-exec-9] Запрос на получение всех запросов
2023-08-03 20:21:35,563 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-9] Response 200 OK
2023-08-03 20:21:35,563 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-9] Reading to [java.lang.Object]
2023-08-03 20:21:35,586 INFO ru.practicum.shareit.request.RequestController [http-nio-8080-exec-10] Add request on item RequestDto(id=0, description=Хотел бы воспользоваться щёткой для обуви, created=null, items=null), user id: 1
2023-08-03 20:21:35,587 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-10] HTTP POST http://localhost:9090/requests
2023-08-03 20:21:35,587 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-10] Accept=[application/json, application/*+json]
2023-08-03 20:21:35,587 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-10] Writing [RequestDto(id=0, description=Хотел бы воспользоваться щёткой для обуви, created=null, items=null)] as "application/json"
2023-08-03 20:21:35,589 INFO ru.practicum.request.RequestController [http-nio-9090-exec-10] Добавить запрос на элемент RequestDto(id=0, description=Хотел бы воспользоваться щёткой для обуви, created=null, items=null), идентификатор пользователя: 1
2023-08-03 20:21:35,593 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-10] Response 200 OK
2023-08-03 20:21:35,594 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-10] Reading to [java.lang.Object]
2023-08-03 20:21:36,618 INFO ru.practicum.shareit.request.RequestController [http-nio-8080-exec-1] Request on get all requests from user id: 1
2023-08-03 20:21:36,619 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-1] HTTP GET http://localhost:9090/requests?from=0&size=20
2023-08-03 20:21:36,619 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-1] Accept=[application/json, application/*+json]
2023-08-03 20:21:36,620 INFO ru.practicum.request.RequestController [http-nio-9090-exec-1] Запрос на получение всех запросов от идентификатора пользователя: 1
2023-08-03 20:21:36,621 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-1] Setting JDBC Connection [HikariProxyConnection@393673201 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST] read-only
2023-08-03 20:21:36,621 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-1] Resetting read-only flag of JDBC Connection [HikariProxyConnection@393673201 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST]
2023-08-03 20:21:36,624 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-1] Response 200 OK
2023-08-03 20:21:36,625 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-1] Reading to [java.lang.Object]
2023-08-03 20:21:36,644 INFO ru.practicum.shareit.item.ItemController [http-nio-8080-exec-2] Request on add ItemDto(id=0, name=Щётка для обуви, description=Стандартная щётка для обуви, available=true, requestId=1), user id: 4
2023-08-03 20:21:36,644 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-2] HTTP POST http://localhost:9090/items
2023-08-03 20:21:36,645 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-2] Accept=[application/json, application/*+json]
2023-08-03 20:21:36,645 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-2] Writing [ItemDto(id=0, name=Щётка для обуви, description=Стандартная щётка для обуви, available=true, requestId=1)] as "application/json"
2023-08-03 20:21:36,646 INFO ru.practicum.item.ItemController [http-nio-9090-exec-2] Запрос на добавление ItemDto(id=0, name=Щётка для обуви, description=Стандартная щётка для обуви, available=true, requestId=1), идентификатор пользователя: 4
2023-08-03 20:21:36,649 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-2] Response 200 OK
2023-08-03 20:21:36,649 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-2] Reading to [java.lang.Object]
2023-08-03 20:21:36,672 INFO ru.practicum.shareit.request.RequestController [http-nio-8080-exec-3] Request on get all requests from user id: 1
2023-08-03 20:21:36,673 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-3] HTTP GET http://localhost:9090/requests?from=0&size=20
2023-08-03 20:21:36,673 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-3] Accept=[application/json, application/*+json]
2023-08-03 20:21:36,674 INFO ru.practicum.request.RequestController [http-nio-9090-exec-3] Запрос на получение всех запросов от идентификатора пользователя: 1
2023-08-03 20:21:36,675 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-3] Setting JDBC Connection [HikariProxyConnection@1679030423 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST] read-only
2023-08-03 20:21:36,675 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-3] Resetting read-only flag of JDBC Connection [HikariProxyConnection@1679030423 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST]
2023-08-03 20:21:36,678 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-3] Response 200 OK
2023-08-03 20:21:36,679 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-3] Reading to [java.lang.Object]
2023-08-03 20:21:36,703 INFO ru.practicum.shareit.request.RequestController [http-nio-8080-exec-4] Request on get all requests
2023-08-03 20:21:36,703 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-4] HTTP GET http://localhost:9090/requests/all?from=0&size=20
2023-08-03 20:21:36,703 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-4] Accept=[application/json, application/*+json]
2023-08-03 20:21:36,706 INFO ru.practicum.request.RequestController [http-nio-9090-exec-4] Запрос на получение всех запросов
2023-08-03 20:21:36,707 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-4] Response 200 OK
2023-08-03 20:21:36,707 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-4] Reading to [java.lang.Object]
2023-08-03 20:21:36,731 INFO ru.practicum.shareit.request.RequestController [http-nio-8080-exec-5] Request on get all requests
2023-08-03 20:21:36,731 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-5] HTTP GET http://localhost:9090/requests/all?from=0&size=20
2023-08-03 20:21:36,731 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-5] Accept=[application/json, application/*+json]
2023-08-03 20:21:36,734 INFO ru.practicum.request.RequestController [http-nio-9090-exec-5] Запрос на получение всех запросов
2023-08-03 20:21:36,735 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-5] Response 200 OK
2023-08-03 20:21:36,735 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-5] Reading to [java.lang.Object]
2023-08-03 20:21:36,760 INFO ru.practicum.shareit.request.RequestController [http-nio-8080-exec-6] Request from user ID: 99 on get request. ID: 1
2023-08-03 20:21:36,761 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-6] HTTP GET http://localhost:9090/requests/1
2023-08-03 20:21:36,761 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-6] Accept=[application/json, application/*+json]
2023-08-03 20:21:36,762 INFO ru.practicum.request.RequestController [http-nio-9090-exec-6] Запрос от идентификатора пользователя: 99 по запросу get. Идентификатор: 1
2023-08-03 20:21:36,763 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-6] Setting JDBC Connection [HikariProxyConnection@342192674 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST] read-only
2023-08-03 20:21:36,764 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-6] Resetting read-only flag of JDBC Connection [HikariProxyConnection@342192674 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST]
2023-08-03 20:21:36,764 INFO ru.practicum.ErrorHandler [http-nio-9090-exec-6] Not found: User with ID: 99 not found
2023-08-03 20:21:36,765 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-6] Response 404 NOT_FOUND
2023-08-03 20:21:36,787 INFO ru.practicum.shareit.request.RequestController [http-nio-8080-exec-7] Request from user ID: 1 on get request. ID: 99
2023-08-03 20:21:36,787 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-7] HTTP GET http://localhost:9090/requests/99
2023-08-03 20:21:36,787 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-7] Accept=[application/json, application/*+json]
2023-08-03 20:21:36,789 INFO ru.practicum.request.RequestController [http-nio-9090-exec-7] Запрос от идентификатора пользователя: 1 по запросу get. Идентификатор: 99
2023-08-03 20:21:36,789 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-7] Setting JDBC Connection [HikariProxyConnection@1765905361 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST] read-only
2023-08-03 20:21:36,790 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-7] Resetting read-only flag of JDBC Connection [HikariProxyConnection@1765905361 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST]
2023-08-03 20:21:36,791 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-7] Setting JDBC Connection [HikariProxyConnection@1765905361 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST] read-only
2023-08-03 20:21:36,792 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-7] Resetting read-only flag of JDBC Connection [HikariProxyConnection@1765905361 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST]
2023-08-03 20:21:36,793 INFO ru.practicum.ErrorHandler [http-nio-9090-exec-7] Not found: Запрос с идентификатором: 99 не найден
2023-08-03 20:21:36,794 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-7] Response 404 NOT_FOUND
2023-08-03 20:21:36,813 INFO ru.practicum.shareit.request.RequestController [http-nio-8080-exec-8] Request from user ID: 4 on get request. ID: 1
2023-08-03 20:21:36,814 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-8] HTTP GET http://localhost:9090/requests/1
2023-08-03 20:21:36,814 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-8] Accept=[application/json, application/*+json]
2023-08-03 20:21:36,815 INFO ru.practicum.request.RequestController [http-nio-9090-exec-8] Запрос от идентификатора пользователя: 4 по запросу get. Идентификатор: 1
2023-08-03 20:21:36,815 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-8] Setting JDBC Connection [HikariProxyConnection@394068398 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST] read-only
2023-08-03 20:21:36,816 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-8] Resetting read-only flag of JDBC Connection [HikariProxyConnection@394068398 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST]
2023-08-03 20:21:36,816 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-8] Setting JDBC Connection [HikariProxyConnection@394068398 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST] read-only
2023-08-03 20:21:36,817 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-8] Resetting read-only flag of JDBC Connection [HikariProxyConnection@394068398 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST]
2023-08-03 20:21:36,820 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-8] Response 200 OK
2023-08-03 20:21:36,820 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-8] Reading to [java.lang.Object]
2023-08-03 20:21:36,845 INFO ru.practicum.shareit.request.RequestController [http-nio-8080-exec-9] Request from user ID: 1 on get request. ID: 1
2023-08-03 20:21:36,845 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-9] HTTP GET http://localhost:9090/requests/1
2023-08-03 20:21:36,845 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-9] Accept=[application/json, application/*+json]
2023-08-03 20:21:36,847 INFO ru.practicum.request.RequestController [http-nio-9090-exec-9] Запрос от идентификатора пользователя: 1 по запросу get. Идентификатор: 1
2023-08-03 20:21:36,847 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-9] Setting JDBC Connection [HikariProxyConnection@1602831264 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST] read-only
2023-08-03 20:21:36,848 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-9] Resetting read-only flag of JDBC Connection [HikariProxyConnection@1602831264 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST]
2023-08-03 20:21:36,848 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-9] Setting JDBC Connection [HikariProxyConnection@1602831264 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST] read-only
2023-08-03 20:21:36,849 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-9] Resetting read-only flag of JDBC Connection [HikariProxyConnection@1602831264 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST]
2023-08-03 20:21:36,850 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-9] Response 200 OK
2023-08-03 20:21:36,850 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-9] Reading to [java.lang.Object]
2023-08-03 20:21:36,874 INFO ru.practicum.shareit.ErrorHandler [http-nio-8080-exec-10] Validation failed for field: size. Error message: должно быть больше 0
2023-08-03 20:21:36,895 INFO ru.practicum.shareit.ErrorHandler [http-nio-8080-exec-2] Validation failed for field: size. Error message: должно быть больше 0
2023-08-03 20:21:36,919 INFO ru.practicum.shareit.ErrorHandler [http-nio-8080-exec-4] Validation failed for field: from. Error message: должно быть больше или равно 0
2023-08-03 20:21:36,941 INFO ru.practicum.shareit.ErrorHandler [http-nio-8080-exec-6] Validation failed for field: from. Error message: должно быть больше или равно 0
2023-08-03 20:21:36,965 INFO ru.practicum.shareit.ErrorHandler [http-nio-8080-exec-8] Validation failed for field: size. Error message: должно быть больше 0
2023-08-03 20:21:36,986 INFO ru.practicum.shareit.ErrorHandler [http-nio-8080-exec-10] Validation failed for field: size. Error message: должно быть больше 0
2023-08-03 20:21:37,012 INFO ru.practicum.shareit.booking.BookingController [http-nio-8080-exec-2] Get booking with state ALL, userId=1, from=4, size=2
2023-08-03 20:21:37,012 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-2] HTTP GET http://localhost:9090/bookings?state=ALL&from=4&size=2
2023-08-03 20:21:37,012 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-2] Accept=[application/json, application/*+json]
2023-08-03 20:21:37,014 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-10] Setting JDBC Connection [HikariProxyConnection@771284645 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST] read-only
2023-08-03 20:21:37,015 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-10] Resetting read-only flag of JDBC Connection [HikariProxyConnection@771284645 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST]
2023-08-03 20:21:37,017 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-2] Response 200 OK
2023-08-03 20:21:37,018 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-2] Reading to [java.lang.Object]
2023-08-03 20:21:37,037 INFO ru.practicum.shareit.booking.BookingController [http-nio-8080-exec-3] Get booking with state ALL, userId=1, from=1, size=1
2023-08-03 20:21:37,037 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-3] HTTP GET http://localhost:9090/bookings/owner?state=ALL&from=1&size=1
2023-08-03 20:21:37,037 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-3] Accept=[application/json, application/*+json]
2023-08-03 20:21:37,039 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-1] Setting JDBC Connection [HikariProxyConnection@570827650 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST] read-only
2023-08-03 20:21:37,039 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-1] Resetting read-only flag of JDBC Connection [HikariProxyConnection@570827650 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST]
2023-08-03 20:21:37,045 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-3] Response 200 OK
2023-08-03 20:21:37,045 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-3] Reading to [java.lang.Object]
2023-08-03 20:21:57,193 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-08-03 20:21:57,194 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-08-03 20:22:12,174 INFO ru.practicum.shareit.ErrorHandler [http-nio-8080-exec-4] Bad booking state: Неизвестное состояние: UNSUPPORTED_STATUS
2023-08-03 20:22:27,196 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-08-03 20:22:27,196 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-08-03 20:22:32,754 INFO ru.practicum.shareit.ErrorHandler [http-nio-8080-exec-6] Bad booking state: Неизвестное состояние: UNSUPPORTED_STATUS
2023-08-03 20:22:57,198 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-08-03 20:22:57,198 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-08-03 20:22:58,697 INFO org.springframework.orm.jpa.AbstractEntityManagerFactoryBean [SpringApplicationShutdownHook] Closing JPA EntityManagerFactory for persistence unit 'default'
2023-08-03 20:22:58,697 INFO org.hibernate.tool.schema.internal.SchemaDropperImpl$DelayedDropActionImpl [SpringApplicationShutdownHook] HHH000477: Starting delayed evictData of schema as part of SessionFactory shut-down'
2023-08-03 20:22:58,699 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn0: url=jdbc:h2:mem:my_db user=TEST: (connection is dead)
2023-08-03 20:22:58,699 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn1: url=jdbc:h2:mem:my_db user=TEST: (connection is dead)
2023-08-03 20:22:58,699 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 connection closer] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-08-03 20:22:58,699 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn2: url=jdbc:h2:mem:my_db user=TEST: (connection is dead)
2023-08-03 20:22:58,699 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 connection closer] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-08-03 20:22:58,700 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn3: url=jdbc:h2:mem:my_db user=TEST: (connection is dead)
2023-08-03 20:22:58,700 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 connection closer] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-08-03 20:22:58,700 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn4: url=jdbc:h2:mem:my_db user=TEST: (connection is dead)
2023-08-03 20:22:58,700 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 connection closer] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-08-03 20:22:58,700 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn5: url=jdbc:h2:mem:my_db user=TEST: (connection is dead)
2023-08-03 20:22:58,700 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 connection closer] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-08-03 20:22:58,700 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn6: url=jdbc:h2:mem:my_db user=TEST: (connection is dead)
2023-08-03 20:22:58,700 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 connection closer] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-08-03 20:22:58,700 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn7: url=jdbc:h2:mem:my_db user=TEST: (connection is dead)
2023-08-03 20:22:58,700 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 connection closer] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-08-03 20:22:58,700 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn8: url=jdbc:h2:mem:my_db user=TEST: (connection is dead)
2023-08-03 20:22:58,700 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 connection closer] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-08-03 20:22:58,700 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn9: url=jdbc:h2:mem:my_db user=TEST: (connection is dead)
2023-08-03 20:22:58,700 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 connection closer] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-08-03 20:22:58,873 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn10: url=jdbc:h2:mem:my_db user=TEST
2023-08-03 20:22:58,873 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn11: url=jdbc:h2:mem:my_db user=TEST
2023-08-03 20:22:58,873 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn12: url=jdbc:h2:mem:my_db user=TEST
2023-08-03 20:22:58,873 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn13: url=jdbc:h2:mem:my_db user=TEST
2023-08-03 20:22:58,874 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn14: url=jdbc:h2:mem:my_db user=TEST
2023-08-03 20:22:58,874 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn15: url=jdbc:h2:mem:my_db user=TEST
2023-08-03 20:22:58,874 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn16: url=jdbc:h2:mem:my_db user=TEST
2023-08-03 20:22:58,874 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn17: url=jdbc:h2:mem:my_db user=TEST
2023-08-03 20:22:58,874 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn18: url=jdbc:h2:mem:my_db user=TEST
2023-08-03 20:22:58,875 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn19: url=jdbc:h2:mem:my_db user=TEST
2023-08-03 20:22:58,875 INFO com.zaxxer.hikari.HikariDataSource [SpringApplicationShutdownHook] HikariPool-1 - Shutdown initiated...
2023-08-03 20:22:58,875 DEBUG com.zaxxer.hikari.pool.HikariPool [SpringApplicationShutdownHook] HikariPool-1 - Before shutdown stats (total=10, active=0, idle=10, waiting=0)
2023-08-03 20:22:58,876 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn10: url=jdbc:h2:mem:my_db user=TEST: (connection evicted)
2023-08-03 20:22:58,876 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn11: url=jdbc:h2:mem:my_db user=TEST: (connection evicted)
2023-08-03 20:22:58,876 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn12: url=jdbc:h2:mem:my_db user=TEST: (connection evicted)
2023-08-03 20:22:58,876 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn13: url=jdbc:h2:mem:my_db user=TEST: (connection evicted)
2023-08-03 20:22:58,876 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn14: url=jdbc:h2:mem:my_db user=TEST: (connection evicted)
2023-08-03 20:22:58,876 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn15: url=jdbc:h2:mem:my_db user=TEST: (connection evicted)
2023-08-03 20:22:58,876 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn16: url=jdbc:h2:mem:my_db user=TEST: (connection evicted)
2023-08-03 20:22:58,876 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn17: url=jdbc:h2:mem:my_db user=TEST: (connection evicted)
2023-08-03 20:22:58,876 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn18: url=jdbc:h2:mem:my_db user=TEST: (connection evicted)
2023-08-03 20:22:58,877 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn19: url=jdbc:h2:mem:my_db user=TEST: (connection evicted)
2023-08-03 20:22:58,877 DEBUG com.zaxxer.hikari.pool.HikariPool [SpringApplicationShutdownHook] HikariPool-1 - After shutdown stats (total=0, active=0, idle=0, waiting=0)
2023-08-03 20:22:58,877 INFO com.zaxxer.hikari.HikariDataSource [SpringApplicationShutdownHook] HikariPool-1 - Shutdown completed.
2023-08-03 20:25:07,662 INFO org.hibernate.validator.internal.util.Version [background-preinit] HV000001: Hibernate Validator 6.2.5.Final
2023-08-03 20:25:07,667 INFO org.springframework.boot.StartupInfoLogger [main] Starting ShareItGateway using Java 18.0.2 on DESKTOP-HBQA1DH with PID 2796 (C:\Users\Aser\dev\java-shareit\shareIt-gateway\target\classes started by Aser in C:\Users\Aser\dev\java-shareit)
2023-08-03 20:25:07,668 INFO org.springframework.boot.SpringApplication [main] No active profile set, falling back to 1 default profile: "default"
2023-08-03 20:25:08,575 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [main] Tomcat initialized with port(s): 8080 (http)
2023-08-03 20:25:08,583 INFO org.apache.juli.logging.DirectJDKLog [main] Initializing ProtocolHandler ["http-nio-8080"]
2023-08-03 20:25:08,583 INFO org.apache.juli.logging.DirectJDKLog [main] Starting service [Tomcat]
2023-08-03 20:25:08,583 INFO org.apache.juli.logging.DirectJDKLog [main] Starting Servlet engine: [Apache Tomcat/9.0.71]
2023-08-03 20:25:08,664 INFO org.apache.juli.logging.DirectJDKLog [main] Initializing Spring embedded WebApplicationContext
2023-08-03 20:25:08,665 INFO org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext [main] Root WebApplicationContext: initialization completed in 955 ms
2023-08-03 20:25:09,304 INFO org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver [main] Exposing 1 endpoint(s) beneath base path '/actuator'
2023-08-03 20:25:09,323 INFO org.apache.juli.logging.DirectJDKLog [main] Starting ProtocolHandler ["http-nio-8080"]
2023-08-03 20:25:09,339 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [main] Tomcat started on port(s): 8080 (http) with context path ''
2023-08-03 20:25:09,352 INFO org.springframework.boot.StartupInfoLogger [main] Started ShareItGateway in 2.084 seconds (JVM running for 2.362)
2023-08-03 20:25:12,387 INFO org.springframework.boot.StartupInfoLogger [main] Starting ShareItServerApp using Java 18.0.2 on DESKTOP-HBQA1DH with PID 6332 (C:\Users\Aser\dev\java-shareit\ser\target\classes started by Aser in C:\Users\Aser\dev\java-shareit)
2023-08-03 20:25:12,390 INFO org.springframework.boot.SpringApplication [main] No active profile set, falling back to 1 default profile: "default"
2023-08-03 20:25:13,140 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2023-08-03 20:25:13,205 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Finished Spring Data repository scanning in 57 ms. Found 5 JPA repository interfaces.
2023-08-03 20:25:13,718 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [main] Tomcat initialized with port(s): 9090 (http)
2023-08-03 20:25:13,726 INFO org.apache.juli.logging.DirectJDKLog [main] Initializing ProtocolHandler ["http-nio-9090"]
2023-08-03 20:25:13,726 INFO org.apache.juli.logging.DirectJDKLog [main] Starting service [Tomcat]
2023-08-03 20:25:13,727 INFO org.apache.juli.logging.DirectJDKLog [main] Starting Servlet engine: [Apache Tomcat/9.0.71]
2023-08-03 20:25:13,812 INFO org.apache.juli.logging.DirectJDKLog [main] Initializing Spring embedded WebApplicationContext
2023-08-03 20:25:13,813 INFO org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext [main] Root WebApplicationContext: initialization completed in 1372 ms
2023-08-03 20:25:13,883 DEBUG com.zaxxer.hikari.HikariConfig [main] Driver class org.h2.Driver found in Thread context class loader TomcatEmbeddedWebappClassLoader
  context: ROOT
  delegate: true
----------> Parent Classloader:
jdk.internal.loader.ClassLoaders$AppClassLoader@3cd1a2f1

2023-08-03 20:25:14,076 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [main] Fetching JDBC Connection from DataSource
2023-08-03 20:25:14,077 DEBUG com.zaxxer.hikari.HikariConfig [main] HikariPool-1 - configuration:
2023-08-03 20:25:14,078 DEBUG com.zaxxer.hikari.HikariConfig [main] allowPoolSuspension................................false
2023-08-03 20:25:14,079 DEBUG com.zaxxer.hikari.HikariConfig [main] autoCommit................................true
2023-08-03 20:25:14,079 DEBUG com.zaxxer.hikari.HikariConfig [main] catalog................................none
2023-08-03 20:25:14,079 DEBUG com.zaxxer.hikari.HikariConfig [main] connectionInitSql................................none
2023-08-03 20:25:14,079 DEBUG com.zaxxer.hikari.HikariConfig [main] connectionTestQuery................................none
2023-08-03 20:25:14,080 DEBUG com.zaxxer.hikari.HikariConfig [main] connectionTimeout................................30000
2023-08-03 20:25:14,080 DEBUG com.zaxxer.hikari.HikariConfig [main] dataSource................................none
2023-08-03 20:25:14,081 DEBUG com.zaxxer.hikari.HikariConfig [main] dataSourceClassName................................none
2023-08-03 20:25:14,081 DEBUG com.zaxxer.hikari.HikariConfig [main] dataSourceJNDI................................none
2023-08-03 20:25:14,081 DEBUG com.zaxxer.hikari.HikariConfig [main] dataSourceProperties................................{password=<masked>}
2023-08-03 20:25:14,081 DEBUG com.zaxxer.hikari.HikariConfig [main] driverClassName................................"org.h2.Driver"
2023-08-03 20:25:14,082 DEBUG com.zaxxer.hikari.HikariConfig [main] exceptionOverrideClassName................................none
2023-08-03 20:25:14,082 DEBUG com.zaxxer.hikari.HikariConfig [main] healthCheckProperties................................{}
2023-08-03 20:25:14,082 DEBUG com.zaxxer.hikari.HikariConfig [main] healthCheckRegistry................................none
2023-08-03 20:25:14,082 DEBUG com.zaxxer.hikari.HikariConfig [main] idleTimeout................................600000
2023-08-03 20:25:14,083 DEBUG com.zaxxer.hikari.HikariConfig [main] initializationFailTimeout................................1
2023-08-03 20:25:14,083 DEBUG com.zaxxer.hikari.HikariConfig [main] isolateInternalQueries................................false
2023-08-03 20:25:14,083 DEBUG com.zaxxer.hikari.HikariConfig [main] jdbcUrl................................jdbc:h2:mem:my_db
2023-08-03 20:25:14,083 DEBUG com.zaxxer.hikari.HikariConfig [main] keepaliveTime................................0
2023-08-03 20:25:14,083 DEBUG com.zaxxer.hikari.HikariConfig [main] leakDetectionThreshold................................0
2023-08-03 20:25:14,083 DEBUG com.zaxxer.hikari.HikariConfig [main] maxLifetime................................1800000
2023-08-03 20:25:14,084 DEBUG com.zaxxer.hikari.HikariConfig [main] maximumPoolSize................................10
2023-08-03 20:25:14,084 DEBUG com.zaxxer.hikari.HikariConfig [main] metricRegistry................................none
2023-08-03 20:25:14,084 DEBUG com.zaxxer.hikari.HikariConfig [main] metricsTrackerFactory................................com.zaxxer.hikari.metrics.micrometer.MicrometerMetricsTrackerFactory@1775c4e7
2023-08-03 20:25:14,084 DEBUG com.zaxxer.hikari.HikariConfig [main] minimumIdle................................10
2023-08-03 20:25:14,084 DEBUG com.zaxxer.hikari.HikariConfig [main] password................................<masked>
2023-08-03 20:25:14,084 DEBUG com.zaxxer.hikari.HikariConfig [main] poolName................................"HikariPool-1"
2023-08-03 20:25:14,084 DEBUG com.zaxxer.hikari.HikariConfig [main] readOnly................................false
2023-08-03 20:25:14,085 DEBUG com.zaxxer.hikari.HikariConfig [main] registerMbeans................................false
2023-08-03 20:25:14,085 DEBUG com.zaxxer.hikari.HikariConfig [main] scheduledExecutor................................none
2023-08-03 20:25:14,085 DEBUG com.zaxxer.hikari.HikariConfig [main] schema................................none
2023-08-03 20:25:14,085 DEBUG com.zaxxer.hikari.HikariConfig [main] threadFactory................................internal
2023-08-03 20:25:14,085 DEBUG com.zaxxer.hikari.HikariConfig [main] transactionIsolation................................default
2023-08-03 20:25:14,085 DEBUG com.zaxxer.hikari.HikariConfig [main] username................................"test"
2023-08-03 20:25:14,086 DEBUG com.zaxxer.hikari.HikariConfig [main] validationTimeout................................5000
2023-08-03 20:25:14,086 INFO com.zaxxer.hikari.HikariDataSource [main] HikariPool-1 - Starting...
2023-08-03 20:25:14,257 DEBUG com.zaxxer.hikari.pool.HikariPool [main] HikariPool-1 - Added connection conn0: url=jdbc:h2:mem:my_db user=TEST
2023-08-03 20:25:14,261 INFO com.zaxxer.hikari.HikariDataSource [main] HikariPool-1 - Start completed.
2023-08-03 20:25:14,306 INFO org.hibernate.jpa.internal.util.LogHelper [main] HHH000204: Processing PersistenceUnitInfo [name: default]
2023-08-03 20:25:14,339 INFO org.hibernate.Version [main] HHH000412: Hibernate ORM core version 5.6.15.Final
2023-08-03 20:25:14,362 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=1, active=0, idle=1, waiting=0)
2023-08-03 20:25:14,363 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn1: url=jdbc:h2:mem:my_db user=TEST
2023-08-03 20:25:14,364 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn2: url=jdbc:h2:mem:my_db user=TEST
2023-08-03 20:25:14,364 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn3: url=jdbc:h2:mem:my_db user=TEST
2023-08-03 20:25:14,365 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn4: url=jdbc:h2:mem:my_db user=TEST
2023-08-03 20:25:14,366 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn5: url=jdbc:h2:mem:my_db user=TEST
2023-08-03 20:25:14,366 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn6: url=jdbc:h2:mem:my_db user=TEST
2023-08-03 20:25:14,366 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn7: url=jdbc:h2:mem:my_db user=TEST
2023-08-03 20:25:14,367 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn8: url=jdbc:h2:mem:my_db user=TEST
2023-08-03 20:25:14,367 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn9: url=jdbc:h2:mem:my_db user=TEST
2023-08-03 20:25:14,367 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 connection adder] HikariPool-1 - After adding stats (total=10, active=0, idle=10, waiting=0)
2023-08-03 20:25:14,463 INFO org.hibernate.annotations.common.reflection.java.JavaReflectionManager [main] HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2023-08-03 20:25:14,550 INFO org.hibernate.dialect.Dialect [main] HHH000400: Using dialect: org.hibernate.dialect.PostgreSQL10Dialect
2023-08-03 20:25:14,988 INFO org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator [main] HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2023-08-03 20:25:14,994 INFO org.springframework.orm.jpa.AbstractEntityManagerFactoryBean [main] Initialized JPA EntityManagerFactory for persistence unit 'default'
2023-08-03 20:25:15,550 WARN org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration [main] spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2023-08-03 20:25:15,854 INFO org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver [main] Exposing 1 endpoint(s) beneath base path '/actuator'
2023-08-03 20:25:15,872 INFO org.apache.juli.logging.DirectJDKLog [main] Starting ProtocolHandler ["http-nio-9090"]
2023-08-03 20:25:15,890 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [main] Tomcat started on port(s): 9090 (http) with context path ''
2023-08-03 20:25:15,902 INFO org.springframework.boot.StartupInfoLogger [main] Started ShareItServerApp in 3.923 seconds (JVM running for 4.232)
2023-08-03 20:25:19,514 INFO org.apache.juli.logging.DirectJDKLog [http-nio-8080-exec-2] Initializing Spring DispatcherServlet 'dispatcherServlet'
2023-08-03 20:25:19,514 INFO org.springframework.web.servlet.FrameworkServlet [http-nio-8080-exec-2] Initializing Servlet 'dispatcherServlet'
2023-08-03 20:25:19,515 INFO org.springframework.web.servlet.FrameworkServlet [http-nio-8080-exec-2] Completed initialization in 0 ms
2023-08-03 20:25:19,631 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-2] HTTP POST http://localhost:9090/users
2023-08-03 20:25:19,637 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-2] Accept=[application/json, application/*+json]
2023-08-03 20:25:19,647 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-2] Writing [UserDto(id=0, email=user@user.com, name=user)] as "application/json"
2023-08-03 20:25:19,730 INFO org.apache.juli.logging.DirectJDKLog [http-nio-9090-exec-1] Initializing Spring DispatcherServlet 'dispatcherServlet'
2023-08-03 20:25:19,731 INFO org.springframework.web.servlet.FrameworkServlet [http-nio-9090-exec-1] Initializing Servlet 'dispatcherServlet'
2023-08-03 20:25:19,732 INFO org.springframework.web.servlet.FrameworkServlet [http-nio-9090-exec-1] Completed initialization in 1 ms
2023-08-03 20:25:19,860 INFO ru.practicum.user.UserController [http-nio-9090-exec-1] Было создано: ru.practicum.user.model.User@6c700cd6
2023-08-03 20:25:19,880 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-2] Response 201 CREATED
2023-08-03 20:25:19,881 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-2] Reading to [java.lang.Object]
2023-08-03 20:25:19,924 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-3] HTTP POST http://localhost:9090/users
2023-08-03 20:25:19,925 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-3] Accept=[application/json, application/*+json]
2023-08-03 20:25:19,925 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-3] Writing [UserDto(id=0, email=user@user.com, name=user)] as "application/json"
2023-08-03 20:25:19,930 WARN org.hibernate.engine.jdbc.spi.SqlExceptionHelper [http-nio-9090-exec-2] SQL Error: 23505, SQLState: 23505
2023-08-03 20:25:19,931 ERROR org.hibernate.engine.jdbc.spi.SqlExceptionHelper [http-nio-9090-exec-2] Нарушение уникального индекса или первичного ключа: "PUBLIC.UNIQ_EMAIL_INDEX_4 ON PUBLIC.USERS(EMAIL NULLS FIRST) VALUES ( /* 1 */ 'user@user.com' )"
Unique index or primary key violation: "PUBLIC.UNIQ_EMAIL_INDEX_4 ON PUBLIC.USERS(EMAIL NULLS FIRST) VALUES ( /* 1 */ 'user@user.com' )"; SQL statement:
insert into users (email, name) values (?, ?) [23505-214]
2023-08-03 20:25:19,936 INFO ru.practicum.ErrorHandler [http-nio-9090-exec-2] Server error could not execute statement; SQL [n/a]; constraint [null]; nested exception is org.hibernate.exception.ConstraintViolationException: could not execute statement
2023-08-03 20:25:19,941 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-3] Response 500 INTERNAL_SERVER_ERROR
2023-08-03 20:25:19,978 INFO ru.practicum.shareit.ErrorHandler [http-nio-8080-exec-5] Validation failed for field: email. Error message: Email can not be null
2023-08-03 20:25:20,008 INFO ru.practicum.shareit.ErrorHandler [http-nio-8080-exec-7] Validation failed for field: email. Error message: Email is wrong
2023-08-03 20:25:20,032 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-9] HTTP PATCH http://localhost:9090/users/1
2023-08-03 20:25:20,033 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-9] Accept=[application/json, application/*+json]
2023-08-03 20:25:20,033 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-9] Writing [UserDto(id=0, email=update@user.com, name=update)] as "application/json"
2023-08-03 20:25:20,053 INFO ru.practicum.user.UserServiceImpl [http-nio-9090-exec-3] Обновление: ru.practicum.user.model.User@5e0d5d3
2023-08-03 20:25:20,054 INFO ru.practicum.user.UserServiceImpl [http-nio-9090-exec-3] Электронная почта обновлена
2023-08-03 20:25:20,054 INFO ru.practicum.user.UserServiceImpl [http-nio-9090-exec-3] Имя ползователя обновлено
2023-08-03 20:25:20,062 INFO ru.practicum.user.UserController [http-nio-9090-exec-3] Был обновлен: ru.practicum.user.model.User@5e0d5d3
2023-08-03 20:25:20,063 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-9] Response 200 OK
2023-08-03 20:25:20,063 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-9] Reading to [java.lang.Object]
2023-08-03 20:25:20,063 INFO ru.practicum.shareit.user.UserController [http-nio-8080-exec-9] Has been updated: <200,{id=1, email=update@user.com, name=update},[Content-Type:"application/json", Transfer-Encoding:"chunked", Date:"Thu, 03 Aug 2023 16:25:19 GMT", Keep-Alive:"timeout=60", Connection:"keep-alive"]>
2023-08-03 20:25:20,089 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-10] HTTP POST http://localhost:9090/users
2023-08-03 20:25:20,090 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-10] Accept=[application/json, application/*+json]
2023-08-03 20:25:20,091 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-10] Writing [UserDto(id=0, email=user@user.com, name=user)] as "application/json"
2023-08-03 20:25:20,094 INFO ru.practicum.user.UserController [http-nio-9090-exec-4] Было создано: ru.practicum.user.model.User@728d07b
2023-08-03 20:25:20,095 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-10] Response 201 CREATED
2023-08-03 20:25:20,096 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-10] Reading to [java.lang.Object]
2023-08-03 20:25:20,119 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-1] HTTP PATCH http://localhost:9090/users/1
2023-08-03 20:25:20,119 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-1] Accept=[application/json, application/*+json]
2023-08-03 20:25:20,119 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-1] Writing [UserDto(id=0, email=null, name=updateName)] as "application/json"
2023-08-03 20:25:20,122 INFO ru.practicum.user.UserServiceImpl [http-nio-9090-exec-5] Обновление: ru.practicum.user.model.User@4b8bdd87
2023-08-03 20:25:20,123 INFO ru.practicum.user.UserServiceImpl [http-nio-9090-exec-5] Имя ползователя обновлено
2023-08-03 20:25:20,124 INFO ru.practicum.user.UserController [http-nio-9090-exec-5] Был обновлен: ru.practicum.user.model.User@4b8bdd87
2023-08-03 20:25:20,126 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-1] Response 200 OK
2023-08-03 20:25:20,126 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-1] Reading to [java.lang.Object]
2023-08-03 20:25:20,126 INFO ru.practicum.shareit.user.UserController [http-nio-8080-exec-1] Has been updated: <200,{id=1, email=update@user.com, name=updateName},[Content-Type:"application/json", Transfer-Encoding:"chunked", Date:"Thu, 03 Aug 2023 16:25:19 GMT", Keep-Alive:"timeout=60", Connection:"keep-alive"]>
2023-08-03 20:25:20,150 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-2] HTTP PATCH http://localhost:9090/users/1
2023-08-03 20:25:20,151 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-2] Accept=[application/json, application/*+json]
2023-08-03 20:25:20,151 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-2] Writing [UserDto(id=0, email=updateName@user.com, name=null)] as "application/json"
2023-08-03 20:25:20,155 INFO ru.practicum.user.UserServiceImpl [http-nio-9090-exec-6] Обновление: ru.practicum.user.model.User@d085148
2023-08-03 20:25:20,156 INFO ru.practicum.user.UserServiceImpl [http-nio-9090-exec-6] Электронная почта обновлена
2023-08-03 20:25:20,157 INFO ru.practicum.user.UserController [http-nio-9090-exec-6] Был обновлен: ru.practicum.user.model.User@d085148
2023-08-03 20:25:20,160 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-2] Response 200 OK
2023-08-03 20:25:20,161 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-2] Reading to [java.lang.Object]
2023-08-03 20:25:20,161 INFO ru.practicum.shareit.user.UserController [http-nio-8080-exec-2] Has been updated: <200,{id=1, email=updateName@user.com, name=updateName},[Content-Type:"application/json", Transfer-Encoding:"chunked", Date:"Thu, 03 Aug 2023 16:25:19 GMT", Keep-Alive:"timeout=60", Connection:"keep-alive"]>
2023-08-03 20:25:20,185 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-3] HTTP PATCH http://localhost:9090/users/1
2023-08-03 20:25:20,185 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-3] Accept=[application/json, application/*+json]
2023-08-03 20:25:20,186 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-3] Writing [UserDto(id=0, email=updateName@user.com, name=null)] as "application/json"
2023-08-03 20:25:20,191 INFO ru.practicum.user.UserServiceImpl [http-nio-9090-exec-7] Обновление: ru.practicum.user.model.User@7a95eb01
2023-08-03 20:25:20,193 INFO ru.practicum.user.UserController [http-nio-9090-exec-7] Был обновлен: ru.practicum.user.model.User@7a95eb01
2023-08-03 20:25:20,195 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-3] Response 200 OK
2023-08-03 20:25:20,196 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-3] Reading to [java.lang.Object]
2023-08-03 20:25:20,196 INFO ru.practicum.shareit.user.UserController [http-nio-8080-exec-3] Has been updated: <200,{id=1, email=updateName@user.com, name=updateName},[Content-Type:"application/json", Transfer-Encoding:"chunked", Date:"Thu, 03 Aug 2023 16:25:19 GMT", Keep-Alive:"timeout=60", Connection:"keep-alive"]>
2023-08-03 20:25:20,229 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-4] HTTP PATCH http://localhost:9090/users/1
2023-08-03 20:25:20,230 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-4] Accept=[application/json, application/*+json]
2023-08-03 20:25:20,230 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-4] Writing [UserDto(id=0, email=user@user.com, name=null)] as "application/json"
2023-08-03 20:25:20,233 INFO ru.practicum.user.UserServiceImpl [http-nio-9090-exec-8] Обновление: ru.practicum.user.model.User@3e68043
2023-08-03 20:25:20,234 INFO ru.practicum.user.UserServiceImpl [http-nio-9090-exec-8] Электронная почта обновлена
2023-08-03 20:25:20,236 WARN org.hibernate.engine.jdbc.spi.SqlExceptionHelper [http-nio-9090-exec-8] SQL Error: 23505, SQLState: 23505
2023-08-03 20:25:20,236 ERROR org.hibernate.engine.jdbc.spi.SqlExceptionHelper [http-nio-9090-exec-8] Нарушение уникального индекса или первичного ключа: "PUBLIC.UNIQ_EMAIL_INDEX_4 ON PUBLIC.USERS(EMAIL NULLS FIRST) VALUES ( /* 3 */ 'user@user.com' )"
Unique index or primary key violation: "PUBLIC.UNIQ_EMAIL_INDEX_4 ON PUBLIC.USERS(EMAIL NULLS FIRST) VALUES ( /* 3 */ 'user@user.com' )"; SQL statement:
update users set email=?, name=? where id=? [23505-214]
2023-08-03 20:25:20,237 INFO org.hibernate.engine.jdbc.batch.internal.AbstractBatchImpl [http-nio-9090-exec-8] HHH000010: On release of batch it still contained JDBC statements
2023-08-03 20:25:20,238 INFO ru.practicum.ErrorHandler [http-nio-9090-exec-8] Server error could not execute statement; SQL [n/a]; constraint [null]; nested exception is org.hibernate.exception.ConstraintViolationException: could not execute statement
2023-08-03 20:25:20,239 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-4] Response 500 INTERNAL_SERVER_ERROR
2023-08-03 20:25:20,241 INFO ru.practicum.shareit.user.UserController [http-nio-8080-exec-4] Has been updated: <500 INTERNAL_SERVER_ERROR Internal Server Error,[B@7fd5be25,[]>
2023-08-03 20:25:20,262 INFO ru.practicum.shareit.user.UserController [http-nio-8080-exec-6] Request to get user with ID: 1
2023-08-03 20:25:20,264 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-6] HTTP GET http://localhost:9090/users/1
2023-08-03 20:25:20,264 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-6] Accept=[application/json, application/*+json]
2023-08-03 20:25:20,268 INFO ru.practicum.user.UserController [http-nio-9090-exec-9] Запрос на получение пользователя ID: 1
2023-08-03 20:25:20,269 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-9] Setting JDBC Connection [HikariProxyConnection@134999492 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST] read-only
2023-08-03 20:25:20,270 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-9] Resetting read-only flag of JDBC Connection [HikariProxyConnection@134999492 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST]
2023-08-03 20:25:20,272 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-6] Response 200 OK
2023-08-03 20:25:20,272 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-6] Reading to [java.lang.Object]
2023-08-03 20:25:20,298 INFO ru.practicum.shareit.user.UserController [http-nio-8080-exec-7] Request to get user with ID: 3
2023-08-03 20:25:20,299 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-7] HTTP GET http://localhost:9090/users/3
2023-08-03 20:25:20,300 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-7] Accept=[application/json, application/*+json]
2023-08-03 20:25:20,302 INFO ru.practicum.user.UserController [http-nio-9090-exec-10] Запрос на получение пользователя ID: 3
2023-08-03 20:25:20,303 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-10] Setting JDBC Connection [HikariProxyConnection@499675301 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST] read-only
2023-08-03 20:25:20,304 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-10] Resetting read-only flag of JDBC Connection [HikariProxyConnection@499675301 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST]
2023-08-03 20:25:20,305 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-7] Response 200 OK
2023-08-03 20:25:20,306 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-7] Reading to [java.lang.Object]
2023-08-03 20:25:20,326 INFO ru.practicum.shareit.user.UserController [http-nio-8080-exec-8] Request to get user with ID: 100
2023-08-03 20:25:20,327 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-8] HTTP GET http://localhost:9090/users/100
2023-08-03 20:25:20,327 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-8] Accept=[application/json, application/*+json]
2023-08-03 20:25:20,329 INFO ru.practicum.user.UserController [http-nio-9090-exec-1] Запрос на получение пользователя ID: 100
2023-08-03 20:25:20,330 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-1] Setting JDBC Connection [HikariProxyConnection@1988220049 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST] read-only
2023-08-03 20:25:20,330 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-1] Resetting read-only flag of JDBC Connection [HikariProxyConnection@1988220049 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST]
2023-08-03 20:25:20,331 INFO ru.practicum.user.UserServiceImpl [http-nio-9090-exec-1] Throw new NotFoundException
2023-08-03 20:25:20,332 INFO ru.practicum.ErrorHandler [http-nio-9090-exec-1] Not found: User with ID: 100 not found
2023-08-03 20:25:20,333 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-8] Response 404 NOT_FOUND
2023-08-03 20:25:20,355 INFO ru.practicum.shareit.user.UserController [http-nio-8080-exec-9] Request to delete with id: 3
2023-08-03 20:25:20,356 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-9] HTTP DELETE http://localhost:9090/users/3
2023-08-03 20:25:20,356 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-9] Accept=[application/json, application/*+json]
2023-08-03 20:25:20,358 INFO ru.practicum.user.UserController [http-nio-9090-exec-2] Запрос на удаление с ID: 3
2023-08-03 20:25:20,368 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-9] Response 204 NO_CONTENT
2023-08-03 20:25:20,395 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-10] HTTP POST http://localhost:9090/users
2023-08-03 20:25:20,395 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-10] Accept=[application/json, application/*+json]
2023-08-03 20:25:20,396 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-10] Writing [UserDto(id=0, email=user@user.com, name=user)] as "application/json"
2023-08-03 20:25:20,401 INFO ru.practicum.user.UserController [http-nio-9090-exec-3] Было создано: ru.practicum.user.model.User@6109e9ff
2023-08-03 20:25:20,403 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-10] Response 201 CREATED
2023-08-03 20:25:20,404 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-10] Reading to [java.lang.Object]
2023-08-03 20:25:20,433 INFO ru.practicum.shareit.user.UserController [http-nio-8080-exec-1] Request on get all
2023-08-03 20:25:20,433 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-1] HTTP GET http://localhost:9090/users
2023-08-03 20:25:20,434 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-1] Accept=[application/json, application/*+json]
2023-08-03 20:25:20,436 INFO ru.practicum.user.UserController [http-nio-9090-exec-4] Запрос на получение всего
2023-08-03 20:25:20,437 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-4] Setting JDBC Connection [HikariProxyConnection@154705596 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST] read-only
2023-08-03 20:25:20,451 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-4] Resetting read-only flag of JDBC Connection [HikariProxyConnection@154705596 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST]
2023-08-03 20:25:20,457 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-1] Response 200 OK
2023-08-03 20:25:20,458 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-1] Reading to [java.lang.Object]
2023-08-03 20:25:20,509 INFO ru.practicum.shareit.item.ItemController [http-nio-8080-exec-2] Request on add ItemDto(id=0, name=Дрель, description=Простая дрель, available=true, requestId=null), user id: 1
2023-08-03 20:25:20,515 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-2] HTTP POST http://localhost:9090/items
2023-08-03 20:25:20,516 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-2] Accept=[application/json, application/*+json]
2023-08-03 20:25:20,517 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-2] Writing [ItemDto(id=0, name=Дрель, description=Простая дрель, available=true, requestId=null)] as "application/json"
2023-08-03 20:25:20,529 INFO ru.practicum.item.ItemController [http-nio-9090-exec-5] Запрос на добавление ItemDto(id=0, name=Дрель, description=Простая дрель, available=true, requestId=null), идентификатор пользователя: 1
2023-08-03 20:25:20,545 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-2] Response 200 OK
2023-08-03 20:25:20,546 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-2] Reading to [java.lang.Object]
2023-08-03 20:25:20,567 INFO ru.practicum.shareit.ErrorHandler [http-nio-8080-exec-3] Missing request header: Required request header 'X-Sharer-User-Id' for method parameter type Long is not present
2023-08-03 20:25:20,594 INFO ru.practicum.shareit.item.ItemController [http-nio-8080-exec-5] Request on add ItemDto(id=0, name=Дрель, description=Простая дрель, available=true, requestId=null), user id: 10
2023-08-03 20:25:20,595 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-5] HTTP POST http://localhost:9090/items
2023-08-03 20:25:20,595 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-5] Accept=[application/json, application/*+json]
2023-08-03 20:25:20,596 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-5] Writing [ItemDto(id=0, name=Дрель, description=Простая дрель, available=true, requestId=null)] as "application/json"
2023-08-03 20:25:20,600 INFO ru.practicum.item.ItemController [http-nio-9090-exec-6] Запрос на добавление ItemDto(id=0, name=Дрель, description=Простая дрель, available=true, requestId=null), идентификатор пользователя: 10
2023-08-03 20:25:20,603 INFO ru.practicum.ErrorHandler [http-nio-9090-exec-6] Not found: User with ID: 10 not found
2023-08-03 20:25:20,605 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-5] Response 404 NOT_FOUND
2023-08-03 20:25:20,631 INFO ru.practicum.shareit.ErrorHandler [http-nio-8080-exec-6] Validation failed for field: available. Error message: Available should be specified
2023-08-03 20:25:20,651 INFO ru.practicum.shareit.ErrorHandler [http-nio-8080-exec-8] Validation failed for field: name. Error message: Name can't blank
2023-08-03 20:25:20,669 INFO ru.practicum.shareit.ErrorHandler [http-nio-8080-exec-10] Validation failed for field: description. Error message: Description can't blank
2023-08-03 20:25:20,693 INFO ru.practicum.shareit.item.ItemController [http-nio-8080-exec-2] Request on edit item id: 1, ItemDto(id=1, name=Дрель+, description=Аккумуляторная дрель, available=false, requestId=null), user id: 1
2023-08-03 20:25:20,694 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-2] HTTP PATCH http://localhost:9090/items/1
2023-08-03 20:25:20,694 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-2] Accept=[application/json, application/*+json]
2023-08-03 20:25:20,695 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-2] Writing [ItemDto(id=1, name=Дрель+, description=Аккумуляторная дрель, available=false, requestId=null)] as "application/json"
2023-08-03 20:25:20,698 INFO ru.practicum.item.ItemController [http-nio-9090-exec-7] Запрос на редактирование идентификатора элемента: 1, ItemDto(id=1, name=Дрель+, description=Аккумуляторная дрель, available=false, requestId=null), идентификатор пользователя: 1
2023-08-03 20:25:20,706 INFO ru.practicum.item.ItemServiceImpl [http-nio-9090-exec-7] Обновление: ru.practicum.item.model.Item@548bddd8
2023-08-03 20:25:20,706 INFO ru.practicum.item.ItemServiceImpl [http-nio-9090-exec-7] Название обновлено
2023-08-03 20:25:20,707 INFO ru.practicum.item.ItemServiceImpl [http-nio-9090-exec-7] Описание обновлено
2023-08-03 20:25:20,707 INFO ru.practicum.item.ItemServiceImpl [http-nio-9090-exec-7] Доступность обновлена
2023-08-03 20:25:20,710 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-2] Response 200 OK
2023-08-03 20:25:20,711 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-2] Reading to [java.lang.Object]
2023-08-03 20:25:20,729 INFO ru.practicum.shareit.ErrorHandler [http-nio-8080-exec-3] Missing request header: Required request header 'X-Sharer-User-Id' for method parameter type Long is not present
2023-08-03 20:25:20,752 INFO ru.practicum.shareit.item.ItemController [http-nio-8080-exec-5] Request on edit item id: 1, ItemDto(id=0, name=Дрель, description=Простая дрель, available=false, requestId=null), user id: 3
2023-08-03 20:25:20,752 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-5] HTTP PATCH http://localhost:9090/items/1
2023-08-03 20:25:20,753 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-5] Accept=[application/json, application/*+json]
2023-08-03 20:25:20,753 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-5] Writing [ItemDto(id=0, name=Дрель, description=Простая дрель, available=false, requestId=null)] as "application/json"
2023-08-03 20:25:20,755 INFO ru.practicum.item.ItemController [http-nio-9090-exec-8] Запрос на редактирование идентификатора элемента: 1, ItemDto(id=0, name=Дрель, description=Простая дрель, available=false, requestId=null), идентификатор пользователя: 3
2023-08-03 20:25:20,757 INFO ru.practicum.item.ItemServiceImpl [http-nio-9090-exec-8] Обновление: ru.practicum.item.model.Item@2285bb76
2023-08-03 20:25:20,758 INFO ru.practicum.ErrorHandler [http-nio-9090-exec-8] Not found: Пользователь не является владельцем элемента
2023-08-03 20:25:20,759 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-5] Response 404 NOT_FOUND
2023-08-03 20:25:20,780 INFO ru.practicum.shareit.item.ItemController [http-nio-8080-exec-6] Request on edit item id: 1, ItemDto(id=0, name=null, description=null, available=true, requestId=null), user id: 1
2023-08-03 20:25:20,781 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-6] HTTP PATCH http://localhost:9090/items/1
2023-08-03 20:25:20,781 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-6] Accept=[application/json, application/*+json]
2023-08-03 20:25:20,781 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-6] Writing [ItemDto(id=0, name=null, description=null, available=true, requestId=null)] as "application/json"
2023-08-03 20:25:20,784 INFO ru.practicum.item.ItemController [http-nio-9090-exec-9] Запрос на редактирование идентификатора элемента: 1, ItemDto(id=0, name=null, description=null, available=true, requestId=null), идентификатор пользователя: 1
2023-08-03 20:25:20,785 INFO ru.practicum.item.ItemServiceImpl [http-nio-9090-exec-9] Обновление: ru.practicum.item.model.Item@68a4b733
2023-08-03 20:25:20,785 INFO ru.practicum.item.ItemServiceImpl [http-nio-9090-exec-9] Доступность обновлена
2023-08-03 20:25:20,788 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-6] Response 200 OK
2023-08-03 20:25:20,788 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-6] Reading to [java.lang.Object]
2023-08-03 20:25:20,809 INFO ru.practicum.shareit.item.ItemController [http-nio-8080-exec-7] Request on edit item id: 1, ItemDto(id=0, name=null, description=Аккумуляторная дрель + аккумулятор, available=null, requestId=null), user id: 1
2023-08-03 20:25:20,810 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-7] HTTP PATCH http://localhost:9090/items/1
2023-08-03 20:25:20,810 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-7] Accept=[application/json, application/*+json]
2023-08-03 20:25:20,810 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-7] Writing [ItemDto(id=0, name=null, description=Аккумуляторная дрель + аккумулятор, available=null, requestId=null)] as "application/json"
2023-08-03 20:25:20,813 INFO ru.practicum.item.ItemController [http-nio-9090-exec-10] Запрос на редактирование идентификатора элемента: 1, ItemDto(id=0, name=null, description=Аккумуляторная дрель + аккумулятор, available=null, requestId=null), идентификатор пользователя: 1
2023-08-03 20:25:20,814 INFO ru.practicum.item.ItemServiceImpl [http-nio-9090-exec-10] Обновление: ru.practicum.item.model.Item@745341fa
2023-08-03 20:25:20,815 INFO ru.practicum.item.ItemServiceImpl [http-nio-9090-exec-10] Описание обновлено
2023-08-03 20:25:20,818 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-7] Response 200 OK
2023-08-03 20:25:20,819 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-7] Reading to [java.lang.Object]
2023-08-03 20:25:20,844 INFO ru.practicum.shareit.item.ItemController [http-nio-8080-exec-8] Request on edit item id: 1, ItemDto(id=0, name=Аккумуляторная дрель, description=null, available=null, requestId=null), user id: 1
2023-08-03 20:25:20,845 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-8] HTTP PATCH http://localhost:9090/items/1
2023-08-03 20:25:20,845 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-8] Accept=[application/json, application/*+json]
2023-08-03 20:25:20,846 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-8] Writing [ItemDto(id=0, name=Аккумуляторная дрель, description=null, available=null, requestId=null)] as "application/json"
2023-08-03 20:25:20,854 INFO ru.practicum.item.ItemController [http-nio-9090-exec-1] Запрос на редактирование идентификатора элемента: 1, ItemDto(id=0, name=Аккумуляторная дрель, description=null, available=null, requestId=null), идентификатор пользователя: 1
2023-08-03 20:25:20,859 INFO ru.practicum.item.ItemServiceImpl [http-nio-9090-exec-1] Обновление: ru.practicum.item.model.Item@8d80cd7
2023-08-03 20:25:20,860 INFO ru.practicum.item.ItemServiceImpl [http-nio-9090-exec-1] Название обновлено
2023-08-03 20:25:20,866 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-8] Response 200 OK
2023-08-03 20:25:20,866 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-8] Reading to [java.lang.Object]
2023-08-03 20:25:20,893 INFO ru.practicum.shareit.item.ItemController [http-nio-8080-exec-9] Request from user ID: 1 on get item. ID: 1
2023-08-03 20:25:20,894 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-9] HTTP GET http://localhost:9090/items/1
2023-08-03 20:25:20,894 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-9] Accept=[application/json, application/*+json]
2023-08-03 20:25:20,897 INFO ru.practicum.item.ItemController [http-nio-9090-exec-2] Запрос от идентификатора пользователя: 1 при получении элемента. Идентификатор: 1
2023-08-03 20:25:20,898 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-2] Setting JDBC Connection [HikariProxyConnection@1175006633 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST] read-only
2023-08-03 20:25:20,899 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-2] Resetting read-only flag of JDBC Connection [HikariProxyConnection@1175006633 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST]
2023-08-03 20:25:20,928 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-9] Response 200 OK
2023-08-03 20:25:20,929 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-9] Reading to [java.lang.Object]
2023-08-03 20:25:20,949 INFO ru.practicum.shareit.item.ItemController [http-nio-8080-exec-10] Request from user ID: 4 on get item. ID: 1
2023-08-03 20:25:20,949 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-10] HTTP GET http://localhost:9090/items/1
2023-08-03 20:25:20,949 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-10] Accept=[application/json, application/*+json]
2023-08-03 20:25:20,951 INFO ru.practicum.item.ItemController [http-nio-9090-exec-3] Запрос от идентификатора пользователя: 4 при получении элемента. Идентификатор: 1
2023-08-03 20:25:20,952 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-3] Setting JDBC Connection [HikariProxyConnection@1248340780 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST] read-only
2023-08-03 20:25:20,952 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-3] Resetting read-only flag of JDBC Connection [HikariProxyConnection@1248340780 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST]
2023-08-03 20:25:20,954 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-10] Response 200 OK
2023-08-03 20:25:20,954 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-10] Reading to [java.lang.Object]
2023-08-03 20:25:20,973 INFO ru.practicum.shareit.item.ItemController [http-nio-8080-exec-1] Request from user ID: 4 on get item. ID: 100
2023-08-03 20:25:20,973 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-1] HTTP GET http://localhost:9090/items/100
2023-08-03 20:25:20,974 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-1] Accept=[application/json, application/*+json]
2023-08-03 20:25:20,976 INFO ru.practicum.item.ItemController [http-nio-9090-exec-4] Запрос от идентификатора пользователя: 4 при получении элемента. Идентификатор: 100
2023-08-03 20:25:20,976 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-4] Setting JDBC Connection [HikariProxyConnection@309266687 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST] read-only
2023-08-03 20:25:20,977 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-4] Resetting read-only flag of JDBC Connection [HikariProxyConnection@309266687 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST]
2023-08-03 20:25:20,978 INFO ru.practicum.ErrorHandler [http-nio-9090-exec-4] Not found: Вещь не найдена
2023-08-03 20:25:20,979 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-1] Response 404 NOT_FOUND
2023-08-03 20:25:21,000 INFO ru.practicum.shareit.item.ItemController [http-nio-8080-exec-2] Request on add ItemDto(id=0, name=Отвертка, description=Аккумуляторная отвертка, available=true, requestId=null), user id: 4
2023-08-03 20:25:21,001 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-2] HTTP POST http://localhost:9090/items
2023-08-03 20:25:21,001 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-2] Accept=[application/json, application/*+json]
2023-08-03 20:25:21,001 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-2] Writing [ItemDto(id=0, name=Отвертка, description=Аккумуляторная отвертка, available=true, requestId=null)] as "application/json"
2023-08-03 20:25:21,003 INFO ru.practicum.item.ItemController [http-nio-9090-exec-5] Запрос на добавление ItemDto(id=0, name=Отвертка, description=Аккумуляторная отвертка, available=true, requestId=null), идентификатор пользователя: 4
2023-08-03 20:25:21,008 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-2] Response 200 OK
2023-08-03 20:25:21,008 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-2] Reading to [java.lang.Object]
2023-08-03 20:25:21,027 INFO ru.practicum.shareit.item.ItemController [http-nio-8080-exec-3] Request on add ItemDto(id=0, name=Клей Момент, description=Тюбик суперклея марки Момент, available=true, requestId=null), user id: 4
2023-08-03 20:25:21,027 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-3] HTTP POST http://localhost:9090/items
2023-08-03 20:25:21,027 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-3] Accept=[application/json, application/*+json]
2023-08-03 20:25:21,028 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-3] Writing [ItemDto(id=0, name=Клей Момент, description=Тюбик суперклея марки Момент, available=true, requestId=null)] as "application/json"
2023-08-03 20:25:21,030 INFO ru.practicum.item.ItemController [http-nio-9090-exec-6] Запрос на добавление ItemDto(id=0, name=Клей Момент, description=Тюбик суперклея марки Момент, available=true, requestId=null), идентификатор пользователя: 4
2023-08-03 20:25:21,035 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-3] Response 200 OK
2023-08-03 20:25:21,035 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-3] Reading to [java.lang.Object]
2023-08-03 20:25:21,062 INFO ru.practicum.shareit.item.ItemController [http-nio-8080-exec-4] Request on get all for user id: 1
2023-08-03 20:25:21,063 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-4] HTTP GET http://localhost:9090/items?from=0&size=20
2023-08-03 20:25:21,064 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-4] Accept=[application/json, application/*+json]
2023-08-03 20:25:21,069 INFO ru.practicum.item.ItemController [http-nio-9090-exec-7] Запрос на получение всего для идентификатора пользователя: 1
2023-08-03 20:25:21,069 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-7] Setting JDBC Connection [HikariProxyConnection@1663042752 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST] read-only
2023-08-03 20:25:21,070 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-7] Resetting read-only flag of JDBC Connection [HikariProxyConnection@1663042752 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST]
2023-08-03 20:25:21,095 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-4] Response 200 OK
2023-08-03 20:25:21,095 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-4] Reading to [java.lang.Object]
2023-08-03 20:25:21,117 INFO ru.practicum.shareit.item.ItemController [http-nio-8080-exec-5] Request on get all for user id: 4
2023-08-03 20:25:21,118 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-5] HTTP GET http://localhost:9090/items?from=0&size=20
2023-08-03 20:25:21,118 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-5] Accept=[application/json, application/*+json]
2023-08-03 20:25:21,120 INFO ru.practicum.item.ItemController [http-nio-9090-exec-8] Запрос на получение всего для идентификатора пользователя: 4
2023-08-03 20:25:21,121 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-8] Setting JDBC Connection [HikariProxyConnection@1544190466 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST] read-only
2023-08-03 20:25:21,122 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-8] Resetting read-only flag of JDBC Connection [HikariProxyConnection@1544190466 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST]
2023-08-03 20:25:21,133 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-5] Response 200 OK
2023-08-03 20:25:21,133 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-5] Reading to [java.lang.Object]
2023-08-03 20:25:21,159 INFO ru.practicum.shareit.item.ItemController [http-nio-8080-exec-6] Request on search text: аккУМУляторная
2023-08-03 20:25:21,159 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-6] HTTP GET http://localhost:9090/items/search?text=%D0%B0%D0%BA%D0%BA%D1%83%D0%BC%D1%83%D0%BB%D1%8F%D1%82%D0%BE%D1%80%D0%BD%D0%B0%D1%8F&from=0&size=20
2023-08-03 20:25:21,160 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-6] Accept=[application/json, application/*+json]
2023-08-03 20:25:21,165 INFO ru.practicum.item.ItemController [http-nio-9090-exec-9] Запрос по поисковому тексту: аккумуляторная
2023-08-03 20:25:21,170 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-6] Response 200 OK
2023-08-03 20:25:21,171 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-6] Reading to [java.lang.Object]
2023-08-03 20:25:21,193 INFO ru.practicum.shareit.item.ItemController [http-nio-8080-exec-7] Request on edit item id: 2, ItemDto(id=0, name=null, description=null, available=false, requestId=null), user id: 4
2023-08-03 20:25:21,194 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-7] HTTP PATCH http://localhost:9090/items/2
2023-08-03 20:25:21,194 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-7] Accept=[application/json, application/*+json]
2023-08-03 20:25:21,194 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-7] Writing [ItemDto(id=0, name=null, description=null, available=false, requestId=null)] as "application/json"
2023-08-03 20:25:21,196 INFO ru.practicum.item.ItemController [http-nio-9090-exec-10] Запрос на редактирование идентификатора элемента: 2, ItemDto(id=0, name=null, description=null, available=false, requestId=null), идентификатор пользователя: 4
2023-08-03 20:25:21,198 INFO ru.practicum.item.ItemServiceImpl [http-nio-9090-exec-10] Обновление: ru.practicum.item.model.Item@365326ac
2023-08-03 20:25:21,199 INFO ru.practicum.item.ItemServiceImpl [http-nio-9090-exec-10] Доступность обновлена
2023-08-03 20:25:21,201 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-7] Response 200 OK
2023-08-03 20:25:21,201 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-7] Reading to [java.lang.Object]
2023-08-03 20:25:21,222 INFO ru.practicum.shareit.item.ItemController [http-nio-8080-exec-8] Request on search text: дРелЬ
2023-08-03 20:25:21,223 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-8] HTTP GET http://localhost:9090/items/search?text=%D0%B4%D1%80%D0%B5%D0%BB%D1%8C&from=0&size=20
2023-08-03 20:25:21,223 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-8] Accept=[application/json, application/*+json]
2023-08-03 20:25:21,225 INFO ru.practicum.item.ItemController [http-nio-9090-exec-1] Запрос по поисковому тексту: дрель
2023-08-03 20:25:21,227 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-8] Response 200 OK
2023-08-03 20:25:21,228 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-8] Reading to [java.lang.Object]
2023-08-03 20:25:21,251 INFO ru.practicum.shareit.item.ItemController [http-nio-8080-exec-9] Request on search text: аккУМУляторная
2023-08-03 20:25:21,252 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-9] HTTP GET http://localhost:9090/items/search?text=%D0%B0%D0%BA%D0%BA%D1%83%D0%BC%D1%83%D0%BB%D1%8F%D1%82%D0%BE%D1%80%D0%BD%D0%B0%D1%8F&from=0&size=20
2023-08-03 20:25:21,252 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-9] Accept=[application/json, application/*+json]
2023-08-03 20:25:21,255 INFO ru.practicum.item.ItemController [http-nio-9090-exec-2] Запрос по поисковому тексту: аккумуляторная
2023-08-03 20:25:21,260 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-9] Response 200 OK
2023-08-03 20:25:21,261 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-9] Reading to [java.lang.Object]
2023-08-03 20:25:21,281 INFO ru.practicum.shareit.item.ItemController [http-nio-8080-exec-10] Request on edit item id: 2, ItemDto(id=0, name=null, description=null, available=true, requestId=null), user id: 4
2023-08-03 20:25:21,282 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-10] HTTP PATCH http://localhost:9090/items/2
2023-08-03 20:25:21,282 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-10] Accept=[application/json, application/*+json]
2023-08-03 20:25:21,283 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-10] Writing [ItemDto(id=0, name=null, description=null, available=true, requestId=null)] as "application/json"
2023-08-03 20:25:21,285 INFO ru.practicum.item.ItemController [http-nio-9090-exec-3] Запрос на редактирование идентификатора элемента: 2, ItemDto(id=0, name=null, description=null, available=true, requestId=null), идентификатор пользователя: 4
2023-08-03 20:25:21,287 INFO ru.practicum.item.ItemServiceImpl [http-nio-9090-exec-3] Обновление: ru.practicum.item.model.Item@374b2cf3
2023-08-03 20:25:21,287 INFO ru.practicum.item.ItemServiceImpl [http-nio-9090-exec-3] Доступность обновлена
2023-08-03 20:25:21,289 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-10] Response 200 OK
2023-08-03 20:25:21,290 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-10] Reading to [java.lang.Object]
2023-08-03 20:25:21,313 INFO ru.practicum.shareit.item.ItemController [http-nio-8080-exec-1] Request on search text: оТверТ
2023-08-03 20:25:21,314 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-1] HTTP GET http://localhost:9090/items/search?text=%D0%BE%D1%82%D0%B2%D0%B5%D1%80%D1%82&from=0&size=20
2023-08-03 20:25:21,314 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-1] Accept=[application/json, application/*+json]
2023-08-03 20:25:21,316 INFO ru.practicum.item.ItemController [http-nio-9090-exec-4] Запрос по поисковому тексту: отверт
2023-08-03 20:25:21,320 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-1] Response 200 OK
2023-08-03 20:25:21,321 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-1] Reading to [java.lang.Object]
2023-08-03 20:25:21,346 INFO ru.practicum.shareit.item.ItemController [http-nio-8080-exec-2] Request on search text: 
2023-08-03 20:25:21,367 INFO ru.practicum.shareit.item.ItemController [http-nio-8080-exec-3] Request on edit item id: 2, ItemDto(id=0, name=null, description=null, available=false, requestId=null), user id: 4
2023-08-03 20:25:21,367 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-3] HTTP PATCH http://localhost:9090/items/2
2023-08-03 20:25:21,368 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-3] Accept=[application/json, application/*+json]
2023-08-03 20:25:21,368 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-3] Writing [ItemDto(id=0, name=null, description=null, available=false, requestId=null)] as "application/json"
2023-08-03 20:25:21,370 INFO ru.practicum.item.ItemController [http-nio-9090-exec-5] Запрос на редактирование идентификатора элемента: 2, ItemDto(id=0, name=null, description=null, available=false, requestId=null), идентификатор пользователя: 4
2023-08-03 20:25:21,371 INFO ru.practicum.item.ItemServiceImpl [http-nio-9090-exec-5] Обновление: ru.practicum.item.model.Item@4b04fe81
2023-08-03 20:25:21,371 INFO ru.practicum.item.ItemServiceImpl [http-nio-9090-exec-5] Доступность обновлена
2023-08-03 20:25:21,373 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-3] Response 200 OK
2023-08-03 20:25:21,374 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-3] Reading to [java.lang.Object]
2023-08-03 20:25:21,436 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-4] HTTP POST http://localhost:9090/bookings
2023-08-03 20:25:21,437 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-4] Accept=[application/json, application/*+json]
2023-08-03 20:25:21,442 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-4] Writing [BookingDto(id=0, itemId=2, start=2023-08-04T20:25:21, end=2023-08-05T20:25:21, status=null, booker=null)] as "application/json"
2023-08-03 20:25:21,459 INFO ru.practicum.ErrorHandler [http-nio-9090-exec-6] Not available: Элемент с идентификатором: 2 недоступен
2023-08-03 20:25:21,460 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-4] Response 400 BAD_REQUEST
2023-08-03 20:25:21,481 INFO ru.practicum.shareit.item.ItemController [http-nio-8080-exec-6] Request on edit item id: 2, ItemDto(id=0, name=null, description=null, available=true, requestId=null), user id: 4
2023-08-03 20:25:21,482 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-6] HTTP PATCH http://localhost:9090/items/2
2023-08-03 20:25:21,482 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-6] Accept=[application/json, application/*+json]
2023-08-03 20:25:21,483 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-6] Writing [ItemDto(id=0, name=null, description=null, available=true, requestId=null)] as "application/json"
2023-08-03 20:25:21,486 INFO ru.practicum.item.ItemController [http-nio-9090-exec-7] Запрос на редактирование идентификатора элемента: 2, ItemDto(id=0, name=null, description=null, available=true, requestId=null), идентификатор пользователя: 4
2023-08-03 20:25:21,488 INFO ru.practicum.item.ItemServiceImpl [http-nio-9090-exec-7] Обновление: ru.practicum.item.model.Item@4aacd162
2023-08-03 20:25:21,489 INFO ru.practicum.item.ItemServiceImpl [http-nio-9090-exec-7] Доступность обновлена
2023-08-03 20:25:21,492 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-6] Response 200 OK
2023-08-03 20:25:21,493 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-6] Reading to [java.lang.Object]
2023-08-03 20:25:21,520 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-7] HTTP POST http://localhost:9090/bookings
2023-08-03 20:25:21,520 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-7] Accept=[application/json, application/*+json]
2023-08-03 20:25:21,520 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-7] Writing [BookingDto(id=0, itemId=2, start=2023-08-04T20:25:21, end=2023-08-05T20:25:21, status=null, booker=null)] as "application/json"
2023-08-03 20:25:21,525 INFO ru.practicum.ErrorHandler [http-nio-9090-exec-8] Not found: User with ID: 100 not found
2023-08-03 20:25:21,527 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-7] Response 404 NOT_FOUND
2023-08-03 20:25:21,551 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-8] HTTP POST http://localhost:9090/bookings
2023-08-03 20:25:21,552 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-8] Accept=[application/json, application/*+json]
2023-08-03 20:25:21,552 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-8] Writing [BookingDto(id=0, itemId=200, start=2023-08-04T20:25:21, end=2023-08-05T20:25:21, status=null, booker=null)] as "application/json"
2023-08-03 20:25:21,557 INFO ru.practicum.ErrorHandler [http-nio-9090-exec-9] Not found: Элемент с идентификатором:200 не найден
2023-08-03 20:25:21,558 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-8] Response 404 NOT_FOUND
2023-08-03 20:25:21,593 INFO ru.practicum.shareit.ErrorHandler [http-nio-8080-exec-9] Validation failed for field: end. Error message: должно содержать дату, которая еще не наступила
2023-08-03 20:25:21,594 INFO ru.practicum.shareit.ErrorHandler [http-nio-8080-exec-9] Validation failed for field: validDateOrder. Error message: End date must be after start date and dates cannot be equal
2023-08-03 20:25:21,616 INFO ru.practicum.shareit.ErrorHandler [http-nio-8080-exec-1] Validation failed for field: validDateOrder. Error message: End date must be after start date and dates cannot be equal
2023-08-03 20:25:21,639 INFO ru.practicum.shareit.ErrorHandler [http-nio-8080-exec-3] Validation failed for field: validDateOrder. Error message: End date must be after start date and dates cannot be equal
2023-08-03 20:25:21,661 INFO ru.practicum.shareit.ErrorHandler [http-nio-8080-exec-5] Validation failed for field: start. Error message: не должно равняться null
2023-08-03 20:25:21,661 INFO ru.practicum.shareit.ErrorHandler [http-nio-8080-exec-5] Validation failed for field: validDateOrder. Error message: End date must be after start date and dates cannot be equal
2023-08-03 20:25:21,687 INFO ru.practicum.shareit.ErrorHandler [http-nio-8080-exec-7] Validation failed for field: end. Error message: не должно равняться null
2023-08-03 20:25:21,688 INFO ru.practicum.shareit.ErrorHandler [http-nio-8080-exec-7] Validation failed for field: validDateOrder. Error message: End date must be after start date and dates cannot be equal
2023-08-03 20:25:21,713 INFO ru.practicum.shareit.ErrorHandler [http-nio-8080-exec-9] Validation failed for field: start. Error message: должно содержать сегодняшнее число или дату, которая еще не наступила
2023-08-03 20:25:21,735 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-1] HTTP POST http://localhost:9090/bookings
2023-08-03 20:25:21,736 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-1] Accept=[application/json, application/*+json]
2023-08-03 20:25:21,736 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-1] Writing [BookingDto(id=0, itemId=2, start=2023-08-03T20:25:24, end=2023-08-03T20:25:25, status=null, booker=null)] as "application/json"
2023-08-03 20:25:21,749 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-1] Response 200 OK
2023-08-03 20:25:21,749 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-1] Reading to [java.lang.Object]
2023-08-03 20:25:21,772 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-2] HTTP PATCH http://localhost:9090/bookings/1?approved=true
2023-08-03 20:25:21,773 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-2] Accept=[application/json, application/*+json]
2023-08-03 20:25:21,782 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-2] Response 200 OK
2023-08-03 20:25:21,782 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-2] Reading to [java.lang.Object]
2023-08-03 20:25:21,806 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-3] HTTP POST http://localhost:9090/bookings
2023-08-03 20:25:21,807 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-3] Accept=[application/json, application/*+json]
2023-08-03 20:25:21,807 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-3] Writing [BookingDto(id=0, itemId=2, start=2023-08-04T20:25:21, end=2023-08-05T20:25:21, status=null, booker=null)] as "application/json"
2023-08-03 20:25:21,813 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-3] Response 200 OK
2023-08-03 20:25:21,813 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-3] Reading to [java.lang.Object]
2023-08-03 20:25:21,839 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-4] HTTP GET http://localhost:9090/bookings/2
2023-08-03 20:25:21,840 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-4] Accept=[application/json, application/*+json]
2023-08-03 20:25:21,842 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-3] Setting JDBC Connection [HikariProxyConnection@1844456126 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST] read-only
2023-08-03 20:25:21,843 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-3] Resetting read-only flag of JDBC Connection [HikariProxyConnection@1844456126 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST]
2023-08-03 20:25:21,844 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-3] Setting JDBC Connection [HikariProxyConnection@1844456126 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST] read-only
2023-08-03 20:25:21,844 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-3] Resetting read-only flag of JDBC Connection [HikariProxyConnection@1844456126 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST]
2023-08-03 20:25:21,846 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-4] Response 200 OK
2023-08-03 20:25:21,846 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-4] Reading to [java.lang.Object]
2023-08-03 20:25:21,867 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-5] HTTP GET http://localhost:9090/bookings/2
2023-08-03 20:25:21,867 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-5] Accept=[application/json, application/*+json]
2023-08-03 20:25:21,869 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-4] Setting JDBC Connection [HikariProxyConnection@1150062652 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST] read-only
2023-08-03 20:25:21,871 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-4] Resetting read-only flag of JDBC Connection [HikariProxyConnection@1150062652 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST]
2023-08-03 20:25:21,871 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-4] Setting JDBC Connection [HikariProxyConnection@1150062652 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST] read-only
2023-08-03 20:25:21,872 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-4] Resetting read-only flag of JDBC Connection [HikariProxyConnection@1150062652 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST]
2023-08-03 20:25:21,874 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-5] Response 200 OK
2023-08-03 20:25:21,874 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-5] Reading to [java.lang.Object]
2023-08-03 20:25:21,900 INFO ru.practicum.shareit.booking.BookingController [http-nio-8080-exec-6] Get booking with state ALL, userId=100, from=0, size=20
2023-08-03 20:25:21,900 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-6] HTTP GET http://localhost:9090/bookings?state=ALL&from=0&size=20
2023-08-03 20:25:21,900 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-6] Accept=[application/json, application/*+json]
2023-08-03 20:25:21,904 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-5] Setting JDBC Connection [HikariProxyConnection@1640801108 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST] read-only
2023-08-03 20:25:21,905 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-5] Resetting read-only flag of JDBC Connection [HikariProxyConnection@1640801108 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST]
2023-08-03 20:25:21,905 INFO ru.practicum.ErrorHandler [http-nio-9090-exec-5] Not found: User with ID: 100 not found
2023-08-03 20:25:21,906 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-6] Response 404 NOT_FOUND
2023-08-03 20:25:21,926 INFO ru.practicum.shareit.booking.BookingController [http-nio-8080-exec-7] Get booking with state ALL, userId=100, from=0, size=20
2023-08-03 20:25:21,927 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-7] HTTP GET http://localhost:9090/bookings/owner?state=ALL&from=0&size=20
2023-08-03 20:25:21,927 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-7] Accept=[application/json, application/*+json]
2023-08-03 20:25:21,929 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-6] Setting JDBC Connection [HikariProxyConnection@645300350 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST] read-only
2023-08-03 20:25:21,930 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-6] Resetting read-only flag of JDBC Connection [HikariProxyConnection@645300350 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST]
2023-08-03 20:25:21,930 INFO ru.practicum.ErrorHandler [http-nio-9090-exec-6] Not found: User with ID: 100 not found
2023-08-03 20:25:21,931 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-7] Response 404 NOT_FOUND
2023-08-03 20:25:21,950 INFO ru.practicum.shareit.booking.BookingController [http-nio-8080-exec-8] Get booking with state ALL, userId=1, from=0, size=20
2023-08-03 20:25:21,951 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-8] HTTP GET http://localhost:9090/bookings?state=ALL&from=0&size=20
2023-08-03 20:25:21,952 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-8] Accept=[application/json, application/*+json]
2023-08-03 20:25:21,954 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-7] Setting JDBC Connection [HikariProxyConnection@684353580 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST] read-only
2023-08-03 20:25:21,954 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-7] Resetting read-only flag of JDBC Connection [HikariProxyConnection@684353580 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST]
2023-08-03 20:25:21,961 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-8] Response 200 OK
2023-08-03 20:25:21,961 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-8] Reading to [java.lang.Object]
2023-08-03 20:25:21,982 INFO ru.practicum.shareit.booking.BookingController [http-nio-8080-exec-9] Get booking with state ALL, userId=1, from=0, size=20
2023-08-03 20:25:21,982 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-9] HTTP GET http://localhost:9090/bookings?state=ALL&from=0&size=20
2023-08-03 20:25:21,983 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-9] Accept=[application/json, application/*+json]
2023-08-03 20:25:21,984 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-8] Setting JDBC Connection [HikariProxyConnection@1552652374 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST] read-only
2023-08-03 20:25:21,985 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-8] Resetting read-only flag of JDBC Connection [HikariProxyConnection@1552652374 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST]
2023-08-03 20:25:21,987 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-9] Response 200 OK
2023-08-03 20:25:21,988 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-9] Reading to [java.lang.Object]
2023-08-03 20:25:22,017 INFO ru.practicum.shareit.booking.BookingController [http-nio-8080-exec-10] Get booking with state FUTURE, userId=1, from=0, size=20
2023-08-03 20:25:22,018 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-10] HTTP GET http://localhost:9090/bookings?state=FUTURE&from=0&size=20
2023-08-03 20:25:22,018 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-10] Accept=[application/json, application/*+json]
2023-08-03 20:25:22,020 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-9] Setting JDBC Connection [HikariProxyConnection@1804370484 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST] read-only
2023-08-03 20:25:22,021 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-9] Resetting read-only flag of JDBC Connection [HikariProxyConnection@1804370484 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST]
2023-08-03 20:25:22,026 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-10] Response 200 OK
2023-08-03 20:25:22,026 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-10] Reading to [java.lang.Object]
2023-08-03 20:25:22,053 INFO ru.practicum.shareit.ErrorHandler [http-nio-8080-exec-1] Bad booking state: Неизвестное состояние: UNSUPPORTED_STATUS
2023-08-03 20:25:22,075 INFO ru.practicum.shareit.booking.BookingController [http-nio-8080-exec-3] Get booking with state ALL, userId=4, from=0, size=20
2023-08-03 20:25:22,076 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-3] HTTP GET http://localhost:9090/bookings/owner?state=ALL&from=0&size=20
2023-08-03 20:25:22,076 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-3] Accept=[application/json, application/*+json]
2023-08-03 20:25:22,078 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-10] Setting JDBC Connection [HikariProxyConnection@1033287500 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST] read-only
2023-08-03 20:25:22,079 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-10] Resetting read-only flag of JDBC Connection [HikariProxyConnection@1033287500 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST]
2023-08-03 20:25:22,082 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-3] Response 200 OK
2023-08-03 20:25:22,082 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-3] Reading to [java.lang.Object]
2023-08-03 20:25:22,105 INFO ru.practicum.shareit.booking.BookingController [http-nio-8080-exec-4] Get booking with state ALL, userId=4, from=0, size=20
2023-08-03 20:25:22,105 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-4] HTTP GET http://localhost:9090/bookings/owner?state=ALL&from=0&size=20
2023-08-03 20:25:22,105 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-4] Accept=[application/json, application/*+json]
2023-08-03 20:25:22,107 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-1] Setting JDBC Connection [HikariProxyConnection@1174238457 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST] read-only
2023-08-03 20:25:22,108 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-1] Resetting read-only flag of JDBC Connection [HikariProxyConnection@1174238457 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST]
2023-08-03 20:25:22,111 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-4] Response 200 OK
2023-08-03 20:25:22,112 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-4] Reading to [java.lang.Object]
2023-08-03 20:25:22,135 INFO ru.practicum.shareit.booking.BookingController [http-nio-8080-exec-5] Get booking with state FUTURE, userId=4, from=0, size=20
2023-08-03 20:25:22,135 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-5] HTTP GET http://localhost:9090/bookings/owner?state=FUTURE&from=0&size=20
2023-08-03 20:25:22,135 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-5] Accept=[application/json, application/*+json]
2023-08-03 20:25:22,137 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-2] Setting JDBC Connection [HikariProxyConnection@1048038837 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST] read-only
2023-08-03 20:25:22,138 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-2] Resetting read-only flag of JDBC Connection [HikariProxyConnection@1048038837 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST]
2023-08-03 20:25:22,142 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-5] Response 200 OK
2023-08-03 20:25:22,142 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-5] Reading to [java.lang.Object]
2023-08-03 20:25:22,165 INFO ru.practicum.shareit.ErrorHandler [http-nio-8080-exec-6] Bad booking state: Неизвестное состояние: UNSUPPORTED_STATUS
2023-08-03 20:25:22,184 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-8] HTTP GET http://localhost:9090/bookings/1000
2023-08-03 20:25:22,184 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-8] Accept=[application/json, application/*+json]
2023-08-03 20:25:22,186 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-3] Setting JDBC Connection [HikariProxyConnection@9373143 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST] read-only
2023-08-03 20:25:22,186 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-3] Resetting read-only flag of JDBC Connection [HikariProxyConnection@9373143 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST]
2023-08-03 20:25:22,187 INFO ru.practicum.ErrorHandler [http-nio-9090-exec-3] Not found: Бронирование: 1 000 не найдено
2023-08-03 20:25:22,188 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-8] Response 404 NOT_FOUND
2023-08-03 20:25:22,213 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-9] HTTP POST http://localhost:9090/users
2023-08-03 20:25:22,214 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-9] Accept=[application/json, application/*+json]
2023-08-03 20:25:22,214 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-9] Writing [UserDto(id=0, email=other@other.com, name=other)] as "application/json"
2023-08-03 20:25:22,224 INFO ru.practicum.user.UserController [http-nio-9090-exec-4] Было создано: ru.practicum.user.model.User@4d41c9ef
2023-08-03 20:25:22,226 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-9] Response 201 CREATED
2023-08-03 20:25:22,226 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-9] Reading to [java.lang.Object]
2023-08-03 20:25:22,259 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-10] HTTP GET http://localhost:9090/bookings/1
2023-08-03 20:25:22,259 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-10] Accept=[application/json, application/*+json]
2023-08-03 20:25:22,261 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-5] Setting JDBC Connection [HikariProxyConnection@1625264116 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST] read-only
2023-08-03 20:25:22,262 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-5] Resetting read-only flag of JDBC Connection [HikariProxyConnection@1625264116 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST]
2023-08-03 20:25:22,263 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-5] Setting JDBC Connection [HikariProxyConnection@1625264116 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST] read-only
2023-08-03 20:25:22,264 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-5] Resetting read-only flag of JDBC Connection [HikariProxyConnection@1625264116 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST]
2023-08-03 20:25:22,265 INFO ru.practicum.ErrorHandler [http-nio-9090-exec-5] Not found: User with id: 5 do not have available
2023-08-03 20:25:22,266 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-10] Response 404 NOT_FOUND
2023-08-03 20:25:22,288 INFO ru.practicum.shareit.ErrorHandler [http-nio-8080-exec-1] Server error Required request parameter 'approved' for method parameter type Boolean is not present
2023-08-03 20:25:22,307 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-3] HTTP PATCH http://localhost:9090/bookings/2?approved=true
2023-08-03 20:25:22,307 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-3] Accept=[application/json, application/*+json]
2023-08-03 20:25:22,310 INFO ru.practicum.ErrorHandler [http-nio-9090-exec-6] Not found: User with id: 1 do not have available
2023-08-03 20:25:22,312 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-3] Response 404 NOT_FOUND
2023-08-03 20:25:22,334 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-4] HTTP PATCH http://localhost:9090/bookings/2?approved=true
2023-08-03 20:25:22,334 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-4] Accept=[application/json, application/*+json]
2023-08-03 20:25:22,342 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-4] Response 200 OK
2023-08-03 20:25:22,343 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-4] Reading to [java.lang.Object]
2023-08-03 20:25:22,363 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-5] HTTP PATCH http://localhost:9090/bookings/2?approved=true
2023-08-03 20:25:22,363 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-5] Accept=[application/json, application/*+json]
2023-08-03 20:25:22,366 INFO ru.practicum.ErrorHandler [http-nio-9090-exec-8] Not available: Рассмотрение
2023-08-03 20:25:22,367 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-5] Response 400 BAD_REQUEST
2023-08-03 20:25:22,389 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-7] HTTP POST http://localhost:9090/users
2023-08-03 20:25:22,389 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-7] Accept=[application/json, application/*+json]
2023-08-03 20:25:22,390 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-7] Writing [UserDto(id=0, email=practicum@yandex.ru, name=practicum)] as "application/json"
2023-08-03 20:25:22,392 INFO ru.practicum.user.UserController [http-nio-9090-exec-9] Было создано: ru.practicum.user.model.User@132ef8e6
2023-08-03 20:25:22,393 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-7] Response 201 CREATED
2023-08-03 20:25:22,394 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-7] Reading to [java.lang.Object]
2023-08-03 20:25:22,422 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-8] HTTP POST http://localhost:9090/bookings
2023-08-03 20:25:22,423 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-8] Accept=[application/json, application/*+json]
2023-08-03 20:25:22,424 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-8] Writing [BookingDto(id=0, itemId=1, start=2023-08-05T20:25:22, end=2023-08-06T20:25:22, status=null, booker=null)] as "application/json"
2023-08-03 20:25:22,431 INFO ru.practicum.ErrorHandler [http-nio-9090-exec-10] Not found: Ты владелец
2023-08-03 20:25:22,432 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-8] Response 404 NOT_FOUND
2023-08-03 20:25:22,456 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-9] HTTP POST http://localhost:9090/bookings
2023-08-03 20:25:22,456 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-9] Accept=[application/json, application/*+json]
2023-08-03 20:25:22,456 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-9] Writing [BookingDto(id=0, itemId=1, start=2023-08-04T20:25:22, end=2023-08-04T21:25:22, status=null, booker=null)] as "application/json"
2023-08-03 20:25:22,462 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-9] Response 200 OK
2023-08-03 20:25:22,462 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-9] Reading to [java.lang.Object]
2023-08-03 20:25:22,483 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-10] HTTP PATCH http://localhost:9090/bookings/3?approved=false
2023-08-03 20:25:22,483 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-10] Accept=[application/json, application/*+json]
2023-08-03 20:25:22,488 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-10] Response 200 OK
2023-08-03 20:25:22,488 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-10] Reading to [java.lang.Object]
2023-08-03 20:25:22,515 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-1] HTTP POST http://localhost:9090/bookings
2023-08-03 20:25:22,516 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-1] Accept=[application/json, application/*+json]
2023-08-03 20:25:22,516 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-1] Writing [BookingDto(id=0, itemId=2, start=2023-08-03T21:25:22, end=2023-08-03T22:25:22, status=null, booker=null)] as "application/json"
2023-08-03 20:25:22,521 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-1] Response 200 OK
2023-08-03 20:25:22,521 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-1] Reading to [java.lang.Object]
2023-08-03 20:25:22,545 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-2] HTTP PATCH http://localhost:9090/bookings/4?approved=true
2023-08-03 20:25:22,546 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-2] Accept=[application/json, application/*+json]
2023-08-03 20:25:22,551 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-2] Response 200 OK
2023-08-03 20:25:22,552 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-2] Reading to [java.lang.Object]
2023-08-03 20:25:26,576 INFO ru.practicum.shareit.item.ItemController [http-nio-8080-exec-3] Request from user ID: 4 on get item. ID: 2
2023-08-03 20:25:26,576 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-3] HTTP GET http://localhost:9090/items/2
2023-08-03 20:25:26,576 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-3] Accept=[application/json, application/*+json]
2023-08-03 20:25:26,579 INFO ru.practicum.item.ItemController [http-nio-9090-exec-5] Запрос от идентификатора пользователя: 4 при получении элемента. Идентификатор: 2
2023-08-03 20:25:26,580 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-5] Setting JDBC Connection [HikariProxyConnection@1132812905 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST] read-only
2023-08-03 20:25:26,581 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-5] Resetting read-only flag of JDBC Connection [HikariProxyConnection@1132812905 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST]
2023-08-03 20:25:26,587 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-3] Response 200 OK
2023-08-03 20:25:26,588 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-3] Reading to [java.lang.Object]
2023-08-03 20:25:26,608 INFO ru.practicum.shareit.item.ItemController [http-nio-8080-exec-4] Request from user ID: 1 on get item. ID: 2
2023-08-03 20:25:26,608 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-4] HTTP GET http://localhost:9090/items/2
2023-08-03 20:25:26,608 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-4] Accept=[application/json, application/*+json]
2023-08-03 20:25:26,610 INFO ru.practicum.item.ItemController [http-nio-9090-exec-6] Запрос от идентификатора пользователя: 1 при получении элемента. Идентификатор: 2
2023-08-03 20:25:26,611 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-6] Setting JDBC Connection [HikariProxyConnection@971546885 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST] read-only
2023-08-03 20:25:26,612 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-6] Resetting read-only flag of JDBC Connection [HikariProxyConnection@971546885 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST]
2023-08-03 20:25:26,614 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-4] Response 200 OK
2023-08-03 20:25:26,615 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-4] Reading to [java.lang.Object]
2023-08-03 20:25:26,637 INFO ru.practicum.shareit.item.ItemController [http-nio-8080-exec-5] Request from user ID: 5 on get item. ID: 2
2023-08-03 20:25:26,637 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-5] HTTP GET http://localhost:9090/items/2
2023-08-03 20:25:26,637 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-5] Accept=[application/json, application/*+json]
2023-08-03 20:25:26,639 INFO ru.practicum.item.ItemController [http-nio-9090-exec-7] Запрос от идентификатора пользователя: 5 при получении элемента. Идентификатор: 2
2023-08-03 20:25:26,639 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-7] Setting JDBC Connection [HikariProxyConnection@347167898 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST] read-only
2023-08-03 20:25:26,640 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-7] Resetting read-only flag of JDBC Connection [HikariProxyConnection@347167898 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST]
2023-08-03 20:25:26,641 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-5] Response 200 OK
2023-08-03 20:25:26,642 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-5] Reading to [java.lang.Object]
2023-08-03 20:25:26,661 INFO ru.practicum.shareit.item.ItemController [http-nio-8080-exec-6] Request on get all for user id: 4
2023-08-03 20:25:26,661 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-6] HTTP GET http://localhost:9090/items?from=0&size=20
2023-08-03 20:25:26,662 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-6] Accept=[application/json, application/*+json]
2023-08-03 20:25:26,663 INFO ru.practicum.item.ItemController [http-nio-9090-exec-8] Запрос на получение всего для идентификатора пользователя: 4
2023-08-03 20:25:26,663 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-8] Setting JDBC Connection [HikariProxyConnection@425171268 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST] read-only
2023-08-03 20:25:26,664 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-8] Resetting read-only flag of JDBC Connection [HikariProxyConnection@425171268 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST]
2023-08-03 20:25:26,670 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-6] Response 200 OK
2023-08-03 20:25:26,670 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-6] Reading to [java.lang.Object]
2023-08-03 20:25:26,696 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-7] HTTP POST http://localhost:9090/bookings
2023-08-03 20:25:26,697 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-7] Accept=[application/json, application/*+json]
2023-08-03 20:25:26,697 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-7] Writing [BookingDto(id=0, itemId=3, start=2023-08-03T20:25:29, end=2023-08-04T20:25:26, status=null, booker=null)] as "application/json"
2023-08-03 20:25:26,704 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-7] Response 200 OK
2023-08-03 20:25:26,704 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-7] Reading to [java.lang.Object]
2023-08-03 20:25:26,728 INFO ru.practicum.shareit.booking.BookingController [http-nio-8080-exec-8] Get booking with state WAITING, userId=1, from=0, size=20
2023-08-03 20:25:26,728 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-8] HTTP GET http://localhost:9090/bookings?state=WAITING&from=0&size=20
2023-08-03 20:25:26,728 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-8] Accept=[application/json, application/*+json]
2023-08-03 20:25:26,731 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-10] Setting JDBC Connection [HikariProxyConnection@351355702 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST] read-only
2023-08-03 20:25:26,732 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-10] Resetting read-only flag of JDBC Connection [HikariProxyConnection@351355702 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST]
2023-08-03 20:25:26,736 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-8] Response 200 OK
2023-08-03 20:25:26,736 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-8] Reading to [java.lang.Object]
2023-08-03 20:25:26,760 INFO ru.practicum.shareit.booking.BookingController [http-nio-8080-exec-9] Get booking with state WAITING, userId=4, from=0, size=20
2023-08-03 20:25:26,760 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-9] HTTP GET http://localhost:9090/bookings/owner?state=WAITING&from=0&size=20
2023-08-03 20:25:26,761 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-9] Accept=[application/json, application/*+json]
2023-08-03 20:25:26,762 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-1] Setting JDBC Connection [HikariProxyConnection@486886074 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST] read-only
2023-08-03 20:25:26,763 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-1] Resetting read-only flag of JDBC Connection [HikariProxyConnection@486886074 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST]
2023-08-03 20:25:26,767 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-9] Response 200 OK
2023-08-03 20:25:26,768 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-9] Reading to [java.lang.Object]
2023-08-03 20:25:26,793 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-10] HTTP POST http://localhost:9090/bookings
2023-08-03 20:25:26,793 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-10] Accept=[application/json, application/*+json]
2023-08-03 20:25:26,794 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-10] Writing [BookingDto(id=0, itemId=2, start=2023-08-03T20:25:29, end=2023-08-03T20:25:30, status=null, booker=null)] as "application/json"
2023-08-03 20:25:26,800 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-10] Response 200 OK
2023-08-03 20:25:26,800 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-10] Reading to [java.lang.Object]
2023-08-03 20:25:26,823 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-1] HTTP PATCH http://localhost:9090/bookings/5?approved=false
2023-08-03 20:25:26,823 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-1] Accept=[application/json, application/*+json]
2023-08-03 20:25:26,828 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-1] Response 200 OK
2023-08-03 20:25:26,828 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-1] Reading to [java.lang.Object]
2023-08-03 20:25:26,852 INFO ru.practicum.shareit.booking.BookingController [http-nio-8080-exec-2] Get booking with state REJECTED, userId=1, from=0, size=20
2023-08-03 20:25:26,852 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-2] HTTP GET http://localhost:9090/bookings?state=REJECTED&from=0&size=20
2023-08-03 20:25:26,852 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-2] Accept=[application/json, application/*+json]
2023-08-03 20:25:26,854 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-4] Setting JDBC Connection [HikariProxyConnection@2041836783 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST] read-only
2023-08-03 20:25:26,855 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-4] Resetting read-only flag of JDBC Connection [HikariProxyConnection@2041836783 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST]
2023-08-03 20:25:26,857 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-2] Response 200 OK
2023-08-03 20:25:26,858 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-2] Reading to [java.lang.Object]
2023-08-03 20:25:26,880 INFO ru.practicum.shareit.booking.BookingController [http-nio-8080-exec-3] Get booking with state REJECTED, userId=4, from=0, size=20
2023-08-03 20:25:26,880 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-3] HTTP GET http://localhost:9090/bookings/owner?state=REJECTED&from=0&size=20
2023-08-03 20:25:26,880 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-3] Accept=[application/json, application/*+json]
2023-08-03 20:25:26,882 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-5] Setting JDBC Connection [HikariProxyConnection@1082007019 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST] read-only
2023-08-03 20:25:26,884 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-5] Resetting read-only flag of JDBC Connection [HikariProxyConnection@1082007019 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST]
2023-08-03 20:25:26,887 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-3] Response 200 OK
2023-08-03 20:25:26,887 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-3] Reading to [java.lang.Object]
2023-08-03 20:25:26,911 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-4] HTTP PATCH http://localhost:9090/bookings/6?approved=true
2023-08-03 20:25:26,911 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-4] Accept=[application/json, application/*+json]
2023-08-03 20:25:26,916 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-4] Response 200 OK
2023-08-03 20:25:26,916 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-4] Reading to [java.lang.Object]
2023-08-03 20:25:26,939 INFO ru.practicum.shareit.item.ItemController [http-nio-8080-exec-5] Request on add ItemDto(id=0, name=Кухонный стол, description=Стол для празднования, available=true, requestId=null), user id: 6
2023-08-03 20:25:26,939 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-5] HTTP POST http://localhost:9090/items
2023-08-03 20:25:26,939 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-5] Accept=[application/json, application/*+json]
2023-08-03 20:25:26,940 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-5] Writing [ItemDto(id=0, name=Кухонный стол, description=Стол для празднования, available=true, requestId=null)] as "application/json"
2023-08-03 20:25:26,942 INFO ru.practicum.item.ItemController [http-nio-9090-exec-7] Запрос на добавление ItemDto(id=0, name=Кухонный стол, description=Стол для празднования, available=true, requestId=null), идентификатор пользователя: 6
2023-08-03 20:25:26,945 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-5] Response 200 OK
2023-08-03 20:25:26,945 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-5] Reading to [java.lang.Object]
2023-08-03 20:25:26,965 INFO ru.practicum.shareit.item.ItemController [http-nio-8080-exec-6] Request from user ID: 1 on get item. ID: 1
2023-08-03 20:25:26,966 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-6] HTTP GET http://localhost:9090/items/1
2023-08-03 20:25:26,966 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-6] Accept=[application/json, application/*+json]
2023-08-03 20:25:26,969 INFO ru.practicum.item.ItemController [http-nio-9090-exec-8] Запрос от идентификатора пользователя: 1 при получении элемента. Идентификатор: 1
2023-08-03 20:25:26,969 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-8] Setting JDBC Connection [HikariProxyConnection@293005922 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST] read-only
2023-08-03 20:25:26,971 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-8] Resetting read-only flag of JDBC Connection [HikariProxyConnection@293005922 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST]
2023-08-03 20:25:26,976 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-6] Response 200 OK
2023-08-03 20:25:26,976 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-6] Reading to [java.lang.Object]
2023-08-03 20:25:27,002 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-7] HTTP POST http://localhost:9090/bookings
2023-08-03 20:25:27,003 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-7] Accept=[application/json, application/*+json]
2023-08-03 20:25:27,003 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-7] Writing [BookingDto(id=0, itemId=1, start=2023-08-13T20:25:26, end=2023-08-14T20:25:26, status=null, booker=null)] as "application/json"
2023-08-03 20:25:27,008 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-7] Response 200 OK
2023-08-03 20:25:27,008 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-7] Reading to [java.lang.Object]
2023-08-03 20:25:27,031 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-8] HTTP POST http://localhost:9090/bookings
2023-08-03 20:25:27,032 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-8] Accept=[application/json, application/*+json]
2023-08-03 20:25:27,032 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-8] Writing [BookingDto(id=0, itemId=4, start=2023-08-03T20:25:29, end=2023-08-03T21:25:27, status=null, booker=null)] as "application/json"
2023-08-03 20:25:27,039 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-8] Response 200 OK
2023-08-03 20:25:27,039 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-8] Reading to [java.lang.Object]
2023-08-03 20:25:27,061 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-9] HTTP PATCH http://localhost:9090/bookings/8?approved=true
2023-08-03 20:25:27,061 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-9] Accept=[application/json, application/*+json]
2023-08-03 20:25:27,066 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-9] Response 200 OK
2023-08-03 20:25:27,066 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-9] Reading to [java.lang.Object]
2023-08-03 20:25:30,086 INFO ru.practicum.shareit.item.ItemController [http-nio-8080-exec-10] Request from user ID: 1 on get item. ID: 2
2023-08-03 20:25:30,086 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-10] HTTP GET http://localhost:9090/items/2
2023-08-03 20:25:30,086 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-10] Accept=[application/json, application/*+json]
2023-08-03 20:25:30,089 INFO ru.practicum.item.ItemController [http-nio-9090-exec-2] Запрос от идентификатора пользователя: 1 при получении элемента. Идентификатор: 2
2023-08-03 20:25:30,089 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-2] Setting JDBC Connection [HikariProxyConnection@401320914 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST] read-only
2023-08-03 20:25:30,090 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-2] Resetting read-only flag of JDBC Connection [HikariProxyConnection@401320914 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST]
2023-08-03 20:25:30,091 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-10] Response 200 OK
2023-08-03 20:25:30,092 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-10] Reading to [java.lang.Object]
2023-08-03 20:25:33,113 INFO ru.practicum.shareit.item.ItemController [http-nio-8080-exec-1] Request from user ID: 4 on get item. ID: 2
2023-08-03 20:25:33,113 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-1] HTTP GET http://localhost:9090/items/2
2023-08-03 20:25:33,113 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-1] Accept=[application/json, application/*+json]
2023-08-03 20:25:33,116 INFO ru.practicum.item.ItemController [http-nio-9090-exec-3] Запрос от идентификатора пользователя: 4 при получении элемента. Идентификатор: 2
2023-08-03 20:25:33,116 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-3] Setting JDBC Connection [HikariProxyConnection@1862004015 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST] read-only
2023-08-03 20:25:33,117 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-3] Resetting read-only flag of JDBC Connection [HikariProxyConnection@1862004015 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST]
2023-08-03 20:25:33,120 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-1] Response 200 OK
2023-08-03 20:25:33,120 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-1] Reading to [java.lang.Object]
2023-08-03 20:25:33,148 INFO ru.practicum.shareit.item.ItemController [http-nio-8080-exec-2] Request on add comment Comment for item 1, item id: 1, user id: 4
2023-08-03 20:25:33,150 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-2] HTTP POST http://localhost:9090/items/1/comment
2023-08-03 20:25:33,150 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-2] Accept=[application/json, application/*+json]
2023-08-03 20:25:33,153 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-2] Writing [CommentDto(id=0, text=Comment for item 1, authorName=null, created=null)] as "application/json"
2023-08-03 20:25:33,158 INFO ru.practicum.item.ItemController [http-nio-9090-exec-4] Запрос на добавление комментария Comment for item 1, идентификатор элемента: 1, идентификатор пользователя: 4
2023-08-03 20:25:33,164 INFO ru.practicum.ErrorHandler [http-nio-9090-exec-4] Not available: Нет доступного бронирования для идентификатора пользователя: 4 и вещи: 1
2023-08-03 20:25:33,165 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-2] Response 400 BAD_REQUEST
2023-08-03 20:25:33,190 INFO ru.practicum.shareit.ErrorHandler [http-nio-8080-exec-4] Validation failed for field: text. Error message: не должно быть пустым
2023-08-03 20:25:33,215 INFO ru.practicum.shareit.item.ItemController [http-nio-8080-exec-6] Request on add comment Add comment from user1, item id: 2, user id: 1
2023-08-03 20:25:33,215 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-6] HTTP POST http://localhost:9090/items/2/comment
2023-08-03 20:25:33,216 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-6] Accept=[application/json, application/*+json]
2023-08-03 20:25:33,216 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-6] Writing [CommentDto(id=0, text=Add comment from user1, authorName=null, created=null)] as "application/json"
2023-08-03 20:25:33,218 INFO ru.practicum.item.ItemController [http-nio-9090-exec-5] Запрос на добавление комментария Add comment from user1, идентификатор элемента: 2, идентификатор пользователя: 1
2023-08-03 20:25:33,227 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-6] Response 200 OK
2023-08-03 20:25:33,228 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-6] Reading to [java.lang.Object]
2023-08-03 20:25:33,247 INFO ru.practicum.shareit.item.ItemController [http-nio-8080-exec-7] Request from user ID: 1 on get item. ID: 2
2023-08-03 20:25:33,248 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-7] HTTP GET http://localhost:9090/items/2
2023-08-03 20:25:33,248 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-7] Accept=[application/json, application/*+json]
2023-08-03 20:25:33,249 INFO ru.practicum.item.ItemController [http-nio-9090-exec-6] Запрос от идентификатора пользователя: 1 при получении элемента. Идентификатор: 2
2023-08-03 20:25:33,250 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-6] Setting JDBC Connection [HikariProxyConnection@681365438 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST] read-only
2023-08-03 20:25:33,251 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-6] Resetting read-only flag of JDBC Connection [HikariProxyConnection@681365438 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST]
2023-08-03 20:25:33,253 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-7] Response 200 OK
2023-08-03 20:25:33,253 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-7] Reading to [java.lang.Object]
2023-08-03 20:25:33,277 INFO ru.practicum.shareit.item.ItemController [http-nio-8080-exec-8] Request from user ID: 4 on get item. ID: 2
2023-08-03 20:25:33,277 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-8] HTTP GET http://localhost:9090/items/2
2023-08-03 20:25:33,278 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-8] Accept=[application/json, application/*+json]
2023-08-03 20:25:33,279 INFO ru.practicum.item.ItemController [http-nio-9090-exec-7] Запрос от идентификатора пользователя: 4 при получении элемента. Идентификатор: 2
2023-08-03 20:25:33,280 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-7] Setting JDBC Connection [HikariProxyConnection@84428827 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST] read-only
2023-08-03 20:25:33,281 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-7] Resetting read-only flag of JDBC Connection [HikariProxyConnection@84428827 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST]
2023-08-03 20:25:33,285 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-8] Response 200 OK
2023-08-03 20:25:33,285 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-8] Reading to [java.lang.Object]
2023-08-03 20:25:33,311 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-9] HTTP PATCH http://localhost:9090/bookings/7?approved=true
2023-08-03 20:25:33,311 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-9] Accept=[application/json, application/*+json]
2023-08-03 20:25:33,318 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-9] Response 200 OK
2023-08-03 20:25:33,319 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-9] Reading to [java.lang.Object]
2023-08-03 20:25:33,341 INFO ru.practicum.shareit.item.ItemController [http-nio-8080-exec-10] Request on add comment Add comment from user5, item id: 1, user id: 5
2023-08-03 20:25:33,342 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-10] HTTP POST http://localhost:9090/items/1/comment
2023-08-03 20:25:33,342 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-10] Accept=[application/json, application/*+json]
2023-08-03 20:25:33,342 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-10] Writing [CommentDto(id=0, text=Add comment from user5, authorName=null, created=null)] as "application/json"
2023-08-03 20:25:33,345 INFO ru.practicum.item.ItemController [http-nio-9090-exec-9] Запрос на добавление комментария Add comment from user5, идентификатор элемента: 1, идентификатор пользователя: 5
2023-08-03 20:25:33,350 INFO ru.practicum.ErrorHandler [http-nio-9090-exec-9] Not available: Нет доступного бронирования для идентификатора пользователя: 5 и вещи: 1
2023-08-03 20:25:33,351 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-10] Response 400 BAD_REQUEST
2023-08-03 20:25:33,377 INFO ru.practicum.shareit.booking.BookingController [http-nio-8080-exec-2] Get booking with state CURRENT, userId=1, from=0, size=20
2023-08-03 20:25:33,378 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-2] HTTP GET http://localhost:9090/bookings?state=CURRENT&from=0&size=20
2023-08-03 20:25:33,378 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-2] Accept=[application/json, application/*+json]
2023-08-03 20:25:33,380 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-10] Setting JDBC Connection [HikariProxyConnection@490010780 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST] read-only
2023-08-03 20:25:33,381 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-10] Resetting read-only flag of JDBC Connection [HikariProxyConnection@490010780 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST]
2023-08-03 20:25:33,385 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-2] Response 200 OK
2023-08-03 20:25:33,386 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-2] Reading to [java.lang.Object]
2023-08-03 20:25:33,413 INFO ru.practicum.shareit.booking.BookingController [http-nio-8080-exec-3] Get booking with state CURRENT, userId=4, from=0, size=20
2023-08-03 20:25:33,414 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-3] HTTP GET http://localhost:9090/bookings/owner?state=CURRENT&from=0&size=20
2023-08-03 20:25:33,414 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-3] Accept=[application/json, application/*+json]
2023-08-03 20:25:33,415 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-1] Setting JDBC Connection [HikariProxyConnection@1609597592 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST] read-only
2023-08-03 20:25:33,417 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-1] Resetting read-only flag of JDBC Connection [HikariProxyConnection@1609597592 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST]
2023-08-03 20:25:33,420 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-3] Response 200 OK
2023-08-03 20:25:33,421 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-3] Reading to [java.lang.Object]
2023-08-03 20:25:33,442 INFO ru.practicum.shareit.booking.BookingController [http-nio-8080-exec-4] Get booking with state PAST, userId=1, from=0, size=20
2023-08-03 20:25:33,442 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-4] HTTP GET http://localhost:9090/bookings?state=PAST&from=0&size=20
2023-08-03 20:25:33,442 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-4] Accept=[application/json, application/*+json]
2023-08-03 20:25:33,444 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-2] Setting JDBC Connection [HikariProxyConnection@889984590 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST] read-only
2023-08-03 20:25:33,445 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-2] Resetting read-only flag of JDBC Connection [HikariProxyConnection@889984590 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST]
2023-08-03 20:25:33,448 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-4] Response 200 OK
2023-08-03 20:25:33,448 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-4] Reading to [java.lang.Object]
2023-08-03 20:25:33,471 INFO ru.practicum.shareit.booking.BookingController [http-nio-8080-exec-5] Get booking with state PAST, userId=4, from=0, size=20
2023-08-03 20:25:33,471 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-5] HTTP GET http://localhost:9090/bookings/owner?state=PAST&from=0&size=20
2023-08-03 20:25:33,471 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-5] Accept=[application/json, application/*+json]
2023-08-03 20:25:33,473 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-3] Setting JDBC Connection [HikariProxyConnection@405580000 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST] read-only
2023-08-03 20:25:33,474 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-3] Resetting read-only flag of JDBC Connection [HikariProxyConnection@405580000 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST]
2023-08-03 20:25:33,477 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-5] Response 200 OK
2023-08-03 20:25:33,477 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-5] Reading to [java.lang.Object]
2023-08-03 20:25:33,502 INFO ru.practicum.shareit.item.ItemController [http-nio-8080-exec-6] Request from user ID: 6 on get item. ID: 4
2023-08-03 20:25:33,502 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-6] HTTP GET http://localhost:9090/items/4
2023-08-03 20:25:33,502 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-6] Accept=[application/json, application/*+json]
2023-08-03 20:25:33,504 INFO ru.practicum.item.ItemController [http-nio-9090-exec-4] Запрос от идентификатора пользователя: 6 при получении элемента. Идентификатор: 4
2023-08-03 20:25:33,505 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-4] Setting JDBC Connection [HikariProxyConnection@87063803 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST] read-only
2023-08-03 20:25:33,506 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-4] Resetting read-only flag of JDBC Connection [HikariProxyConnection@87063803 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST]
2023-08-03 20:25:33,510 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-6] Response 200 OK
2023-08-03 20:25:33,511 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-6] Reading to [java.lang.Object]
2023-08-03 20:25:33,554 INFO ru.practicum.shareit.request.RequestController [http-nio-8080-exec-7] Add request on item RequestDto(id=0, description=Хотел бы воспользоваться щёткой для обуви, created=null, items=null), user id: 99
2023-08-03 20:25:33,555 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-7] HTTP POST http://localhost:9090/requests
2023-08-03 20:25:33,556 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-7] Accept=[application/json, application/*+json]
2023-08-03 20:25:33,558 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-7] Writing [RequestDto(id=0, description=Хотел бы воспользоваться щёткой для обуви, created=null, items=null)] as "application/json"
2023-08-03 20:25:33,568 INFO ru.practicum.request.RequestController [http-nio-9090-exec-5] Добавить запрос на элемент RequestDto(id=0, description=Хотел бы воспользоваться щёткой для обуви, created=null, items=null), идентификатор пользователя: 99
2023-08-03 20:25:33,583 INFO ru.practicum.ErrorHandler [http-nio-9090-exec-5] Not found: User with ID: 99 not found
2023-08-03 20:25:33,585 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-7] Response 404 NOT_FOUND
2023-08-03 20:25:33,611 INFO ru.practicum.shareit.ErrorHandler [http-nio-8080-exec-8] Validation failed for field: description. Error message: Description can't blank
2023-08-03 20:25:33,633 INFO ru.practicum.shareit.request.RequestController [http-nio-8080-exec-10] Request on get all requests from user id: 99
2023-08-03 20:25:33,633 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-10] HTTP GET http://localhost:9090/requests?from=0&size=20
2023-08-03 20:25:33,633 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-10] Accept=[application/json, application/*+json]
2023-08-03 20:25:33,635 INFO ru.practicum.request.RequestController [http-nio-9090-exec-6] Запрос на получение всех запросов от идентификатора пользователя: 99
2023-08-03 20:25:33,636 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-6] Setting JDBC Connection [HikariProxyConnection@403597642 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST] read-only
2023-08-03 20:25:33,637 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-6] Resetting read-only flag of JDBC Connection [HikariProxyConnection@403597642 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST]
2023-08-03 20:25:33,637 INFO ru.practicum.ErrorHandler [http-nio-9090-exec-6] Not found: User with ID: 99 not found
2023-08-03 20:25:33,638 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-10] Response 404 NOT_FOUND
2023-08-03 20:25:33,658 INFO ru.practicum.shareit.request.RequestController [http-nio-8080-exec-1] Request on get all requests from user id: 1
2023-08-03 20:25:33,658 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-1] HTTP GET http://localhost:9090/requests?from=0&size=20
2023-08-03 20:25:33,658 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-1] Accept=[application/json, application/*+json]
2023-08-03 20:25:33,659 INFO ru.practicum.request.RequestController [http-nio-9090-exec-7] Запрос на получение всех запросов от идентификатора пользователя: 1
2023-08-03 20:25:33,660 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-7] Setting JDBC Connection [HikariProxyConnection@1233234573 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST] read-only
2023-08-03 20:25:33,661 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-7] Resetting read-only flag of JDBC Connection [HikariProxyConnection@1233234573 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST]
2023-08-03 20:25:33,668 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-1] Response 200 OK
2023-08-03 20:25:33,668 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-1] Reading to [java.lang.Object]
2023-08-03 20:25:33,691 INFO ru.practicum.shareit.request.RequestController [http-nio-8080-exec-2] Request on get all requests
2023-08-03 20:25:33,692 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-2] HTTP GET http://localhost:9090/requests/all?from=0&size=20
2023-08-03 20:25:33,692 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-2] Accept=[application/json, application/*+json]
2023-08-03 20:25:33,700 INFO ru.practicum.request.RequestController [http-nio-9090-exec-8] Запрос на получение всех запросов
2023-08-03 20:25:33,702 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-2] Response 200 OK
2023-08-03 20:25:33,702 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-2] Reading to [java.lang.Object]
2023-08-03 20:25:33,725 INFO ru.practicum.shareit.ErrorHandler [http-nio-8080-exec-3] Validation failed for field: size. Error message: должно быть больше 0
2023-08-03 20:25:33,745 INFO ru.practicum.shareit.ErrorHandler [http-nio-8080-exec-5] Validation failed for field: from. Error message: должно быть больше или равно 0
2023-08-03 20:25:33,764 INFO ru.practicum.shareit.ErrorHandler [http-nio-8080-exec-7] Validation failed for field: size. Error message: должно быть больше 0
2023-08-03 20:25:33,785 INFO ru.practicum.shareit.request.RequestController [http-nio-8080-exec-9] Request on get all requests
2023-08-03 20:25:33,786 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-9] HTTP GET http://localhost:9090/requests/all?from=0&size=20
2023-08-03 20:25:33,786 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-9] Accept=[application/json, application/*+json]
2023-08-03 20:25:33,790 INFO ru.practicum.request.RequestController [http-nio-9090-exec-9] Запрос на получение всех запросов
2023-08-03 20:25:33,792 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-9] Response 200 OK
2023-08-03 20:25:33,792 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-9] Reading to [java.lang.Object]
2023-08-03 20:25:33,815 INFO ru.practicum.shareit.request.RequestController [http-nio-8080-exec-10] Add request on item RequestDto(id=0, description=Хотел бы воспользоваться щёткой для обуви, created=null, items=null), user id: 1
2023-08-03 20:25:33,816 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-10] HTTP POST http://localhost:9090/requests
2023-08-03 20:25:33,817 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-10] Accept=[application/json, application/*+json]
2023-08-03 20:25:33,817 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-10] Writing [RequestDto(id=0, description=Хотел бы воспользоваться щёткой для обуви, created=null, items=null)] as "application/json"
2023-08-03 20:25:33,819 INFO ru.practicum.request.RequestController [http-nio-9090-exec-10] Добавить запрос на элемент RequestDto(id=0, description=Хотел бы воспользоваться щёткой для обуви, created=null, items=null), идентификатор пользователя: 1
2023-08-03 20:25:33,826 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-10] Response 200 OK
2023-08-03 20:25:33,827 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-10] Reading to [java.lang.Object]
2023-08-03 20:25:34,852 INFO ru.practicum.shareit.request.RequestController [http-nio-8080-exec-1] Request on get all requests from user id: 1
2023-08-03 20:25:34,853 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-1] HTTP GET http://localhost:9090/requests?from=0&size=20
2023-08-03 20:25:34,853 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-1] Accept=[application/json, application/*+json]
2023-08-03 20:25:34,855 INFO ru.practicum.request.RequestController [http-nio-9090-exec-1] Запрос на получение всех запросов от идентификатора пользователя: 1
2023-08-03 20:25:34,855 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-1] Setting JDBC Connection [HikariProxyConnection@809216272 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST] read-only
2023-08-03 20:25:34,856 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-1] Resetting read-only flag of JDBC Connection [HikariProxyConnection@809216272 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST]
2023-08-03 20:25:34,858 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-1] Response 200 OK
2023-08-03 20:25:34,859 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-1] Reading to [java.lang.Object]
2023-08-03 20:25:34,876 INFO ru.practicum.shareit.item.ItemController [http-nio-8080-exec-2] Request on add ItemDto(id=0, name=Щётка для обуви, description=Стандартная щётка для обуви, available=true, requestId=1), user id: 4
2023-08-03 20:25:34,876 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-2] HTTP POST http://localhost:9090/items
2023-08-03 20:25:34,876 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-2] Accept=[application/json, application/*+json]
2023-08-03 20:25:34,876 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-2] Writing [ItemDto(id=0, name=Щётка для обуви, description=Стандартная щётка для обуви, available=true, requestId=1)] as "application/json"
2023-08-03 20:25:34,878 INFO ru.practicum.item.ItemController [http-nio-9090-exec-2] Запрос на добавление ItemDto(id=0, name=Щётка для обуви, description=Стандартная щётка для обуви, available=true, requestId=1), идентификатор пользователя: 4
2023-08-03 20:25:34,881 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-2] Response 200 OK
2023-08-03 20:25:34,881 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-2] Reading to [java.lang.Object]
2023-08-03 20:25:34,905 INFO ru.practicum.shareit.request.RequestController [http-nio-8080-exec-3] Request on get all requests from user id: 1
2023-08-03 20:25:34,905 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-3] HTTP GET http://localhost:9090/requests?from=0&size=20
2023-08-03 20:25:34,905 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-3] Accept=[application/json, application/*+json]
2023-08-03 20:25:34,907 INFO ru.practicum.request.RequestController [http-nio-9090-exec-3] Запрос на получение всех запросов от идентификатора пользователя: 1
2023-08-03 20:25:34,907 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-3] Setting JDBC Connection [HikariProxyConnection@1061369963 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST] read-only
2023-08-03 20:25:34,908 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-3] Resetting read-only flag of JDBC Connection [HikariProxyConnection@1061369963 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST]
2023-08-03 20:25:34,912 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-3] Response 200 OK
2023-08-03 20:25:34,912 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-3] Reading to [java.lang.Object]
2023-08-03 20:25:34,933 INFO ru.practicum.shareit.request.RequestController [http-nio-8080-exec-4] Request on get all requests
2023-08-03 20:25:34,933 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-4] HTTP GET http://localhost:9090/requests/all?from=0&size=20
2023-08-03 20:25:34,933 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-4] Accept=[application/json, application/*+json]
2023-08-03 20:25:34,936 INFO ru.practicum.request.RequestController [http-nio-9090-exec-4] Запрос на получение всех запросов
2023-08-03 20:25:34,936 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-4] Response 200 OK
2023-08-03 20:25:34,937 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-4] Reading to [java.lang.Object]
2023-08-03 20:25:34,959 INFO ru.practicum.shareit.request.RequestController [http-nio-8080-exec-5] Request on get all requests
2023-08-03 20:25:34,960 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-5] HTTP GET http://localhost:9090/requests/all?from=0&size=20
2023-08-03 20:25:34,960 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-5] Accept=[application/json, application/*+json]
2023-08-03 20:25:34,963 INFO ru.practicum.request.RequestController [http-nio-9090-exec-5] Запрос на получение всех запросов
2023-08-03 20:25:34,965 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-5] Response 200 OK
2023-08-03 20:25:34,965 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-5] Reading to [java.lang.Object]
2023-08-03 20:25:34,991 INFO ru.practicum.shareit.request.RequestController [http-nio-8080-exec-6] Request from user ID: 99 on get request. ID: 1
2023-08-03 20:25:34,991 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-6] HTTP GET http://localhost:9090/requests/1
2023-08-03 20:25:34,991 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-6] Accept=[application/json, application/*+json]
2023-08-03 20:25:34,993 INFO ru.practicum.request.RequestController [http-nio-9090-exec-6] Запрос от идентификатора пользователя: 99 по запросу get. Идентификатор: 1
2023-08-03 20:25:34,993 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-6] Setting JDBC Connection [HikariProxyConnection@148896492 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST] read-only
2023-08-03 20:25:34,994 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-6] Resetting read-only flag of JDBC Connection [HikariProxyConnection@148896492 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST]
2023-08-03 20:25:34,994 INFO ru.practicum.ErrorHandler [http-nio-9090-exec-6] Not found: User with ID: 99 not found
2023-08-03 20:25:34,995 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-6] Response 404 NOT_FOUND
2023-08-03 20:25:35,017 INFO ru.practicum.shareit.request.RequestController [http-nio-8080-exec-7] Request from user ID: 1 on get request. ID: 99
2023-08-03 20:25:35,017 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-7] HTTP GET http://localhost:9090/requests/99
2023-08-03 20:25:35,017 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-7] Accept=[application/json, application/*+json]
2023-08-03 20:25:35,018 INFO ru.practicum.request.RequestController [http-nio-9090-exec-7] Запрос от идентификатора пользователя: 1 по запросу get. Идентификатор: 99
2023-08-03 20:25:35,019 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-7] Setting JDBC Connection [HikariProxyConnection@231461723 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST] read-only
2023-08-03 20:25:35,020 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-7] Resetting read-only flag of JDBC Connection [HikariProxyConnection@231461723 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST]
2023-08-03 20:25:35,020 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-7] Setting JDBC Connection [HikariProxyConnection@231461723 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST] read-only
2023-08-03 20:25:35,021 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-7] Resetting read-only flag of JDBC Connection [HikariProxyConnection@231461723 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST]
2023-08-03 20:25:35,022 INFO ru.practicum.ErrorHandler [http-nio-9090-exec-7] Not found: Запрос с идентификатором: 99 не найден
2023-08-03 20:25:35,023 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-7] Response 404 NOT_FOUND
2023-08-03 20:25:35,043 INFO ru.practicum.shareit.request.RequestController [http-nio-8080-exec-8] Request from user ID: 4 on get request. ID: 1
2023-08-03 20:25:35,043 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-8] HTTP GET http://localhost:9090/requests/1
2023-08-03 20:25:35,043 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-8] Accept=[application/json, application/*+json]
2023-08-03 20:25:35,045 INFO ru.practicum.request.RequestController [http-nio-9090-exec-8] Запрос от идентификатора пользователя: 4 по запросу get. Идентификатор: 1
2023-08-03 20:25:35,045 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-8] Setting JDBC Connection [HikariProxyConnection@1615309329 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST] read-only
2023-08-03 20:25:35,046 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-8] Resetting read-only flag of JDBC Connection [HikariProxyConnection@1615309329 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST]
2023-08-03 20:25:35,046 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-8] Setting JDBC Connection [HikariProxyConnection@1615309329 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST] read-only
2023-08-03 20:25:35,047 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-8] Resetting read-only flag of JDBC Connection [HikariProxyConnection@1615309329 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST]
2023-08-03 20:25:35,050 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-8] Response 200 OK
2023-08-03 20:25:35,050 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-8] Reading to [java.lang.Object]
2023-08-03 20:25:35,079 INFO ru.practicum.shareit.request.RequestController [http-nio-8080-exec-9] Request from user ID: 1 on get request. ID: 1
2023-08-03 20:25:35,080 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-9] HTTP GET http://localhost:9090/requests/1
2023-08-03 20:25:35,080 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-9] Accept=[application/json, application/*+json]
2023-08-03 20:25:35,082 INFO ru.practicum.request.RequestController [http-nio-9090-exec-9] Запрос от идентификатора пользователя: 1 по запросу get. Идентификатор: 1
2023-08-03 20:25:35,082 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-9] Setting JDBC Connection [HikariProxyConnection@1975645970 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST] read-only
2023-08-03 20:25:35,083 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-9] Resetting read-only flag of JDBC Connection [HikariProxyConnection@1975645970 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST]
2023-08-03 20:25:35,083 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-9] Setting JDBC Connection [HikariProxyConnection@1975645970 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST] read-only
2023-08-03 20:25:35,084 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-9] Resetting read-only flag of JDBC Connection [HikariProxyConnection@1975645970 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST]
2023-08-03 20:25:35,086 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-9] Response 200 OK
2023-08-03 20:25:35,087 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-9] Reading to [java.lang.Object]
2023-08-03 20:25:35,116 INFO ru.practicum.shareit.ErrorHandler [http-nio-8080-exec-10] Validation failed for field: size. Error message: должно быть больше 0
2023-08-03 20:25:35,136 INFO ru.practicum.shareit.ErrorHandler [http-nio-8080-exec-2] Validation failed for field: size. Error message: должно быть больше 0
2023-08-03 20:25:35,161 INFO ru.practicum.shareit.ErrorHandler [http-nio-8080-exec-4] Validation failed for field: from. Error message: должно быть больше или равно 0
2023-08-03 20:25:35,181 INFO ru.practicum.shareit.ErrorHandler [http-nio-8080-exec-6] Validation failed for field: from. Error message: должно быть больше или равно 0
2023-08-03 20:25:35,205 INFO ru.practicum.shareit.ErrorHandler [http-nio-8080-exec-8] Validation failed for field: size. Error message: должно быть больше 0
2023-08-03 20:25:35,229 INFO ru.practicum.shareit.ErrorHandler [http-nio-8080-exec-10] Validation failed for field: size. Error message: должно быть больше 0
2023-08-03 20:25:35,249 INFO ru.practicum.shareit.booking.BookingController [http-nio-8080-exec-2] Get booking with state ALL, userId=1, from=4, size=2
2023-08-03 20:25:35,249 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-2] HTTP GET http://localhost:9090/bookings?state=ALL&from=4&size=2
2023-08-03 20:25:35,249 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-2] Accept=[application/json, application/*+json]
2023-08-03 20:25:35,251 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-10] Setting JDBC Connection [HikariProxyConnection@342192674 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST] read-only
2023-08-03 20:25:35,252 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-10] Resetting read-only flag of JDBC Connection [HikariProxyConnection@342192674 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST]
2023-08-03 20:25:35,254 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-2] Response 200 OK
2023-08-03 20:25:35,254 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-2] Reading to [java.lang.Object]
2023-08-03 20:25:35,278 INFO ru.practicum.shareit.booking.BookingController [http-nio-8080-exec-3] Get booking with state ALL, userId=1, from=1, size=1
2023-08-03 20:25:35,278 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-3] HTTP GET http://localhost:9090/bookings/owner?state=ALL&from=1&size=1
2023-08-03 20:25:35,278 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-3] Accept=[application/json, application/*+json]
2023-08-03 20:25:35,280 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-1] Setting JDBC Connection [HikariProxyConnection@1073732913 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST] read-only
2023-08-03 20:25:35,281 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-1] Resetting read-only flag of JDBC Connection [HikariProxyConnection@1073732913 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST]
2023-08-03 20:25:35,288 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-3] Response 200 OK
2023-08-03 20:25:35,288 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-3] Reading to [java.lang.Object]
2023-08-03 20:25:44,364 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-08-03 20:25:44,365 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-08-03 20:26:04,858 INFO org.springframework.orm.jpa.AbstractEntityManagerFactoryBean [SpringApplicationShutdownHook] Closing JPA EntityManagerFactory for persistence unit 'default'
2023-08-03 20:26:04,858 INFO org.hibernate.tool.schema.internal.SchemaDropperImpl$DelayedDropActionImpl [SpringApplicationShutdownHook] HHH000477: Starting delayed evictData of schema as part of SessionFactory shut-down'
2023-08-03 20:26:04,859 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn0: url=jdbc:h2:mem:my_db user=TEST: (connection is dead)
2023-08-03 20:26:04,859 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn1: url=jdbc:h2:mem:my_db user=TEST: (connection is dead)
2023-08-03 20:26:04,859 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 connection closer] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-08-03 20:26:04,859 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn2: url=jdbc:h2:mem:my_db user=TEST: (connection is dead)
2023-08-03 20:26:04,860 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 connection closer] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-08-03 20:26:04,860 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn3: url=jdbc:h2:mem:my_db user=TEST: (connection is dead)
2023-08-03 20:26:04,860 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 connection closer] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-08-03 20:26:04,860 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn4: url=jdbc:h2:mem:my_db user=TEST: (connection is dead)
2023-08-03 20:26:04,860 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 connection closer] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-08-03 20:26:04,860 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn5: url=jdbc:h2:mem:my_db user=TEST: (connection is dead)
2023-08-03 20:26:04,860 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 connection closer] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-08-03 20:26:04,860 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn6: url=jdbc:h2:mem:my_db user=TEST: (connection is dead)
2023-08-03 20:26:04,860 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 connection closer] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-08-03 20:26:04,860 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn7: url=jdbc:h2:mem:my_db user=TEST: (connection is dead)
2023-08-03 20:26:04,860 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 connection closer] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-08-03 20:26:04,860 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn8: url=jdbc:h2:mem:my_db user=TEST: (connection is dead)
2023-08-03 20:26:04,860 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 connection closer] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-08-03 20:26:04,860 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn9: url=jdbc:h2:mem:my_db user=TEST: (connection is dead)
2023-08-03 20:26:04,860 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 connection closer] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-08-03 20:26:05,040 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn10: url=jdbc:h2:mem:my_db user=TEST
2023-08-03 20:26:05,040 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn11: url=jdbc:h2:mem:my_db user=TEST
2023-08-03 20:26:05,040 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn12: url=jdbc:h2:mem:my_db user=TEST
2023-08-03 20:26:05,040 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn13: url=jdbc:h2:mem:my_db user=TEST
2023-08-03 20:26:05,041 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn14: url=jdbc:h2:mem:my_db user=TEST
2023-08-03 20:26:05,041 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn15: url=jdbc:h2:mem:my_db user=TEST
2023-08-03 20:26:05,041 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn16: url=jdbc:h2:mem:my_db user=TEST
2023-08-03 20:26:05,042 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn17: url=jdbc:h2:mem:my_db user=TEST
2023-08-03 20:26:05,042 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn18: url=jdbc:h2:mem:my_db user=TEST
2023-08-03 20:26:05,042 INFO com.zaxxer.hikari.HikariDataSource [SpringApplicationShutdownHook] HikariPool-1 - Shutdown initiated...
2023-08-03 20:26:05,042 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn19: url=jdbc:h2:mem:my_db user=TEST
2023-08-03 20:26:05,042 DEBUG com.zaxxer.hikari.pool.HikariPool [SpringApplicationShutdownHook] HikariPool-1 - Before shutdown stats (total=10, active=0, idle=10, waiting=0)
2023-08-03 20:26:05,043 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn10: url=jdbc:h2:mem:my_db user=TEST: (connection evicted)
2023-08-03 20:26:05,043 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn11: url=jdbc:h2:mem:my_db user=TEST: (connection evicted)
2023-08-03 20:26:05,043 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn12: url=jdbc:h2:mem:my_db user=TEST: (connection evicted)
2023-08-03 20:26:05,043 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn13: url=jdbc:h2:mem:my_db user=TEST: (connection evicted)
2023-08-03 20:26:05,043 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn14: url=jdbc:h2:mem:my_db user=TEST: (connection evicted)
2023-08-03 20:26:05,043 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn15: url=jdbc:h2:mem:my_db user=TEST: (connection evicted)
2023-08-03 20:26:05,043 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn16: url=jdbc:h2:mem:my_db user=TEST: (connection evicted)
2023-08-03 20:26:05,043 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn17: url=jdbc:h2:mem:my_db user=TEST: (connection evicted)
2023-08-03 20:26:05,043 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn18: url=jdbc:h2:mem:my_db user=TEST: (connection evicted)
2023-08-03 20:26:05,043 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn19: url=jdbc:h2:mem:my_db user=TEST: (connection evicted)
2023-08-03 20:26:05,043 DEBUG com.zaxxer.hikari.pool.HikariPool [SpringApplicationShutdownHook] HikariPool-1 - After shutdown stats (total=0, active=0, idle=0, waiting=0)
2023-08-03 20:26:05,044 INFO com.zaxxer.hikari.HikariDataSource [SpringApplicationShutdownHook] HikariPool-1 - Shutdown completed.
2023-08-03 20:27:17,810 INFO org.springframework.boot.StartupInfoLogger [main] Starting ShareItServerApp using Java 18.0.2 on DESKTOP-HBQA1DH with PID 13092 (C:\Users\Aser\dev\java-shareit\ser\target\classes started by Aser in C:\Users\Aser\dev\java-shareit)
2023-08-03 20:27:17,812 INFO org.springframework.boot.SpringApplication [main] No active profile set, falling back to 1 default profile: "default"
2023-08-03 20:27:18,412 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2023-08-03 20:27:18,479 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Finished Spring Data repository scanning in 59 ms. Found 5 JPA repository interfaces.
2023-08-03 20:27:19,131 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [main] Tomcat initialized with port(s): 9090 (http)
2023-08-03 20:27:19,139 INFO org.apache.juli.logging.DirectJDKLog [main] Initializing ProtocolHandler ["http-nio-9090"]
2023-08-03 20:27:19,140 INFO org.apache.juli.logging.DirectJDKLog [main] Starting service [Tomcat]
2023-08-03 20:27:19,140 INFO org.apache.juli.logging.DirectJDKLog [main] Starting Servlet engine: [Apache Tomcat/9.0.71]
2023-08-03 20:27:19,241 INFO org.apache.juli.logging.DirectJDKLog [main] Initializing Spring embedded WebApplicationContext
2023-08-03 20:27:19,241 INFO org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext [main] Root WebApplicationContext: initialization completed in 1395 ms
2023-08-03 20:27:19,318 DEBUG com.zaxxer.hikari.HikariConfig [main] Driver class org.h2.Driver found in Thread context class loader TomcatEmbeddedWebappClassLoader
  context: ROOT
  delegate: true
----------> Parent Classloader:
jdk.internal.loader.ClassLoaders$AppClassLoader@3cd1a2f1

2023-08-03 20:27:19,555 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [main] Fetching JDBC Connection from DataSource
2023-08-03 20:27:19,556 DEBUG com.zaxxer.hikari.HikariConfig [main] HikariPool-1 - configuration:
2023-08-03 20:27:19,559 DEBUG com.zaxxer.hikari.HikariConfig [main] allowPoolSuspension................................false
2023-08-03 20:27:19,559 DEBUG com.zaxxer.hikari.HikariConfig [main] autoCommit................................true
2023-08-03 20:27:19,560 DEBUG com.zaxxer.hikari.HikariConfig [main] catalog................................none
2023-08-03 20:27:19,560 DEBUG com.zaxxer.hikari.HikariConfig [main] connectionInitSql................................none
2023-08-03 20:27:19,560 DEBUG com.zaxxer.hikari.HikariConfig [main] connectionTestQuery................................none
2023-08-03 20:27:19,561 DEBUG com.zaxxer.hikari.HikariConfig [main] connectionTimeout................................30000
2023-08-03 20:27:19,562 DEBUG com.zaxxer.hikari.HikariConfig [main] dataSource................................none
2023-08-03 20:27:19,562 DEBUG com.zaxxer.hikari.HikariConfig [main] dataSourceClassName................................none
2023-08-03 20:27:19,562 DEBUG com.zaxxer.hikari.HikariConfig [main] dataSourceJNDI................................none
2023-08-03 20:27:19,563 DEBUG com.zaxxer.hikari.HikariConfig [main] dataSourceProperties................................{password=<masked>}
2023-08-03 20:27:19,565 DEBUG com.zaxxer.hikari.HikariConfig [main] driverClassName................................"org.h2.Driver"
2023-08-03 20:27:19,565 DEBUG com.zaxxer.hikari.HikariConfig [main] exceptionOverrideClassName................................none
2023-08-03 20:27:19,565 DEBUG com.zaxxer.hikari.HikariConfig [main] healthCheckProperties................................{}
2023-08-03 20:27:19,566 DEBUG com.zaxxer.hikari.HikariConfig [main] healthCheckRegistry................................none
2023-08-03 20:27:19,566 DEBUG com.zaxxer.hikari.HikariConfig [main] idleTimeout................................600000
2023-08-03 20:27:19,566 DEBUG com.zaxxer.hikari.HikariConfig [main] initializationFailTimeout................................1
2023-08-03 20:27:19,566 DEBUG com.zaxxer.hikari.HikariConfig [main] isolateInternalQueries................................false
2023-08-03 20:27:19,567 DEBUG com.zaxxer.hikari.HikariConfig [main] jdbcUrl................................jdbc:h2:mem:my_db
2023-08-03 20:27:19,567 DEBUG com.zaxxer.hikari.HikariConfig [main] keepaliveTime................................0
2023-08-03 20:27:19,567 DEBUG com.zaxxer.hikari.HikariConfig [main] leakDetectionThreshold................................0
2023-08-03 20:27:19,568 DEBUG com.zaxxer.hikari.HikariConfig [main] maxLifetime................................1800000
2023-08-03 20:27:19,568 DEBUG com.zaxxer.hikari.HikariConfig [main] maximumPoolSize................................10
2023-08-03 20:27:19,568 DEBUG com.zaxxer.hikari.HikariConfig [main] metricRegistry................................none
2023-08-03 20:27:19,568 DEBUG com.zaxxer.hikari.HikariConfig [main] metricsTrackerFactory................................com.zaxxer.hikari.metrics.micrometer.MicrometerMetricsTrackerFactory@1f9d4b0e
2023-08-03 20:27:19,568 DEBUG com.zaxxer.hikari.HikariConfig [main] minimumIdle................................10
2023-08-03 20:27:19,569 DEBUG com.zaxxer.hikari.HikariConfig [main] password................................<masked>
2023-08-03 20:27:19,569 DEBUG com.zaxxer.hikari.HikariConfig [main] poolName................................"HikariPool-1"
2023-08-03 20:27:19,569 DEBUG com.zaxxer.hikari.HikariConfig [main] readOnly................................false
2023-08-03 20:27:19,569 DEBUG com.zaxxer.hikari.HikariConfig [main] registerMbeans................................false
2023-08-03 20:27:19,569 DEBUG com.zaxxer.hikari.HikariConfig [main] scheduledExecutor................................none
2023-08-03 20:27:19,570 DEBUG com.zaxxer.hikari.HikariConfig [main] schema................................none
2023-08-03 20:27:19,570 DEBUG com.zaxxer.hikari.HikariConfig [main] threadFactory................................internal
2023-08-03 20:27:19,570 DEBUG com.zaxxer.hikari.HikariConfig [main] transactionIsolation................................default
2023-08-03 20:27:19,570 DEBUG com.zaxxer.hikari.HikariConfig [main] username................................"test"
2023-08-03 20:27:19,570 DEBUG com.zaxxer.hikari.HikariConfig [main] validationTimeout................................5000
2023-08-03 20:27:19,571 INFO com.zaxxer.hikari.HikariDataSource [main] HikariPool-1 - Starting...
2023-08-03 20:27:19,768 DEBUG com.zaxxer.hikari.pool.HikariPool [main] HikariPool-1 - Added connection conn0: url=jdbc:h2:mem:my_db user=TEST
2023-08-03 20:27:19,771 INFO com.zaxxer.hikari.HikariDataSource [main] HikariPool-1 - Start completed.
2023-08-03 20:27:19,827 INFO org.hibernate.jpa.internal.util.LogHelper [main] HHH000204: Processing PersistenceUnitInfo [name: default]
2023-08-03 20:27:19,873 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=1, active=0, idle=1, waiting=0)
2023-08-03 20:27:19,874 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn1: url=jdbc:h2:mem:my_db user=TEST
2023-08-03 20:27:19,875 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn2: url=jdbc:h2:mem:my_db user=TEST
2023-08-03 20:27:19,875 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn3: url=jdbc:h2:mem:my_db user=TEST
2023-08-03 20:27:19,876 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn4: url=jdbc:h2:mem:my_db user=TEST
2023-08-03 20:27:19,877 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn5: url=jdbc:h2:mem:my_db user=TEST
2023-08-03 20:27:19,877 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn6: url=jdbc:h2:mem:my_db user=TEST
2023-08-03 20:27:19,878 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn7: url=jdbc:h2:mem:my_db user=TEST
2023-08-03 20:27:19,878 INFO org.hibernate.Version [main] HHH000412: Hibernate ORM core version 5.6.15.Final
2023-08-03 20:27:19,878 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn8: url=jdbc:h2:mem:my_db user=TEST
2023-08-03 20:27:19,879 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn9: url=jdbc:h2:mem:my_db user=TEST
2023-08-03 20:27:19,879 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 connection adder] HikariPool-1 - After adding stats (total=10, active=0, idle=10, waiting=0)
2023-08-03 20:27:20,020 INFO org.hibernate.annotations.common.reflection.java.JavaReflectionManager [main] HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2023-08-03 20:27:20,103 INFO org.hibernate.dialect.Dialect [main] HHH000400: Using dialect: org.hibernate.dialect.PostgreSQL10Dialect
2023-08-03 20:27:20,728 INFO org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator [main] HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2023-08-03 20:27:20,736 INFO org.springframework.orm.jpa.AbstractEntityManagerFactoryBean [main] Initialized JPA EntityManagerFactory for persistence unit 'default'
2023-08-03 20:27:21,503 INFO org.hibernate.validator.internal.util.Version [background-preinit] HV000001: Hibernate Validator 6.2.5.Final
2023-08-03 20:27:21,504 INFO org.springframework.boot.StartupInfoLogger [main] Starting ShareItGateway using Java 18.0.2 on DESKTOP-HBQA1DH with PID 2696 (C:\Users\Aser\dev\java-shareit\shareIt-gateway\target\classes started by Aser in C:\Users\Aser\dev\java-shareit)
2023-08-03 20:27:21,507 INFO org.springframework.boot.SpringApplication [main] No active profile set, falling back to 1 default profile: "default"
2023-08-03 20:27:21,646 WARN org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration [main] spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2023-08-03 20:27:22,223 INFO org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver [main] Exposing 1 endpoint(s) beneath base path '/actuator'
2023-08-03 20:27:22,251 INFO org.apache.juli.logging.DirectJDKLog [main] Starting ProtocolHandler ["http-nio-9090"]
2023-08-03 20:27:22,283 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [main] Tomcat started on port(s): 9090 (http) with context path ''
2023-08-03 20:27:22,311 INFO org.springframework.boot.StartupInfoLogger [main] Started ShareItServerApp in 4.898 seconds (JVM running for 5.25)
2023-08-03 20:27:23,180 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [main] Tomcat initialized with port(s): 8080 (http)
2023-08-03 20:27:23,188 INFO org.apache.juli.logging.DirectJDKLog [main] Initializing ProtocolHandler ["http-nio-8080"]
2023-08-03 20:27:23,189 INFO org.apache.juli.logging.DirectJDKLog [main] Starting service [Tomcat]
2023-08-03 20:27:23,189 INFO org.apache.juli.logging.DirectJDKLog [main] Starting Servlet engine: [Apache Tomcat/9.0.71]
2023-08-03 20:27:23,267 INFO org.apache.juli.logging.DirectJDKLog [main] Initializing Spring embedded WebApplicationContext
2023-08-03 20:27:23,267 INFO org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext [main] Root WebApplicationContext: initialization completed in 1674 ms
2023-08-03 20:27:23,854 INFO org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver [main] Exposing 1 endpoint(s) beneath base path '/actuator'
2023-08-03 20:27:23,870 INFO org.apache.juli.logging.DirectJDKLog [main] Starting ProtocolHandler ["http-nio-8080"]
2023-08-03 20:27:23,886 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [main] Tomcat started on port(s): 8080 (http) with context path ''
2023-08-03 20:27:23,897 INFO org.springframework.boot.StartupInfoLogger [main] Started ShareItGateway in 2.969 seconds (JVM running for 3.41)
2023-08-03 20:27:24,312 INFO org.apache.juli.logging.DirectJDKLog [http-nio-8080-exec-1] Initializing Spring DispatcherServlet 'dispatcherServlet'
2023-08-03 20:27:24,313 INFO org.springframework.web.servlet.FrameworkServlet [http-nio-8080-exec-1] Initializing Servlet 'dispatcherServlet'
2023-08-03 20:27:24,313 INFO org.springframework.web.servlet.FrameworkServlet [http-nio-8080-exec-1] Completed initialization in 0 ms
2023-08-03 20:27:24,387 INFO ru.practicum.shareit.ErrorHandler [http-nio-8080-exec-1] Bad booking state: Неизвестное состояние: UNSUPPORTED_STATUS
2023-08-03 20:27:49,875 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-08-03 20:27:49,876 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-08-03 20:28:19,878 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-08-03 20:28:19,878 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-08-03 20:28:49,881 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-08-03 20:28:49,881 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-08-03 20:29:19,883 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-08-03 20:29:19,884 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-08-03 20:29:28,484 INFO ru.practicum.shareit.ErrorHandler [http-nio-8080-exec-4] Bad booking state: Неизвестное состояние: UNSUPPORTED_STATUS
2023-08-03 20:29:49,885 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-08-03 20:29:49,885 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-08-03 20:30:19,888 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-08-03 20:30:19,888 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-08-03 20:30:49,889 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-08-03 20:30:49,889 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-08-03 20:31:19,891 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-08-03 20:31:19,891 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-08-03 20:31:36,478 INFO org.hibernate.validator.internal.util.Version [background-preinit] HV000001: Hibernate Validator 6.2.5.Final
2023-08-03 20:31:36,483 INFO org.springframework.boot.StartupInfoLogger [main] Starting ShareItGateway using Java 18.0.2 on DESKTOP-HBQA1DH with PID 8244 (C:\Users\Aser\dev\java-shareit\shareIt-gateway\target\classes started by Aser in C:\Users\Aser\dev\java-shareit)
2023-08-03 20:31:36,483 INFO org.springframework.boot.SpringApplication [main] No active profile set, falling back to 1 default profile: "default"
2023-08-03 20:31:37,412 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [main] Tomcat initialized with port(s): 8080 (http)
2023-08-03 20:31:37,419 INFO org.apache.juli.logging.DirectJDKLog [main] Initializing ProtocolHandler ["http-nio-8080"]
2023-08-03 20:31:37,419 INFO org.apache.juli.logging.DirectJDKLog [main] Starting service [Tomcat]
2023-08-03 20:31:37,419 INFO org.apache.juli.logging.DirectJDKLog [main] Starting Servlet engine: [Apache Tomcat/9.0.71]
2023-08-03 20:31:37,485 INFO org.apache.juli.logging.DirectJDKLog [main] Initializing Spring embedded WebApplicationContext
2023-08-03 20:31:37,485 INFO org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext [main] Root WebApplicationContext: initialization completed in 963 ms
2023-08-03 20:31:38,045 INFO org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver [main] Exposing 1 endpoint(s) beneath base path '/actuator'
2023-08-03 20:31:38,065 INFO org.apache.juli.logging.DirectJDKLog [main] Starting ProtocolHandler ["http-nio-8080"]
2023-08-03 20:31:38,086 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [main] Tomcat started on port(s): 8080 (http) with context path ''
2023-08-03 20:31:38,104 INFO org.springframework.boot.StartupInfoLogger [main] Started ShareItGateway in 2.048 seconds (JVM running for 2.342)
2023-08-03 20:31:42,335 INFO org.apache.juli.logging.DirectJDKLog [http-nio-8080-exec-2] Initializing Spring DispatcherServlet 'dispatcherServlet'
2023-08-03 20:31:42,336 INFO org.springframework.web.servlet.FrameworkServlet [http-nio-8080-exec-2] Initializing Servlet 'dispatcherServlet'
2023-08-03 20:31:42,336 INFO org.springframework.web.servlet.FrameworkServlet [http-nio-8080-exec-2] Completed initialization in 0 ms
2023-08-03 20:31:42,425 INFO ru.practicum.shareit.ErrorHandler [http-nio-8080-exec-2] Bad booking state: Неизвестное состояние: UNSUPPORTED_STATUS
2023-08-03 20:31:46,340 INFO ru.practicum.shareit.ErrorHandler [http-nio-8080-exec-4] Bad booking state: Неизвестное состояние: UNSUPPORTED_STATUS
2023-08-03 20:31:49,893 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-08-03 20:31:49,893 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-08-03 20:32:04,796 INFO org.springframework.orm.jpa.AbstractEntityManagerFactoryBean [SpringApplicationShutdownHook] Closing JPA EntityManagerFactory for persistence unit 'default'
2023-08-03 20:32:04,797 INFO org.hibernate.tool.schema.internal.SchemaDropperImpl$DelayedDropActionImpl [SpringApplicationShutdownHook] HHH000477: Starting delayed evictData of schema as part of SessionFactory shut-down'
2023-08-03 20:32:04,798 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn0: url=jdbc:h2:mem:my_db user=TEST: (connection is dead)
2023-08-03 20:32:04,799 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn1: url=jdbc:h2:mem:my_db user=TEST: (connection is dead)
2023-08-03 20:32:04,799 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 connection closer] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-08-03 20:32:04,799 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn2: url=jdbc:h2:mem:my_db user=TEST: (connection is dead)
2023-08-03 20:32:04,799 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 connection closer] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-08-03 20:32:04,799 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn3: url=jdbc:h2:mem:my_db user=TEST: (connection is dead)
2023-08-03 20:32:04,799 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 connection closer] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-08-03 20:32:04,799 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn4: url=jdbc:h2:mem:my_db user=TEST: (connection is dead)
2023-08-03 20:32:04,799 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 connection closer] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-08-03 20:32:04,799 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn5: url=jdbc:h2:mem:my_db user=TEST: (connection is dead)
2023-08-03 20:32:04,799 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 connection closer] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-08-03 20:32:04,800 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn6: url=jdbc:h2:mem:my_db user=TEST: (connection is dead)
2023-08-03 20:32:04,800 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 connection closer] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-08-03 20:32:04,800 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn7: url=jdbc:h2:mem:my_db user=TEST: (connection is dead)
2023-08-03 20:32:04,800 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 connection closer] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-08-03 20:32:04,800 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn8: url=jdbc:h2:mem:my_db user=TEST: (connection is dead)
2023-08-03 20:32:04,800 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 connection closer] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-08-03 20:32:04,800 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn9: url=jdbc:h2:mem:my_db user=TEST: (connection is dead)
2023-08-03 20:32:04,800 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 connection closer] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-08-03 20:32:04,974 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn10: url=jdbc:h2:mem:my_db user=TEST
2023-08-03 20:32:04,974 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn11: url=jdbc:h2:mem:my_db user=TEST
2023-08-03 20:32:04,975 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn12: url=jdbc:h2:mem:my_db user=TEST
2023-08-03 20:32:04,975 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn13: url=jdbc:h2:mem:my_db user=TEST
2023-08-03 20:32:04,975 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn14: url=jdbc:h2:mem:my_db user=TEST
2023-08-03 20:32:04,975 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn15: url=jdbc:h2:mem:my_db user=TEST
2023-08-03 20:32:04,976 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn16: url=jdbc:h2:mem:my_db user=TEST
2023-08-03 20:32:04,976 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn17: url=jdbc:h2:mem:my_db user=TEST
2023-08-03 20:32:04,976 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn18: url=jdbc:h2:mem:my_db user=TEST
2023-08-03 20:32:04,976 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn19: url=jdbc:h2:mem:my_db user=TEST
2023-08-03 20:32:04,977 INFO com.zaxxer.hikari.HikariDataSource [SpringApplicationShutdownHook] HikariPool-1 - Shutdown initiated...
2023-08-03 20:32:04,977 DEBUG com.zaxxer.hikari.pool.HikariPool [SpringApplicationShutdownHook] HikariPool-1 - Before shutdown stats (total=10, active=0, idle=10, waiting=0)
2023-08-03 20:32:04,977 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn10: url=jdbc:h2:mem:my_db user=TEST: (connection evicted)
2023-08-03 20:32:04,977 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn11: url=jdbc:h2:mem:my_db user=TEST: (connection evicted)
2023-08-03 20:32:04,978 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn12: url=jdbc:h2:mem:my_db user=TEST: (connection evicted)
2023-08-03 20:32:04,978 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn13: url=jdbc:h2:mem:my_db user=TEST: (connection evicted)
2023-08-03 20:32:04,978 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn14: url=jdbc:h2:mem:my_db user=TEST: (connection evicted)
2023-08-03 20:32:04,978 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn15: url=jdbc:h2:mem:my_db user=TEST: (connection evicted)
2023-08-03 20:32:04,978 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn16: url=jdbc:h2:mem:my_db user=TEST: (connection evicted)
2023-08-03 20:32:04,978 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn17: url=jdbc:h2:mem:my_db user=TEST: (connection evicted)
2023-08-03 20:32:04,978 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn18: url=jdbc:h2:mem:my_db user=TEST: (connection evicted)
2023-08-03 20:32:04,978 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn19: url=jdbc:h2:mem:my_db user=TEST: (connection evicted)
2023-08-03 20:32:04,978 DEBUG com.zaxxer.hikari.pool.HikariPool [SpringApplicationShutdownHook] HikariPool-1 - After shutdown stats (total=0, active=0, idle=0, waiting=0)
2023-08-03 20:32:04,978 INFO com.zaxxer.hikari.HikariDataSource [SpringApplicationShutdownHook] HikariPool-1 - Shutdown completed.
2023-08-03 20:32:08,331 INFO org.hibernate.validator.internal.util.Version [background-preinit] HV000001: Hibernate Validator 6.2.5.Final
2023-08-03 20:32:08,336 INFO org.springframework.boot.StartupInfoLogger [main] Starting ShareItGateway using Java 18.0.2 on DESKTOP-HBQA1DH with PID 4536 (C:\Users\Aser\dev\java-shareit\shareIt-gateway\target\classes started by Aser in C:\Users\Aser\dev\java-shareit)
2023-08-03 20:32:08,337 INFO org.springframework.boot.SpringApplication [main] No active profile set, falling back to 1 default profile: "default"
2023-08-03 20:32:09,278 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [main] Tomcat initialized with port(s): 8080 (http)
2023-08-03 20:32:09,285 INFO org.apache.juli.logging.DirectJDKLog [main] Initializing ProtocolHandler ["http-nio-8080"]
2023-08-03 20:32:09,285 INFO org.apache.juli.logging.DirectJDKLog [main] Starting service [Tomcat]
2023-08-03 20:32:09,285 INFO org.apache.juli.logging.DirectJDKLog [main] Starting Servlet engine: [Apache Tomcat/9.0.71]
2023-08-03 20:32:09,350 INFO org.apache.juli.logging.DirectJDKLog [main] Initializing Spring embedded WebApplicationContext
2023-08-03 20:32:09,350 INFO org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext [main] Root WebApplicationContext: initialization completed in 974 ms
2023-08-03 20:32:09,931 INFO org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver [main] Exposing 1 endpoint(s) beneath base path '/actuator'
2023-08-03 20:32:09,949 INFO org.apache.juli.logging.DirectJDKLog [main] Starting ProtocolHandler ["http-nio-8080"]
2023-08-03 20:32:09,966 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [main] Tomcat started on port(s): 8080 (http) with context path ''
2023-08-03 20:32:09,979 INFO org.springframework.boot.StartupInfoLogger [main] Started ShareItGateway in 2.037 seconds (JVM running for 2.335)
2023-08-03 20:32:14,037 INFO org.apache.juli.logging.DirectJDKLog [http-nio-8080-exec-2] Initializing Spring DispatcherServlet 'dispatcherServlet'
2023-08-03 20:32:14,037 INFO org.springframework.web.servlet.FrameworkServlet [http-nio-8080-exec-2] Initializing Servlet 'dispatcherServlet'
2023-08-03 20:32:14,038 INFO org.springframework.web.servlet.FrameworkServlet [http-nio-8080-exec-2] Completed initialization in 1 ms
2023-08-03 20:32:14,107 INFO ru.practicum.shareit.ErrorHandler [http-nio-8080-exec-2] Bad booking state: Неизвестное состояние: UNSUPPORTED_STATUS
2023-08-03 20:34:47,857 INFO org.hibernate.validator.internal.util.Version [background-preinit] HV000001: Hibernate Validator 6.2.5.Final
2023-08-03 20:34:47,863 INFO org.springframework.boot.StartupInfoLogger [main] Starting ShareItGateway using Java 18.0.2 on DESKTOP-HBQA1DH with PID 1808 (C:\Users\Aser\dev\java-shareit\shareIt-gateway\target\classes started by Aser in C:\Users\Aser\dev\java-shareit)
2023-08-03 20:34:47,864 INFO org.springframework.boot.SpringApplication [main] No active profile set, falling back to 1 default profile: "default"
2023-08-03 20:34:48,797 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [main] Tomcat initialized with port(s): 8080 (http)
2023-08-03 20:34:48,804 INFO org.apache.juli.logging.DirectJDKLog [main] Initializing ProtocolHandler ["http-nio-8080"]
2023-08-03 20:34:48,805 INFO org.apache.juli.logging.DirectJDKLog [main] Starting service [Tomcat]
2023-08-03 20:34:48,805 INFO org.apache.juli.logging.DirectJDKLog [main] Starting Servlet engine: [Apache Tomcat/9.0.71]
2023-08-03 20:34:48,870 INFO org.apache.juli.logging.DirectJDKLog [main] Initializing Spring embedded WebApplicationContext
2023-08-03 20:34:48,871 INFO org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext [main] Root WebApplicationContext: initialization completed in 967 ms
2023-08-03 20:34:49,468 INFO org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver [main] Exposing 1 endpoint(s) beneath base path '/actuator'
2023-08-03 20:34:49,488 INFO org.apache.juli.logging.DirectJDKLog [main] Starting ProtocolHandler ["http-nio-8080"]
2023-08-03 20:34:49,507 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [main] Tomcat started on port(s): 8080 (http) with context path ''
2023-08-03 20:34:49,528 INFO org.springframework.boot.StartupInfoLogger [main] Started ShareItGateway in 2.052 seconds (JVM running for 2.34)
2023-08-03 20:34:52,139 INFO org.springframework.boot.StartupInfoLogger [main] Starting ShareItServerApp using Java 18.0.2 on DESKTOP-HBQA1DH with PID 6376 (C:\Users\Aser\dev\java-shareit\ser\target\classes started by Aser in C:\Users\Aser\dev\java-shareit)
2023-08-03 20:34:52,142 INFO org.springframework.boot.SpringApplication [main] No active profile set, falling back to 1 default profile: "default"
2023-08-03 20:34:52,758 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2023-08-03 20:34:52,835 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Finished Spring Data repository scanning in 69 ms. Found 5 JPA repository interfaces.
2023-08-03 20:34:53,314 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [main] Tomcat initialized with port(s): 9090 (http)
2023-08-03 20:34:53,322 INFO org.apache.juli.logging.DirectJDKLog [main] Initializing ProtocolHandler ["http-nio-9090"]
2023-08-03 20:34:53,322 INFO org.apache.juli.logging.DirectJDKLog [main] Starting service [Tomcat]
2023-08-03 20:34:53,322 INFO org.apache.juli.logging.DirectJDKLog [main] Starting Servlet engine: [Apache Tomcat/9.0.71]
2023-08-03 20:34:53,413 INFO org.apache.juli.logging.DirectJDKLog [main] Initializing Spring embedded WebApplicationContext
2023-08-03 20:34:53,414 INFO org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext [main] Root WebApplicationContext: initialization completed in 1236 ms
2023-08-03 20:34:53,484 DEBUG com.zaxxer.hikari.HikariConfig [main] Driver class org.h2.Driver found in Thread context class loader TomcatEmbeddedWebappClassLoader
  context: ROOT
  delegate: true
----------> Parent Classloader:
jdk.internal.loader.ClassLoaders$AppClassLoader@3cd1a2f1

2023-08-03 20:34:53,657 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [main] Fetching JDBC Connection from DataSource
2023-08-03 20:34:53,657 DEBUG com.zaxxer.hikari.HikariConfig [main] HikariPool-1 - configuration:
2023-08-03 20:34:53,660 DEBUG com.zaxxer.hikari.HikariConfig [main] allowPoolSuspension................................false
2023-08-03 20:34:53,660 DEBUG com.zaxxer.hikari.HikariConfig [main] autoCommit................................true
2023-08-03 20:34:53,660 DEBUG com.zaxxer.hikari.HikariConfig [main] catalog................................none
2023-08-03 20:34:53,661 DEBUG com.zaxxer.hikari.HikariConfig [main] connectionInitSql................................none
2023-08-03 20:34:53,661 DEBUG com.zaxxer.hikari.HikariConfig [main] connectionTestQuery................................none
2023-08-03 20:34:53,662 DEBUG com.zaxxer.hikari.HikariConfig [main] connectionTimeout................................30000
2023-08-03 20:34:53,662 DEBUG com.zaxxer.hikari.HikariConfig [main] dataSource................................none
2023-08-03 20:34:53,662 DEBUG com.zaxxer.hikari.HikariConfig [main] dataSourceClassName................................none
2023-08-03 20:34:53,663 DEBUG com.zaxxer.hikari.HikariConfig [main] dataSourceJNDI................................none
2023-08-03 20:34:53,663 DEBUG com.zaxxer.hikari.HikariConfig [main] dataSourceProperties................................{password=<masked>}
2023-08-03 20:34:53,664 DEBUG com.zaxxer.hikari.HikariConfig [main] driverClassName................................"org.h2.Driver"
2023-08-03 20:34:53,664 DEBUG com.zaxxer.hikari.HikariConfig [main] exceptionOverrideClassName................................none
2023-08-03 20:34:53,664 DEBUG com.zaxxer.hikari.HikariConfig [main] healthCheckProperties................................{}
2023-08-03 20:34:53,665 DEBUG com.zaxxer.hikari.HikariConfig [main] healthCheckRegistry................................none
2023-08-03 20:34:53,665 DEBUG com.zaxxer.hikari.HikariConfig [main] idleTimeout................................600000
2023-08-03 20:34:53,665 DEBUG com.zaxxer.hikari.HikariConfig [main] initializationFailTimeout................................1
2023-08-03 20:34:53,665 DEBUG com.zaxxer.hikari.HikariConfig [main] isolateInternalQueries................................false
2023-08-03 20:34:53,666 DEBUG com.zaxxer.hikari.HikariConfig [main] jdbcUrl................................jdbc:h2:mem:my_db
2023-08-03 20:34:53,666 DEBUG com.zaxxer.hikari.HikariConfig [main] keepaliveTime................................0
2023-08-03 20:34:53,667 DEBUG com.zaxxer.hikari.HikariConfig [main] leakDetectionThreshold................................0
2023-08-03 20:34:53,667 DEBUG com.zaxxer.hikari.HikariConfig [main] maxLifetime................................1800000
2023-08-03 20:34:53,667 DEBUG com.zaxxer.hikari.HikariConfig [main] maximumPoolSize................................10
2023-08-03 20:34:53,667 DEBUG com.zaxxer.hikari.HikariConfig [main] metricRegistry................................none
2023-08-03 20:34:53,668 DEBUG com.zaxxer.hikari.HikariConfig [main] metricsTrackerFactory................................com.zaxxer.hikari.metrics.micrometer.MicrometerMetricsTrackerFactory@7a1b8a46
2023-08-03 20:34:53,668 DEBUG com.zaxxer.hikari.HikariConfig [main] minimumIdle................................10
2023-08-03 20:34:53,668 DEBUG com.zaxxer.hikari.HikariConfig [main] password................................<masked>
2023-08-03 20:34:53,668 DEBUG com.zaxxer.hikari.HikariConfig [main] poolName................................"HikariPool-1"
2023-08-03 20:34:53,668 DEBUG com.zaxxer.hikari.HikariConfig [main] readOnly................................false
2023-08-03 20:34:53,669 DEBUG com.zaxxer.hikari.HikariConfig [main] registerMbeans................................false
2023-08-03 20:34:53,669 DEBUG com.zaxxer.hikari.HikariConfig [main] scheduledExecutor................................none
2023-08-03 20:34:53,669 DEBUG com.zaxxer.hikari.HikariConfig [main] schema................................none
2023-08-03 20:34:53,669 DEBUG com.zaxxer.hikari.HikariConfig [main] threadFactory................................internal
2023-08-03 20:34:53,669 DEBUG com.zaxxer.hikari.HikariConfig [main] transactionIsolation................................default
2023-08-03 20:34:53,670 DEBUG com.zaxxer.hikari.HikariConfig [main] username................................"test"
2023-08-03 20:34:53,670 DEBUG com.zaxxer.hikari.HikariConfig [main] validationTimeout................................5000
2023-08-03 20:34:53,670 INFO com.zaxxer.hikari.HikariDataSource [main] HikariPool-1 - Starting...
2023-08-03 20:34:53,832 DEBUG com.zaxxer.hikari.pool.HikariPool [main] HikariPool-1 - Added connection conn0: url=jdbc:h2:mem:my_db user=TEST
2023-08-03 20:34:53,836 INFO com.zaxxer.hikari.HikariDataSource [main] HikariPool-1 - Start completed.
2023-08-03 20:34:53,884 INFO org.hibernate.jpa.internal.util.LogHelper [main] HHH000204: Processing PersistenceUnitInfo [name: default]
2023-08-03 20:34:53,918 INFO org.hibernate.Version [main] HHH000412: Hibernate ORM core version 5.6.15.Final
2023-08-03 20:34:53,937 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=1, active=0, idle=1, waiting=0)
2023-08-03 20:34:53,938 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn1: url=jdbc:h2:mem:my_db user=TEST
2023-08-03 20:34:53,938 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn2: url=jdbc:h2:mem:my_db user=TEST
2023-08-03 20:34:53,939 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn3: url=jdbc:h2:mem:my_db user=TEST
2023-08-03 20:34:53,939 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn4: url=jdbc:h2:mem:my_db user=TEST
2023-08-03 20:34:53,939 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn5: url=jdbc:h2:mem:my_db user=TEST
2023-08-03 20:34:53,940 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn6: url=jdbc:h2:mem:my_db user=TEST
2023-08-03 20:34:53,940 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn7: url=jdbc:h2:mem:my_db user=TEST
2023-08-03 20:34:53,940 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn8: url=jdbc:h2:mem:my_db user=TEST
2023-08-03 20:34:53,941 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn9: url=jdbc:h2:mem:my_db user=TEST
2023-08-03 20:34:53,941 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 connection adder] HikariPool-1 - After adding stats (total=10, active=0, idle=10, waiting=0)
2023-08-03 20:34:54,026 INFO org.hibernate.annotations.common.reflection.java.JavaReflectionManager [main] HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2023-08-03 20:34:54,112 INFO org.hibernate.dialect.Dialect [main] HHH000400: Using dialect: org.hibernate.dialect.PostgreSQL10Dialect
2023-08-03 20:34:54,529 INFO org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator [main] HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2023-08-03 20:34:54,534 INFO org.springframework.orm.jpa.AbstractEntityManagerFactoryBean [main] Initialized JPA EntityManagerFactory for persistence unit 'default'
2023-08-03 20:34:55,100 WARN org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration [main] spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2023-08-03 20:34:55,421 INFO org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver [main] Exposing 1 endpoint(s) beneath base path '/actuator'
2023-08-03 20:34:55,439 INFO org.apache.juli.logging.DirectJDKLog [main] Starting ProtocolHandler ["http-nio-9090"]
2023-08-03 20:34:55,457 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [main] Tomcat started on port(s): 9090 (http) with context path ''
2023-08-03 20:34:55,469 INFO org.springframework.boot.StartupInfoLogger [main] Started ShareItServerApp in 3.722 seconds (JVM running for 4.061)
2023-08-03 20:35:01,792 INFO org.apache.juli.logging.DirectJDKLog [http-nio-8080-exec-1] Initializing Spring DispatcherServlet 'dispatcherServlet'
2023-08-03 20:35:01,792 INFO org.springframework.web.servlet.FrameworkServlet [http-nio-8080-exec-1] Initializing Servlet 'dispatcherServlet'
2023-08-03 20:35:01,793 INFO org.springframework.web.servlet.FrameworkServlet [http-nio-8080-exec-1] Completed initialization in 1 ms
2023-08-03 20:35:01,877 INFO ru.practicum.shareit.ErrorHandler [http-nio-8080-exec-1] Bad booking state: Unknown state: UNSUPPORTED_STATUS
2023-08-03 20:35:12,567 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-4] HTTP POST http://localhost:9090/users
2023-08-03 20:35:12,572 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-4] Accept=[application/json, application/*+json]
2023-08-03 20:35:12,577 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-4] Writing [UserDto(id=0, email=user@user.com, name=user)] as "application/json"
2023-08-03 20:35:12,640 INFO org.apache.juli.logging.DirectJDKLog [http-nio-9090-exec-1] Initializing Spring DispatcherServlet 'dispatcherServlet'
2023-08-03 20:35:12,640 INFO org.springframework.web.servlet.FrameworkServlet [http-nio-9090-exec-1] Initializing Servlet 'dispatcherServlet'
2023-08-03 20:35:12,641 INFO org.springframework.web.servlet.FrameworkServlet [http-nio-9090-exec-1] Completed initialization in 1 ms
2023-08-03 20:35:12,748 INFO ru.practicum.user.UserController [http-nio-9090-exec-1] Было создано: ru.practicum.user.model.User@297eb3d2
2023-08-03 20:35:12,769 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-4] Response 201 CREATED
2023-08-03 20:35:12,770 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-4] Reading to [java.lang.Object]
2023-08-03 20:35:12,812 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-5] HTTP POST http://localhost:9090/users
2023-08-03 20:35:12,812 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-5] Accept=[application/json, application/*+json]
2023-08-03 20:35:12,812 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-5] Writing [UserDto(id=0, email=user@user.com, name=user)] as "application/json"
2023-08-03 20:35:12,817 WARN org.hibernate.engine.jdbc.spi.SqlExceptionHelper [http-nio-9090-exec-2] SQL Error: 23505, SQLState: 23505
2023-08-03 20:35:12,817 ERROR org.hibernate.engine.jdbc.spi.SqlExceptionHelper [http-nio-9090-exec-2] Нарушение уникального индекса или первичного ключа: "PUBLIC.UNIQ_EMAIL_INDEX_4 ON PUBLIC.USERS(EMAIL NULLS FIRST) VALUES ( /* 1 */ 'user@user.com' )"
Unique index or primary key violation: "PUBLIC.UNIQ_EMAIL_INDEX_4 ON PUBLIC.USERS(EMAIL NULLS FIRST) VALUES ( /* 1 */ 'user@user.com' )"; SQL statement:
insert into users (email, name) values (?, ?) [23505-214]
2023-08-03 20:35:12,821 INFO ru.practicum.ErrorHandler [http-nio-9090-exec-2] Server error could not execute statement; SQL [n/a]; constraint [null]; nested exception is org.hibernate.exception.ConstraintViolationException: could not execute statement
2023-08-03 20:35:12,825 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-5] Response 500 INTERNAL_SERVER_ERROR
2023-08-03 20:35:12,876 INFO ru.practicum.shareit.ErrorHandler [http-nio-8080-exec-6] Validation failed for field: email. Error message: Email can not be null
2023-08-03 20:35:12,903 INFO ru.practicum.shareit.ErrorHandler [http-nio-8080-exec-9] Validation failed for field: email. Error message: Email is wrong
2023-08-03 20:35:12,929 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-2] HTTP PATCH http://localhost:9090/users/1
2023-08-03 20:35:12,930 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-2] Accept=[application/json, application/*+json]
2023-08-03 20:35:12,930 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-2] Writing [UserDto(id=0, email=update@user.com, name=update)] as "application/json"
2023-08-03 20:35:12,950 INFO ru.practicum.user.UserServiceImpl [http-nio-9090-exec-3] Обновление: ru.practicum.user.model.User@1dc513c7
2023-08-03 20:35:12,950 INFO ru.practicum.user.UserServiceImpl [http-nio-9090-exec-3] Электронная почта обновлена
2023-08-03 20:35:12,950 INFO ru.practicum.user.UserServiceImpl [http-nio-9090-exec-3] Имя ползователя обновлено
2023-08-03 20:35:12,961 INFO ru.practicum.user.UserController [http-nio-9090-exec-3] Был обновлен: ru.practicum.user.model.User@1dc513c7
2023-08-03 20:35:12,963 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-2] Response 200 OK
2023-08-03 20:35:12,964 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-2] Reading to [java.lang.Object]
2023-08-03 20:35:12,964 INFO ru.practicum.shareit.user.UserController [http-nio-8080-exec-2] Has been updated: <200,{id=1, email=update@user.com, name=update},[Content-Type:"application/json", Transfer-Encoding:"chunked", Date:"Thu, 03 Aug 2023 16:35:12 GMT", Keep-Alive:"timeout=60", Connection:"keep-alive"]>
2023-08-03 20:35:12,987 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-1] HTTP POST http://localhost:9090/users
2023-08-03 20:35:12,987 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-1] Accept=[application/json, application/*+json]
2023-08-03 20:35:12,987 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-1] Writing [UserDto(id=0, email=user@user.com, name=user)] as "application/json"
2023-08-03 20:35:12,992 INFO ru.practicum.user.UserController [http-nio-9090-exec-4] Было создано: ru.practicum.user.model.User@706d8071
2023-08-03 20:35:12,993 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-1] Response 201 CREATED
2023-08-03 20:35:12,994 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-1] Reading to [java.lang.Object]
2023-08-03 20:35:13,019 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-3] HTTP PATCH http://localhost:9090/users/1
2023-08-03 20:35:13,020 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-3] Accept=[application/json, application/*+json]
2023-08-03 20:35:13,020 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-3] Writing [UserDto(id=0, email=null, name=updateName)] as "application/json"
2023-08-03 20:35:13,023 INFO ru.practicum.user.UserServiceImpl [http-nio-9090-exec-5] Обновление: ru.practicum.user.model.User@3e68043
2023-08-03 20:35:13,024 INFO ru.practicum.user.UserServiceImpl [http-nio-9090-exec-5] Имя ползователя обновлено
2023-08-03 20:35:13,025 INFO ru.practicum.user.UserController [http-nio-9090-exec-5] Был обновлен: ru.practicum.user.model.User@3e68043
2023-08-03 20:35:13,027 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-3] Response 200 OK
2023-08-03 20:35:13,027 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-3] Reading to [java.lang.Object]
2023-08-03 20:35:13,028 INFO ru.practicum.shareit.user.UserController [http-nio-8080-exec-3] Has been updated: <200,{id=1, email=update@user.com, name=updateName},[Content-Type:"application/json", Transfer-Encoding:"chunked", Date:"Thu, 03 Aug 2023 16:35:12 GMT", Keep-Alive:"timeout=60", Connection:"keep-alive"]>
2023-08-03 20:35:13,052 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-4] HTTP PATCH http://localhost:9090/users/1
2023-08-03 20:35:13,052 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-4] Accept=[application/json, application/*+json]
2023-08-03 20:35:13,052 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-4] Writing [UserDto(id=0, email=updateName@user.com, name=null)] as "application/json"
2023-08-03 20:35:13,057 INFO ru.practicum.user.UserServiceImpl [http-nio-9090-exec-6] Обновление: ru.practicum.user.model.User@2f386b4
2023-08-03 20:35:13,057 INFO ru.practicum.user.UserServiceImpl [http-nio-9090-exec-6] Электронная почта обновлена
2023-08-03 20:35:13,059 INFO ru.practicum.user.UserController [http-nio-9090-exec-6] Был обновлен: ru.practicum.user.model.User@2f386b4
2023-08-03 20:35:13,060 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-4] Response 200 OK
2023-08-03 20:35:13,061 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-4] Reading to [java.lang.Object]
2023-08-03 20:35:13,061 INFO ru.practicum.shareit.user.UserController [http-nio-8080-exec-4] Has been updated: <200,{id=1, email=updateName@user.com, name=updateName},[Content-Type:"application/json", Transfer-Encoding:"chunked", Date:"Thu, 03 Aug 2023 16:35:12 GMT", Keep-Alive:"timeout=60", Connection:"keep-alive"]>
2023-08-03 20:35:13,084 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-5] HTTP PATCH http://localhost:9090/users/1
2023-08-03 20:35:13,084 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-5] Accept=[application/json, application/*+json]
2023-08-03 20:35:13,085 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-5] Writing [UserDto(id=0, email=updateName@user.com, name=null)] as "application/json"
2023-08-03 20:35:13,087 INFO ru.practicum.user.UserServiceImpl [http-nio-9090-exec-7] Обновление: ru.practicum.user.model.User@17301bd5
2023-08-03 20:35:13,088 INFO ru.practicum.user.UserController [http-nio-9090-exec-7] Был обновлен: ru.practicum.user.model.User@17301bd5
2023-08-03 20:35:13,089 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-5] Response 200 OK
2023-08-03 20:35:13,090 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-5] Reading to [java.lang.Object]
2023-08-03 20:35:13,090 INFO ru.practicum.shareit.user.UserController [http-nio-8080-exec-5] Has been updated: <200,{id=1, email=updateName@user.com, name=updateName},[Content-Type:"application/json", Transfer-Encoding:"chunked", Date:"Thu, 03 Aug 2023 16:35:12 GMT", Keep-Alive:"timeout=60", Connection:"keep-alive"]>
2023-08-03 20:35:13,110 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-7] HTTP PATCH http://localhost:9090/users/1
2023-08-03 20:35:13,111 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-7] Accept=[application/json, application/*+json]
2023-08-03 20:35:13,111 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-7] Writing [UserDto(id=0, email=user@user.com, name=null)] as "application/json"
2023-08-03 20:35:13,114 INFO ru.practicum.user.UserServiceImpl [http-nio-9090-exec-8] Обновление: ru.practicum.user.model.User@21226da5
2023-08-03 20:35:13,114 INFO ru.practicum.user.UserServiceImpl [http-nio-9090-exec-8] Электронная почта обновлена
2023-08-03 20:35:13,115 WARN org.hibernate.engine.jdbc.spi.SqlExceptionHelper [http-nio-9090-exec-8] SQL Error: 23505, SQLState: 23505
2023-08-03 20:35:13,116 ERROR org.hibernate.engine.jdbc.spi.SqlExceptionHelper [http-nio-9090-exec-8] Нарушение уникального индекса или первичного ключа: "PUBLIC.UNIQ_EMAIL_INDEX_4 ON PUBLIC.USERS(EMAIL NULLS FIRST) VALUES ( /* 3 */ 'user@user.com' )"
Unique index or primary key violation: "PUBLIC.UNIQ_EMAIL_INDEX_4 ON PUBLIC.USERS(EMAIL NULLS FIRST) VALUES ( /* 3 */ 'user@user.com' )"; SQL statement:
update users set email=?, name=? where id=? [23505-214]
2023-08-03 20:35:13,116 INFO org.hibernate.engine.jdbc.batch.internal.AbstractBatchImpl [http-nio-9090-exec-8] HHH000010: On release of batch it still contained JDBC statements
2023-08-03 20:35:13,117 INFO ru.practicum.ErrorHandler [http-nio-9090-exec-8] Server error could not execute statement; SQL [n/a]; constraint [null]; nested exception is org.hibernate.exception.ConstraintViolationException: could not execute statement
2023-08-03 20:35:13,119 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-7] Response 500 INTERNAL_SERVER_ERROR
2023-08-03 20:35:13,119 INFO ru.practicum.shareit.user.UserController [http-nio-8080-exec-7] Has been updated: <500 INTERNAL_SERVER_ERROR Internal Server Error,[B@3a73125c,[]>
2023-08-03 20:35:13,139 INFO ru.practicum.shareit.user.UserController [http-nio-8080-exec-8] Request to get user with ID: 1
2023-08-03 20:35:13,140 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-8] HTTP GET http://localhost:9090/users/1
2023-08-03 20:35:13,141 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-8] Accept=[application/json, application/*+json]
2023-08-03 20:35:13,144 INFO ru.practicum.user.UserController [http-nio-9090-exec-9] Запрос на получение пользователя ID: 1
2023-08-03 20:35:13,145 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-9] Setting JDBC Connection [HikariProxyConnection@1546150276 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST] read-only
2023-08-03 20:35:13,147 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-9] Resetting read-only flag of JDBC Connection [HikariProxyConnection@1546150276 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST]
2023-08-03 20:35:13,149 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-8] Response 200 OK
2023-08-03 20:35:13,150 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-8] Reading to [java.lang.Object]
2023-08-03 20:35:13,171 INFO ru.practicum.shareit.user.UserController [http-nio-8080-exec-9] Request to get user with ID: 3
2023-08-03 20:35:13,171 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-9] HTTP GET http://localhost:9090/users/3
2023-08-03 20:35:13,172 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-9] Accept=[application/json, application/*+json]
2023-08-03 20:35:13,174 INFO ru.practicum.user.UserController [http-nio-9090-exec-10] Запрос на получение пользователя ID: 3
2023-08-03 20:35:13,174 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-10] Setting JDBC Connection [HikariProxyConnection@1591593926 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST] read-only
2023-08-03 20:35:13,175 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-10] Resetting read-only flag of JDBC Connection [HikariProxyConnection@1591593926 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST]
2023-08-03 20:35:13,177 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-9] Response 200 OK
2023-08-03 20:35:13,177 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-9] Reading to [java.lang.Object]
2023-08-03 20:35:13,201 INFO ru.practicum.shareit.user.UserController [http-nio-8080-exec-10] Request to get user with ID: 100
2023-08-03 20:35:13,202 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-10] HTTP GET http://localhost:9090/users/100
2023-08-03 20:35:13,202 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-10] Accept=[application/json, application/*+json]
2023-08-03 20:35:13,205 INFO ru.practicum.user.UserController [http-nio-9090-exec-1] Запрос на получение пользователя ID: 100
2023-08-03 20:35:13,205 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-1] Setting JDBC Connection [HikariProxyConnection@232998719 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST] read-only
2023-08-03 20:35:13,207 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-1] Resetting read-only flag of JDBC Connection [HikariProxyConnection@232998719 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST]
2023-08-03 20:35:13,207 INFO ru.practicum.user.UserServiceImpl [http-nio-9090-exec-1] Throw new NotFoundException
2023-08-03 20:35:13,209 INFO ru.practicum.ErrorHandler [http-nio-9090-exec-1] Not found: User with ID: 100 not found
2023-08-03 20:35:13,210 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-10] Response 404 NOT_FOUND
2023-08-03 20:35:13,235 INFO ru.practicum.shareit.user.UserController [http-nio-8080-exec-2] Request to delete with id: 3
2023-08-03 20:35:13,236 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-2] HTTP DELETE http://localhost:9090/users/3
2023-08-03 20:35:13,237 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-2] Accept=[application/json, application/*+json]
2023-08-03 20:35:13,239 INFO ru.practicum.user.UserController [http-nio-9090-exec-2] Запрос на удаление с ID: 3
2023-08-03 20:35:13,247 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-2] Response 204 NO_CONTENT
2023-08-03 20:35:13,266 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-1] HTTP POST http://localhost:9090/users
2023-08-03 20:35:13,267 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-1] Accept=[application/json, application/*+json]
2023-08-03 20:35:13,267 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-1] Writing [UserDto(id=0, email=user@user.com, name=user)] as "application/json"
2023-08-03 20:35:13,271 INFO ru.practicum.user.UserController [http-nio-9090-exec-3] Было создано: ru.practicum.user.model.User@5ad28928
2023-08-03 20:35:13,272 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-1] Response 201 CREATED
2023-08-03 20:35:13,273 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-1] Reading to [java.lang.Object]
2023-08-03 20:35:13,295 INFO ru.practicum.shareit.user.UserController [http-nio-8080-exec-3] Request on get all
2023-08-03 20:35:13,296 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-3] HTTP GET http://localhost:9090/users
2023-08-03 20:35:13,297 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-3] Accept=[application/json, application/*+json]
2023-08-03 20:35:13,299 INFO ru.practicum.user.UserController [http-nio-9090-exec-4] Запрос на получение всего
2023-08-03 20:35:13,300 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-4] Setting JDBC Connection [HikariProxyConnection@602213308 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST] read-only
2023-08-03 20:35:13,309 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-4] Resetting read-only flag of JDBC Connection [HikariProxyConnection@602213308 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST]
2023-08-03 20:35:13,315 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-3] Response 200 OK
2023-08-03 20:35:13,315 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-3] Reading to [java.lang.Object]
2023-08-03 20:35:13,361 INFO ru.practicum.shareit.item.ItemController [http-nio-8080-exec-4] Request on add ItemDto(id=0, name=Дрель, description=Простая дрель, available=true, requestId=null), user id: 1
2023-08-03 20:35:13,367 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-4] HTTP POST http://localhost:9090/items
2023-08-03 20:35:13,368 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-4] Accept=[application/json, application/*+json]
2023-08-03 20:35:13,368 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-4] Writing [ItemDto(id=0, name=Дрель, description=Простая дрель, available=true, requestId=null)] as "application/json"
2023-08-03 20:35:13,375 INFO ru.practicum.item.ItemController [http-nio-9090-exec-5] Запрос на добавление ItemDto(id=0, name=Дрель, description=Простая дрель, available=true, requestId=null), идентификатор пользователя: 1
2023-08-03 20:35:13,391 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-4] Response 200 OK
2023-08-03 20:35:13,392 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-4] Reading to [java.lang.Object]
2023-08-03 20:35:13,417 INFO ru.practicum.shareit.ErrorHandler [http-nio-8080-exec-5] Missing request header: Required request header 'X-Sharer-User-Id' for method parameter type Long is not present
2023-08-03 20:35:13,438 INFO ru.practicum.shareit.item.ItemController [http-nio-8080-exec-6] Request on add ItemDto(id=0, name=Дрель, description=Простая дрель, available=true, requestId=null), user id: 10
2023-08-03 20:35:13,438 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-6] HTTP POST http://localhost:9090/items
2023-08-03 20:35:13,439 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-6] Accept=[application/json, application/*+json]
2023-08-03 20:35:13,439 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-6] Writing [ItemDto(id=0, name=Дрель, description=Простая дрель, available=true, requestId=null)] as "application/json"
2023-08-03 20:35:13,442 INFO ru.practicum.item.ItemController [http-nio-9090-exec-6] Запрос на добавление ItemDto(id=0, name=Дрель, description=Простая дрель, available=true, requestId=null), идентификатор пользователя: 10
2023-08-03 20:35:13,443 INFO ru.practicum.ErrorHandler [http-nio-9090-exec-6] Not found: User with ID: 10 not found
2023-08-03 20:35:13,444 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-6] Response 404 NOT_FOUND
2023-08-03 20:35:13,469 INFO ru.practicum.shareit.ErrorHandler [http-nio-8080-exec-8] Validation failed for field: available. Error message: Available should be specified
2023-08-03 20:35:13,492 INFO ru.practicum.shareit.ErrorHandler [http-nio-8080-exec-10] Validation failed for field: name. Error message: Name can't blank
2023-08-03 20:35:13,511 INFO ru.practicum.shareit.ErrorHandler [http-nio-8080-exec-1] Validation failed for field: description. Error message: Description can't blank
2023-08-03 20:35:13,535 INFO ru.practicum.shareit.item.ItemController [http-nio-8080-exec-4] Request on edit item id: 1, ItemDto(id=1, name=Дрель+, description=Аккумуляторная дрель, available=false, requestId=null), user id: 1
2023-08-03 20:35:13,536 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-4] HTTP PATCH http://localhost:9090/items/1
2023-08-03 20:35:13,536 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-4] Accept=[application/json, application/*+json]
2023-08-03 20:35:13,536 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-4] Writing [ItemDto(id=1, name=Дрель+, description=Аккумуляторная дрель, available=false, requestId=null)] as "application/json"
2023-08-03 20:35:13,539 INFO ru.practicum.item.ItemController [http-nio-9090-exec-7] Запрос на редактирование идентификатора элемента: 1, ItemDto(id=1, name=Дрель+, description=Аккумуляторная дрель, available=false, requestId=null), идентификатор пользователя: 1
2023-08-03 20:35:13,546 INFO ru.practicum.item.ItemServiceImpl [http-nio-9090-exec-7] Обновление: ru.practicum.item.model.Item@32fbf05f
2023-08-03 20:35:13,547 INFO ru.practicum.item.ItemServiceImpl [http-nio-9090-exec-7] Название обновлено
2023-08-03 20:35:13,547 INFO ru.practicum.item.ItemServiceImpl [http-nio-9090-exec-7] Описание обновлено
2023-08-03 20:35:13,548 INFO ru.practicum.item.ItemServiceImpl [http-nio-9090-exec-7] Доступность обновлена
2023-08-03 20:35:13,551 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-4] Response 200 OK
2023-08-03 20:35:13,552 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-4] Reading to [java.lang.Object]
2023-08-03 20:35:13,574 INFO ru.practicum.shareit.ErrorHandler [http-nio-8080-exec-5] Missing request header: Required request header 'X-Sharer-User-Id' for method parameter type Long is not present
2023-08-03 20:35:13,593 INFO ru.practicum.shareit.item.ItemController [http-nio-8080-exec-6] Request on edit item id: 1, ItemDto(id=0, name=Дрель, description=Простая дрель, available=false, requestId=null), user id: 3
2023-08-03 20:35:13,594 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-6] HTTP PATCH http://localhost:9090/items/1
2023-08-03 20:35:13,594 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-6] Accept=[application/json, application/*+json]
2023-08-03 20:35:13,594 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-6] Writing [ItemDto(id=0, name=Дрель, description=Простая дрель, available=false, requestId=null)] as "application/json"
2023-08-03 20:35:13,597 INFO ru.practicum.item.ItemController [http-nio-9090-exec-8] Запрос на редактирование идентификатора элемента: 1, ItemDto(id=0, name=Дрель, description=Простая дрель, available=false, requestId=null), идентификатор пользователя: 3
2023-08-03 20:35:13,598 INFO ru.practicum.item.ItemServiceImpl [http-nio-9090-exec-8] Обновление: ru.practicum.item.model.Item@41e00c
2023-08-03 20:35:13,599 INFO ru.practicum.ErrorHandler [http-nio-9090-exec-8] Not found: Пользователь не является владельцем элемента
2023-08-03 20:35:13,600 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-6] Response 404 NOT_FOUND
2023-08-03 20:35:13,620 INFO ru.practicum.shareit.item.ItemController [http-nio-8080-exec-8] Request on edit item id: 1, ItemDto(id=0, name=null, description=null, available=true, requestId=null), user id: 1
2023-08-03 20:35:13,621 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-8] HTTP PATCH http://localhost:9090/items/1
2023-08-03 20:35:13,621 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-8] Accept=[application/json, application/*+json]
2023-08-03 20:35:13,621 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-8] Writing [ItemDto(id=0, name=null, description=null, available=true, requestId=null)] as "application/json"
2023-08-03 20:35:13,623 INFO ru.practicum.item.ItemController [http-nio-9090-exec-9] Запрос на редактирование идентификатора элемента: 1, ItemDto(id=0, name=null, description=null, available=true, requestId=null), идентификатор пользователя: 1
2023-08-03 20:35:13,625 INFO ru.practicum.item.ItemServiceImpl [http-nio-9090-exec-9] Обновление: ru.practicum.item.model.Item@74da811a
2023-08-03 20:35:13,625 INFO ru.practicum.item.ItemServiceImpl [http-nio-9090-exec-9] Доступность обновлена
2023-08-03 20:35:13,627 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-8] Response 200 OK
2023-08-03 20:35:13,628 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-8] Reading to [java.lang.Object]
2023-08-03 20:35:13,652 INFO ru.practicum.shareit.item.ItemController [http-nio-8080-exec-9] Request on edit item id: 1, ItemDto(id=0, name=null, description=Аккумуляторная дрель + аккумулятор, available=null, requestId=null), user id: 1
2023-08-03 20:35:13,653 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-9] HTTP PATCH http://localhost:9090/items/1
2023-08-03 20:35:13,653 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-9] Accept=[application/json, application/*+json]
2023-08-03 20:35:13,654 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-9] Writing [ItemDto(id=0, name=null, description=Аккумуляторная дрель + аккумулятор, available=null, requestId=null)] as "application/json"
2023-08-03 20:35:13,657 INFO ru.practicum.item.ItemController [http-nio-9090-exec-10] Запрос на редактирование идентификатора элемента: 1, ItemDto(id=0, name=null, description=Аккумуляторная дрель + аккумулятор, available=null, requestId=null), идентификатор пользователя: 1
2023-08-03 20:35:13,658 INFO ru.practicum.item.ItemServiceImpl [http-nio-9090-exec-10] Обновление: ru.practicum.item.model.Item@592551ff
2023-08-03 20:35:13,659 INFO ru.practicum.item.ItemServiceImpl [http-nio-9090-exec-10] Описание обновлено
2023-08-03 20:35:13,662 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-9] Response 200 OK
2023-08-03 20:35:13,662 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-9] Reading to [java.lang.Object]
2023-08-03 20:35:13,686 INFO ru.practicum.shareit.item.ItemController [http-nio-8080-exec-10] Request on edit item id: 1, ItemDto(id=0, name=Аккумуляторная дрель, description=null, available=null, requestId=null), user id: 1
2023-08-03 20:35:13,687 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-10] HTTP PATCH http://localhost:9090/items/1
2023-08-03 20:35:13,688 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-10] Accept=[application/json, application/*+json]
2023-08-03 20:35:13,688 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-10] Writing [ItemDto(id=0, name=Аккумуляторная дрель, description=null, available=null, requestId=null)] as "application/json"
2023-08-03 20:35:13,690 INFO ru.practicum.item.ItemController [http-nio-9090-exec-1] Запрос на редактирование идентификатора элемента: 1, ItemDto(id=0, name=Аккумуляторная дрель, description=null, available=null, requestId=null), идентификатор пользователя: 1
2023-08-03 20:35:13,692 INFO ru.practicum.item.ItemServiceImpl [http-nio-9090-exec-1] Обновление: ru.practicum.item.model.Item@685020b0
2023-08-03 20:35:13,692 INFO ru.practicum.item.ItemServiceImpl [http-nio-9090-exec-1] Название обновлено
2023-08-03 20:35:13,694 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-10] Response 200 OK
2023-08-03 20:35:13,695 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-10] Reading to [java.lang.Object]
2023-08-03 20:35:13,718 INFO ru.practicum.shareit.item.ItemController [http-nio-8080-exec-2] Request from user ID: 1 on get item. ID: 1
2023-08-03 20:35:13,718 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-2] HTTP GET http://localhost:9090/items/1
2023-08-03 20:35:13,718 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-2] Accept=[application/json, application/*+json]
2023-08-03 20:35:13,720 INFO ru.practicum.item.ItemController [http-nio-9090-exec-2] Запрос от идентификатора пользователя: 1 при получении элемента. Идентификатор: 1
2023-08-03 20:35:13,721 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-2] Setting JDBC Connection [HikariProxyConnection@1801286996 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST] read-only
2023-08-03 20:35:13,722 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-2] Resetting read-only flag of JDBC Connection [HikariProxyConnection@1801286996 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST]
2023-08-03 20:35:13,745 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-2] Response 200 OK
2023-08-03 20:35:13,745 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-2] Reading to [java.lang.Object]
2023-08-03 20:35:13,763 INFO ru.practicum.shareit.item.ItemController [http-nio-8080-exec-1] Request from user ID: 4 on get item. ID: 1
2023-08-03 20:35:13,763 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-1] HTTP GET http://localhost:9090/items/1
2023-08-03 20:35:13,764 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-1] Accept=[application/json, application/*+json]
2023-08-03 20:35:13,766 INFO ru.practicum.item.ItemController [http-nio-9090-exec-3] Запрос от идентификатора пользователя: 4 при получении элемента. Идентификатор: 1
2023-08-03 20:35:13,766 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-3] Setting JDBC Connection [HikariProxyConnection@152823473 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST] read-only
2023-08-03 20:35:13,767 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-3] Resetting read-only flag of JDBC Connection [HikariProxyConnection@152823473 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST]
2023-08-03 20:35:13,769 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-1] Response 200 OK
2023-08-03 20:35:13,769 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-1] Reading to [java.lang.Object]
2023-08-03 20:35:13,789 INFO ru.practicum.shareit.item.ItemController [http-nio-8080-exec-3] Request from user ID: 4 on get item. ID: 100
2023-08-03 20:35:13,790 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-3] HTTP GET http://localhost:9090/items/100
2023-08-03 20:35:13,790 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-3] Accept=[application/json, application/*+json]
2023-08-03 20:35:13,791 INFO ru.practicum.item.ItemController [http-nio-9090-exec-4] Запрос от идентификатора пользователя: 4 при получении элемента. Идентификатор: 100
2023-08-03 20:35:13,792 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-4] Setting JDBC Connection [HikariProxyConnection@425264048 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST] read-only
2023-08-03 20:35:13,792 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-4] Resetting read-only flag of JDBC Connection [HikariProxyConnection@425264048 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST]
2023-08-03 20:35:13,793 INFO ru.practicum.ErrorHandler [http-nio-9090-exec-4] Not found: Вещь не найдена
2023-08-03 20:35:13,794 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-3] Response 404 NOT_FOUND
2023-08-03 20:35:13,813 INFO ru.practicum.shareit.item.ItemController [http-nio-8080-exec-4] Request on add ItemDto(id=0, name=Отвертка, description=Аккумуляторная отвертка, available=true, requestId=null), user id: 4
2023-08-03 20:35:13,814 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-4] HTTP POST http://localhost:9090/items
2023-08-03 20:35:13,814 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-4] Accept=[application/json, application/*+json]
2023-08-03 20:35:13,814 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-4] Writing [ItemDto(id=0, name=Отвертка, description=Аккумуляторная отвертка, available=true, requestId=null)] as "application/json"
2023-08-03 20:35:13,816 INFO ru.practicum.item.ItemController [http-nio-9090-exec-5] Запрос на добавление ItemDto(id=0, name=Отвертка, description=Аккумуляторная отвертка, available=true, requestId=null), идентификатор пользователя: 4
2023-08-03 20:35:13,820 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-4] Response 200 OK
2023-08-03 20:35:13,821 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-4] Reading to [java.lang.Object]
2023-08-03 20:35:13,842 INFO ru.practicum.shareit.item.ItemController [http-nio-8080-exec-5] Request on add ItemDto(id=0, name=Клей Момент, description=Тюбик суперклея марки Момент, available=true, requestId=null), user id: 4
2023-08-03 20:35:13,842 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-5] HTTP POST http://localhost:9090/items
2023-08-03 20:35:13,843 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-5] Accept=[application/json, application/*+json]
2023-08-03 20:35:13,843 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-5] Writing [ItemDto(id=0, name=Клей Момент, description=Тюбик суперклея марки Момент, available=true, requestId=null)] as "application/json"
2023-08-03 20:35:13,847 INFO ru.practicum.item.ItemController [http-nio-9090-exec-6] Запрос на добавление ItemDto(id=0, name=Клей Момент, description=Тюбик суперклея марки Момент, available=true, requestId=null), идентификатор пользователя: 4
2023-08-03 20:35:13,851 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-5] Response 200 OK
2023-08-03 20:35:13,852 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-5] Reading to [java.lang.Object]
2023-08-03 20:35:13,873 INFO ru.practicum.shareit.item.ItemController [http-nio-8080-exec-7] Request on get all for user id: 1
2023-08-03 20:35:13,874 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-7] HTTP GET http://localhost:9090/items?from=0&size=20
2023-08-03 20:35:13,874 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-7] Accept=[application/json, application/*+json]
2023-08-03 20:35:13,882 INFO ru.practicum.item.ItemController [http-nio-9090-exec-7] Запрос на получение всего для идентификатора пользователя: 1
2023-08-03 20:35:13,883 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-7] Setting JDBC Connection [HikariProxyConnection@1322076015 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST] read-only
2023-08-03 20:35:13,884 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-7] Resetting read-only flag of JDBC Connection [HikariProxyConnection@1322076015 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST]
2023-08-03 20:35:13,908 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-7] Response 200 OK
2023-08-03 20:35:13,909 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-7] Reading to [java.lang.Object]
2023-08-03 20:35:13,933 INFO ru.practicum.shareit.item.ItemController [http-nio-8080-exec-6] Request on get all for user id: 4
2023-08-03 20:35:13,934 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-6] HTTP GET http://localhost:9090/items?from=0&size=20
2023-08-03 20:35:13,934 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-6] Accept=[application/json, application/*+json]
2023-08-03 20:35:13,936 INFO ru.practicum.item.ItemController [http-nio-9090-exec-8] Запрос на получение всего для идентификатора пользователя: 4
2023-08-03 20:35:13,936 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-8] Setting JDBC Connection [HikariProxyConnection@852692610 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST] read-only
2023-08-03 20:35:13,937 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-8] Resetting read-only flag of JDBC Connection [HikariProxyConnection@852692610 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST]
2023-08-03 20:35:13,949 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-6] Response 200 OK
2023-08-03 20:35:13,949 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-6] Reading to [java.lang.Object]
2023-08-03 20:35:13,973 INFO ru.practicum.shareit.item.ItemController [http-nio-8080-exec-8] Request on search text: аккУМУляторная
2023-08-03 20:35:13,974 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-8] HTTP GET http://localhost:9090/items/search?text=%D0%B0%D0%BA%D0%BA%D1%83%D0%BC%D1%83%D0%BB%D1%8F%D1%82%D0%BE%D1%80%D0%BD%D0%B0%D1%8F&from=0&size=20
2023-08-03 20:35:13,975 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-8] Accept=[application/json, application/*+json]
2023-08-03 20:35:13,985 INFO ru.practicum.item.ItemController [http-nio-9090-exec-9] Запрос по поисковому тексту: аккумуляторная
2023-08-03 20:35:13,993 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-8] Response 200 OK
2023-08-03 20:35:13,994 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-8] Reading to [java.lang.Object]
2023-08-03 20:35:14,018 INFO ru.practicum.shareit.item.ItemController [http-nio-8080-exec-9] Request on edit item id: 2, ItemDto(id=0, name=null, description=null, available=false, requestId=null), user id: 4
2023-08-03 20:35:14,018 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-9] HTTP PATCH http://localhost:9090/items/2
2023-08-03 20:35:14,018 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-9] Accept=[application/json, application/*+json]
2023-08-03 20:35:14,019 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-9] Writing [ItemDto(id=0, name=null, description=null, available=false, requestId=null)] as "application/json"
2023-08-03 20:35:14,021 INFO ru.practicum.item.ItemController [http-nio-9090-exec-10] Запрос на редактирование идентификатора элемента: 2, ItemDto(id=0, name=null, description=null, available=false, requestId=null), идентификатор пользователя: 4
2023-08-03 20:35:14,023 INFO ru.practicum.item.ItemServiceImpl [http-nio-9090-exec-10] Обновление: ru.practicum.item.model.Item@754646a8
2023-08-03 20:35:14,023 INFO ru.practicum.item.ItemServiceImpl [http-nio-9090-exec-10] Доступность обновлена
2023-08-03 20:35:14,027 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-9] Response 200 OK
2023-08-03 20:35:14,027 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-9] Reading to [java.lang.Object]
2023-08-03 20:35:14,049 INFO ru.practicum.shareit.item.ItemController [http-nio-8080-exec-10] Request on search text: дРелЬ
2023-08-03 20:35:14,050 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-10] HTTP GET http://localhost:9090/items/search?text=%D0%B4%D1%80%D0%B5%D0%BB%D1%8C&from=0&size=20
2023-08-03 20:35:14,050 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-10] Accept=[application/json, application/*+json]
2023-08-03 20:35:14,052 INFO ru.practicum.item.ItemController [http-nio-9090-exec-1] Запрос по поисковому тексту: дрель
2023-08-03 20:35:14,055 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-10] Response 200 OK
2023-08-03 20:35:14,055 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-10] Reading to [java.lang.Object]
2023-08-03 20:35:14,079 INFO ru.practicum.shareit.item.ItemController [http-nio-8080-exec-2] Request on search text: аккУМУляторная
2023-08-03 20:35:14,080 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-2] HTTP GET http://localhost:9090/items/search?text=%D0%B0%D0%BA%D0%BA%D1%83%D0%BC%D1%83%D0%BB%D1%8F%D1%82%D0%BE%D1%80%D0%BD%D0%B0%D1%8F&from=0&size=20
2023-08-03 20:35:14,081 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-2] Accept=[application/json, application/*+json]
2023-08-03 20:35:14,083 INFO ru.practicum.item.ItemController [http-nio-9090-exec-2] Запрос по поисковому тексту: аккумуляторная
2023-08-03 20:35:14,086 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-2] Response 200 OK
2023-08-03 20:35:14,087 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-2] Reading to [java.lang.Object]
2023-08-03 20:35:14,108 INFO ru.practicum.shareit.item.ItemController [http-nio-8080-exec-1] Request on edit item id: 2, ItemDto(id=0, name=null, description=null, available=true, requestId=null), user id: 4
2023-08-03 20:35:14,109 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-1] HTTP PATCH http://localhost:9090/items/2
2023-08-03 20:35:14,109 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-1] Accept=[application/json, application/*+json]
2023-08-03 20:35:14,109 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-1] Writing [ItemDto(id=0, name=null, description=null, available=true, requestId=null)] as "application/json"
2023-08-03 20:35:14,111 INFO ru.practicum.item.ItemController [http-nio-9090-exec-3] Запрос на редактирование идентификатора элемента: 2, ItemDto(id=0, name=null, description=null, available=true, requestId=null), идентификатор пользователя: 4
2023-08-03 20:35:14,113 INFO ru.practicum.item.ItemServiceImpl [http-nio-9090-exec-3] Обновление: ru.practicum.item.model.Item@22b92bae
2023-08-03 20:35:14,113 INFO ru.practicum.item.ItemServiceImpl [http-nio-9090-exec-3] Доступность обновлена
2023-08-03 20:35:14,123 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-1] Response 200 OK
2023-08-03 20:35:14,124 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-1] Reading to [java.lang.Object]
2023-08-03 20:35:14,146 INFO ru.practicum.shareit.item.ItemController [http-nio-8080-exec-3] Request on search text: оТверТ
2023-08-03 20:35:14,147 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-3] HTTP GET http://localhost:9090/items/search?text=%D0%BE%D1%82%D0%B2%D0%B5%D1%80%D1%82&from=0&size=20
2023-08-03 20:35:14,148 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-3] Accept=[application/json, application/*+json]
2023-08-03 20:35:14,151 INFO ru.practicum.item.ItemController [http-nio-9090-exec-4] Запрос по поисковому тексту: отверт
2023-08-03 20:35:14,153 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-3] Response 200 OK
2023-08-03 20:35:14,153 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-3] Reading to [java.lang.Object]
2023-08-03 20:35:14,171 INFO ru.practicum.shareit.item.ItemController [http-nio-8080-exec-4] Request on search text: 
2023-08-03 20:35:14,191 INFO ru.practicum.shareit.item.ItemController [http-nio-8080-exec-5] Request on edit item id: 2, ItemDto(id=0, name=null, description=null, available=false, requestId=null), user id: 4
2023-08-03 20:35:14,191 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-5] HTTP PATCH http://localhost:9090/items/2
2023-08-03 20:35:14,192 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-5] Accept=[application/json, application/*+json]
2023-08-03 20:35:14,192 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-5] Writing [ItemDto(id=0, name=null, description=null, available=false, requestId=null)] as "application/json"
2023-08-03 20:35:14,194 INFO ru.practicum.item.ItemController [http-nio-9090-exec-5] Запрос на редактирование идентификатора элемента: 2, ItemDto(id=0, name=null, description=null, available=false, requestId=null), идентификатор пользователя: 4
2023-08-03 20:35:14,195 INFO ru.practicum.item.ItemServiceImpl [http-nio-9090-exec-5] Обновление: ru.practicum.item.model.Item@562207a5
2023-08-03 20:35:14,195 INFO ru.practicum.item.ItemServiceImpl [http-nio-9090-exec-5] Доступность обновлена
2023-08-03 20:35:14,197 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-5] Response 200 OK
2023-08-03 20:35:14,198 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-5] Reading to [java.lang.Object]
2023-08-03 20:35:14,244 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-7] HTTP POST http://localhost:9090/bookings
2023-08-03 20:35:14,245 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-7] Accept=[application/json, application/*+json]
2023-08-03 20:35:14,250 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-7] Writing [BookingDto(id=0, itemId=2, start=2023-08-04T20:35:14, end=2023-08-05T20:35:14, status=null, booker=null)] as "application/json"
2023-08-03 20:35:14,268 INFO ru.practicum.ErrorHandler [http-nio-9090-exec-6] Not available: Элемент с идентификатором: 2 недоступен
2023-08-03 20:35:14,269 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-7] Response 400 BAD_REQUEST
2023-08-03 20:35:14,292 INFO ru.practicum.shareit.item.ItemController [http-nio-8080-exec-8] Request on edit item id: 2, ItemDto(id=0, name=null, description=null, available=true, requestId=null), user id: 4
2023-08-03 20:35:14,292 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-8] HTTP PATCH http://localhost:9090/items/2
2023-08-03 20:35:14,292 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-8] Accept=[application/json, application/*+json]
2023-08-03 20:35:14,293 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-8] Writing [ItemDto(id=0, name=null, description=null, available=true, requestId=null)] as "application/json"
2023-08-03 20:35:14,295 INFO ru.practicum.item.ItemController [http-nio-9090-exec-7] Запрос на редактирование идентификатора элемента: 2, ItemDto(id=0, name=null, description=null, available=true, requestId=null), идентификатор пользователя: 4
2023-08-03 20:35:14,297 INFO ru.practicum.item.ItemServiceImpl [http-nio-9090-exec-7] Обновление: ru.practicum.item.model.Item@72298780
2023-08-03 20:35:14,298 INFO ru.practicum.item.ItemServiceImpl [http-nio-9090-exec-7] Доступность обновлена
2023-08-03 20:35:14,302 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-8] Response 200 OK
2023-08-03 20:35:14,302 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-8] Reading to [java.lang.Object]
2023-08-03 20:35:14,325 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-9] HTTP POST http://localhost:9090/bookings
2023-08-03 20:35:14,326 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-9] Accept=[application/json, application/*+json]
2023-08-03 20:35:14,326 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-9] Writing [BookingDto(id=0, itemId=2, start=2023-08-04T20:35:14, end=2023-08-05T20:35:14, status=null, booker=null)] as "application/json"
2023-08-03 20:35:14,330 INFO ru.practicum.ErrorHandler [http-nio-9090-exec-8] Not found: User with ID: 100 not found
2023-08-03 20:35:14,332 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-9] Response 404 NOT_FOUND
2023-08-03 20:35:14,361 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-10] HTTP POST http://localhost:9090/bookings
2023-08-03 20:35:14,362 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-10] Accept=[application/json, application/*+json]
2023-08-03 20:35:14,362 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-10] Writing [BookingDto(id=0, itemId=200, start=2023-08-04T20:35:14, end=2023-08-05T20:35:14, status=null, booker=null)] as "application/json"
2023-08-03 20:35:14,366 INFO ru.practicum.ErrorHandler [http-nio-9090-exec-9] Not found: Элемент с идентификатором:200 не найден
2023-08-03 20:35:14,367 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-10] Response 404 NOT_FOUND
2023-08-03 20:35:14,401 INFO ru.practicum.shareit.ErrorHandler [http-nio-8080-exec-2] Validation failed for field: end. Error message: должно содержать дату, которая еще не наступила
2023-08-03 20:35:14,402 INFO ru.practicum.shareit.ErrorHandler [http-nio-8080-exec-2] Validation failed for field: validDateOrder. Error message: End date must be after start date and dates cannot be equal
2023-08-03 20:35:14,426 INFO ru.practicum.shareit.ErrorHandler [http-nio-8080-exec-3] Validation failed for field: validDateOrder. Error message: End date must be after start date and dates cannot be equal
2023-08-03 20:35:14,448 INFO ru.practicum.shareit.ErrorHandler [http-nio-8080-exec-5] Validation failed for field: validDateOrder. Error message: End date must be after start date and dates cannot be equal
2023-08-03 20:35:14,471 INFO ru.practicum.shareit.ErrorHandler [http-nio-8080-exec-6] Validation failed for field: start. Error message: не должно равняться null
2023-08-03 20:35:14,472 INFO ru.practicum.shareit.ErrorHandler [http-nio-8080-exec-6] Validation failed for field: validDateOrder. Error message: End date must be after start date and dates cannot be equal
2023-08-03 20:35:14,498 INFO ru.practicum.shareit.ErrorHandler [http-nio-8080-exec-9] Validation failed for field: validDateOrder. Error message: End date must be after start date and dates cannot be equal
2023-08-03 20:35:14,498 INFO ru.practicum.shareit.ErrorHandler [http-nio-8080-exec-9] Validation failed for field: end. Error message: не должно равняться null
2023-08-03 20:35:14,523 INFO ru.practicum.shareit.ErrorHandler [http-nio-8080-exec-2] Validation failed for field: start. Error message: должно содержать сегодняшнее число или дату, которая еще не наступила
2023-08-03 20:35:14,545 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-3] HTTP POST http://localhost:9090/bookings
2023-08-03 20:35:14,546 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-3] Accept=[application/json, application/*+json]
2023-08-03 20:35:14,546 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-3] Writing [BookingDto(id=0, itemId=2, start=2023-08-03T20:35:17, end=2023-08-03T20:35:18, status=null, booker=null)] as "application/json"
2023-08-03 20:35:14,563 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-3] Response 200 OK
2023-08-03 20:35:14,564 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-3] Reading to [java.lang.Object]
2023-08-03 20:35:14,584 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-4] HTTP PATCH http://localhost:9090/bookings/1?approved=true
2023-08-03 20:35:14,585 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-4] Accept=[application/json, application/*+json]
2023-08-03 20:35:14,593 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-4] Response 200 OK
2023-08-03 20:35:14,594 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-4] Reading to [java.lang.Object]
2023-08-03 20:35:14,614 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-5] HTTP POST http://localhost:9090/bookings
2023-08-03 20:35:14,615 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-5] Accept=[application/json, application/*+json]
2023-08-03 20:35:14,615 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-5] Writing [BookingDto(id=0, itemId=2, start=2023-08-04T20:35:14, end=2023-08-05T20:35:14, status=null, booker=null)] as "application/json"
2023-08-03 20:35:14,621 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-5] Response 200 OK
2023-08-03 20:35:14,621 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-5] Reading to [java.lang.Object]
2023-08-03 20:35:14,645 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-7] HTTP GET http://localhost:9090/bookings/2
2023-08-03 20:35:14,646 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-7] Accept=[application/json, application/*+json]
2023-08-03 20:35:14,648 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-3] Setting JDBC Connection [HikariProxyConnection@1828114632 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST] read-only
2023-08-03 20:35:14,649 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-3] Resetting read-only flag of JDBC Connection [HikariProxyConnection@1828114632 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST]
2023-08-03 20:35:14,650 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-3] Setting JDBC Connection [HikariProxyConnection@1828114632 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST] read-only
2023-08-03 20:35:14,650 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-3] Resetting read-only flag of JDBC Connection [HikariProxyConnection@1828114632 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST]
2023-08-03 20:35:14,652 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-7] Response 200 OK
2023-08-03 20:35:14,653 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-7] Reading to [java.lang.Object]
2023-08-03 20:35:14,674 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-6] HTTP GET http://localhost:9090/bookings/2
2023-08-03 20:35:14,674 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-6] Accept=[application/json, application/*+json]
2023-08-03 20:35:14,676 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-4] Setting JDBC Connection [HikariProxyConnection@562954794 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST] read-only
2023-08-03 20:35:14,678 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-4] Resetting read-only flag of JDBC Connection [HikariProxyConnection@562954794 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST]
2023-08-03 20:35:14,678 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-4] Setting JDBC Connection [HikariProxyConnection@562954794 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST] read-only
2023-08-03 20:35:14,679 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-4] Resetting read-only flag of JDBC Connection [HikariProxyConnection@562954794 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST]
2023-08-03 20:35:14,681 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-6] Response 200 OK
2023-08-03 20:35:14,682 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-6] Reading to [java.lang.Object]
2023-08-03 20:35:14,705 INFO ru.practicum.shareit.booking.BookingController [http-nio-8080-exec-8] Get booking with state ALL, userId=100, from=0, size=20
2023-08-03 20:35:14,706 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-8] HTTP GET http://localhost:9090/bookings?state=ALL&from=0&size=20
2023-08-03 20:35:14,706 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-8] Accept=[application/json, application/*+json]
2023-08-03 20:35:14,710 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-5] Setting JDBC Connection [HikariProxyConnection@1643460171 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST] read-only
2023-08-03 20:35:14,711 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-5] Resetting read-only flag of JDBC Connection [HikariProxyConnection@1643460171 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST]
2023-08-03 20:35:14,712 INFO ru.practicum.ErrorHandler [http-nio-9090-exec-5] Not found: User with ID: 100 not found
2023-08-03 20:35:14,713 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-8] Response 404 NOT_FOUND
2023-08-03 20:35:14,734 INFO ru.practicum.shareit.booking.BookingController [http-nio-8080-exec-9] Get booking with state ALL, userId=100, from=0, size=20
2023-08-03 20:35:14,734 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-9] HTTP GET http://localhost:9090/bookings/owner?state=ALL&from=0&size=20
2023-08-03 20:35:14,735 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-9] Accept=[application/json, application/*+json]
2023-08-03 20:35:14,738 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-6] Setting JDBC Connection [HikariProxyConnection@416127773 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST] read-only
2023-08-03 20:35:14,739 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-6] Resetting read-only flag of JDBC Connection [HikariProxyConnection@416127773 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST]
2023-08-03 20:35:14,740 INFO ru.practicum.ErrorHandler [http-nio-9090-exec-6] Not found: User with ID: 100 not found
2023-08-03 20:35:14,741 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-9] Response 404 NOT_FOUND
2023-08-03 20:35:14,759 INFO ru.practicum.shareit.booking.BookingController [http-nio-8080-exec-10] Get booking with state ALL, userId=1, from=0, size=20
2023-08-03 20:35:14,760 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-10] HTTP GET http://localhost:9090/bookings?state=ALL&from=0&size=20
2023-08-03 20:35:14,760 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-10] Accept=[application/json, application/*+json]
2023-08-03 20:35:14,763 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-7] Setting JDBC Connection [HikariProxyConnection@85872076 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST] read-only
2023-08-03 20:35:14,765 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-7] Resetting read-only flag of JDBC Connection [HikariProxyConnection@85872076 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST]
2023-08-03 20:35:14,770 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-10] Response 200 OK
2023-08-03 20:35:14,770 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-10] Reading to [java.lang.Object]
2023-08-03 20:35:14,794 INFO ru.practicum.shareit.booking.BookingController [http-nio-8080-exec-2] Get booking with state ALL, userId=1, from=0, size=20
2023-08-03 20:35:14,795 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-2] HTTP GET http://localhost:9090/bookings?state=ALL&from=0&size=20
2023-08-03 20:35:14,795 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-2] Accept=[application/json, application/*+json]
2023-08-03 20:35:14,798 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-8] Setting JDBC Connection [HikariProxyConnection@2067208050 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST] read-only
2023-08-03 20:35:14,799 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-8] Resetting read-only flag of JDBC Connection [HikariProxyConnection@2067208050 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST]
2023-08-03 20:35:14,801 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-2] Response 200 OK
2023-08-03 20:35:14,802 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-2] Reading to [java.lang.Object]
2023-08-03 20:35:14,825 INFO ru.practicum.shareit.booking.BookingController [http-nio-8080-exec-1] Get booking with state FUTURE, userId=1, from=0, size=20
2023-08-03 20:35:14,825 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-1] HTTP GET http://localhost:9090/bookings?state=FUTURE&from=0&size=20
2023-08-03 20:35:14,826 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-1] Accept=[application/json, application/*+json]
2023-08-03 20:35:14,827 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-9] Setting JDBC Connection [HikariProxyConnection@1448245934 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST] read-only
2023-08-03 20:35:14,828 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-9] Resetting read-only flag of JDBC Connection [HikariProxyConnection@1448245934 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST]
2023-08-03 20:35:14,832 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-1] Response 200 OK
2023-08-03 20:35:14,832 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-1] Reading to [java.lang.Object]
2023-08-03 20:35:14,870 INFO ru.practicum.shareit.ErrorHandler [http-nio-8080-exec-3] Bad booking state: Unknown state: UNSUPPORTED_STATUS
2023-08-03 20:35:14,891 INFO ru.practicum.shareit.booking.BookingController [http-nio-8080-exec-5] Get booking with state ALL, userId=4, from=0, size=20
2023-08-03 20:35:14,891 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-5] HTTP GET http://localhost:9090/bookings/owner?state=ALL&from=0&size=20
2023-08-03 20:35:14,892 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-5] Accept=[application/json, application/*+json]
2023-08-03 20:35:14,894 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-10] Setting JDBC Connection [HikariProxyConnection@1388915108 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST] read-only
2023-08-03 20:35:14,896 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-10] Resetting read-only flag of JDBC Connection [HikariProxyConnection@1388915108 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST]
2023-08-03 20:35:14,902 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-5] Response 200 OK
2023-08-03 20:35:14,902 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-5] Reading to [java.lang.Object]
2023-08-03 20:35:14,928 INFO ru.practicum.shareit.booking.BookingController [http-nio-8080-exec-7] Get booking with state ALL, userId=4, from=0, size=20
2023-08-03 20:35:14,929 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-7] HTTP GET http://localhost:9090/bookings/owner?state=ALL&from=0&size=20
2023-08-03 20:35:14,929 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-7] Accept=[application/json, application/*+json]
2023-08-03 20:35:14,932 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-1] Setting JDBC Connection [HikariProxyConnection@1296250576 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST] read-only
2023-08-03 20:35:14,933 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-1] Resetting read-only flag of JDBC Connection [HikariProxyConnection@1296250576 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST]
2023-08-03 20:35:14,937 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-7] Response 200 OK
2023-08-03 20:35:14,937 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-7] Reading to [java.lang.Object]
2023-08-03 20:35:14,970 INFO ru.practicum.shareit.booking.BookingController [http-nio-8080-exec-6] Get booking with state FUTURE, userId=4, from=0, size=20
2023-08-03 20:35:14,970 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-6] HTTP GET http://localhost:9090/bookings/owner?state=FUTURE&from=0&size=20
2023-08-03 20:35:14,971 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-6] Accept=[application/json, application/*+json]
2023-08-03 20:35:14,973 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-2] Setting JDBC Connection [HikariProxyConnection@827923700 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST] read-only
2023-08-03 20:35:14,975 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-2] Resetting read-only flag of JDBC Connection [HikariProxyConnection@827923700 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST]
2023-08-03 20:35:14,981 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-6] Response 200 OK
2023-08-03 20:35:14,981 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-6] Reading to [java.lang.Object]
2023-08-03 20:35:15,007 INFO ru.practicum.shareit.ErrorHandler [http-nio-8080-exec-8] Bad booking state: Unknown state: UNSUPPORTED_STATUS
2023-08-03 20:35:15,025 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-10] HTTP GET http://localhost:9090/bookings/1000
2023-08-03 20:35:15,025 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-10] Accept=[application/json, application/*+json]
2023-08-03 20:35:15,027 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-3] Setting JDBC Connection [HikariProxyConnection@335063977 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST] read-only
2023-08-03 20:35:15,028 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-3] Resetting read-only flag of JDBC Connection [HikariProxyConnection@335063977 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST]
2023-08-03 20:35:15,028 INFO ru.practicum.ErrorHandler [http-nio-9090-exec-3] Not found: Бронирование: 1 000 не найдено
2023-08-03 20:35:15,030 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-10] Response 404 NOT_FOUND
2023-08-03 20:35:15,053 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-2] HTTP POST http://localhost:9090/users
2023-08-03 20:35:15,054 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-2] Accept=[application/json, application/*+json]
2023-08-03 20:35:15,054 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-2] Writing [UserDto(id=0, email=other@other.com, name=other)] as "application/json"
2023-08-03 20:35:15,057 INFO ru.practicum.user.UserController [http-nio-9090-exec-4] Было создано: ru.practicum.user.model.User@2cc86d1
2023-08-03 20:35:15,058 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-2] Response 201 CREATED
2023-08-03 20:35:15,058 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-2] Reading to [java.lang.Object]
2023-08-03 20:35:15,081 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-1] HTTP GET http://localhost:9090/bookings/1
2023-08-03 20:35:15,081 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-1] Accept=[application/json, application/*+json]
2023-08-03 20:35:15,083 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-5] Setting JDBC Connection [HikariProxyConnection@555197776 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST] read-only
2023-08-03 20:35:15,085 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-5] Resetting read-only flag of JDBC Connection [HikariProxyConnection@555197776 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST]
2023-08-03 20:35:15,086 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-5] Setting JDBC Connection [HikariProxyConnection@555197776 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST] read-only
2023-08-03 20:35:15,087 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-5] Resetting read-only flag of JDBC Connection [HikariProxyConnection@555197776 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST]
2023-08-03 20:35:15,088 INFO ru.practicum.ErrorHandler [http-nio-9090-exec-5] Not found: User with id: 5 do not have available
2023-08-03 20:35:15,089 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-1] Response 404 NOT_FOUND
2023-08-03 20:35:15,111 INFO ru.practicum.shareit.ErrorHandler [http-nio-8080-exec-3] Server error Required request parameter 'approved' for method parameter type Boolean is not present
2023-08-03 20:35:15,134 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-5] HTTP PATCH http://localhost:9090/bookings/2?approved=true
2023-08-03 20:35:15,134 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-5] Accept=[application/json, application/*+json]
2023-08-03 20:35:15,139 INFO ru.practicum.ErrorHandler [http-nio-9090-exec-6] Not found: User with id: 1 do not have available
2023-08-03 20:35:15,140 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-5] Response 404 NOT_FOUND
2023-08-03 20:35:15,159 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-7] HTTP PATCH http://localhost:9090/bookings/2?approved=true
2023-08-03 20:35:15,160 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-7] Accept=[application/json, application/*+json]
2023-08-03 20:35:15,168 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-7] Response 200 OK
2023-08-03 20:35:15,169 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-7] Reading to [java.lang.Object]
2023-08-03 20:35:15,193 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-6] HTTP PATCH http://localhost:9090/bookings/2?approved=true
2023-08-03 20:35:15,194 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-6] Accept=[application/json, application/*+json]
2023-08-03 20:35:15,199 INFO ru.practicum.ErrorHandler [http-nio-9090-exec-8] Not available: Рассмотрение
2023-08-03 20:35:15,200 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-6] Response 400 BAD_REQUEST
2023-08-03 20:35:15,220 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-9] HTTP POST http://localhost:9090/users
2023-08-03 20:35:15,221 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-9] Accept=[application/json, application/*+json]
2023-08-03 20:35:15,221 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-9] Writing [UserDto(id=0, email=practicum@yandex.ru, name=practicum)] as "application/json"
2023-08-03 20:35:15,224 INFO ru.practicum.user.UserController [http-nio-9090-exec-9] Было создано: ru.practicum.user.model.User@11289419
2023-08-03 20:35:15,224 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-9] Response 201 CREATED
2023-08-03 20:35:15,225 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-9] Reading to [java.lang.Object]
2023-08-03 20:35:15,250 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-10] HTTP POST http://localhost:9090/bookings
2023-08-03 20:35:15,250 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-10] Accept=[application/json, application/*+json]
2023-08-03 20:35:15,250 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-10] Writing [BookingDto(id=0, itemId=1, start=2023-08-05T20:35:15, end=2023-08-06T20:35:15, status=null, booker=null)] as "application/json"
2023-08-03 20:35:15,255 INFO ru.practicum.ErrorHandler [http-nio-9090-exec-10] Not found: Ты владелец
2023-08-03 20:35:15,256 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-10] Response 404 NOT_FOUND
2023-08-03 20:35:15,277 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-2] HTTP POST http://localhost:9090/bookings
2023-08-03 20:35:15,277 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-2] Accept=[application/json, application/*+json]
2023-08-03 20:35:15,278 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-2] Writing [BookingDto(id=0, itemId=1, start=2023-08-04T20:35:15, end=2023-08-04T21:35:15, status=null, booker=null)] as "application/json"
2023-08-03 20:35:15,283 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-2] Response 200 OK
2023-08-03 20:35:15,283 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-2] Reading to [java.lang.Object]
2023-08-03 20:35:15,304 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-1] HTTP PATCH http://localhost:9090/bookings/3?approved=false
2023-08-03 20:35:15,304 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-1] Accept=[application/json, application/*+json]
2023-08-03 20:35:15,310 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-1] Response 200 OK
2023-08-03 20:35:15,310 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-1] Reading to [java.lang.Object]
2023-08-03 20:35:15,342 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-3] HTTP POST http://localhost:9090/bookings
2023-08-03 20:35:15,342 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-3] Accept=[application/json, application/*+json]
2023-08-03 20:35:15,342 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-3] Writing [BookingDto(id=0, itemId=2, start=2023-08-03T21:35:15, end=2023-08-03T22:35:15, status=null, booker=null)] as "application/json"
2023-08-03 20:35:15,350 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-3] Response 200 OK
2023-08-03 20:35:15,351 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-3] Reading to [java.lang.Object]
2023-08-03 20:35:15,373 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-4] HTTP PATCH http://localhost:9090/bookings/4?approved=true
2023-08-03 20:35:15,373 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-4] Accept=[application/json, application/*+json]
2023-08-03 20:35:15,379 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-4] Response 200 OK
2023-08-03 20:35:15,380 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-4] Reading to [java.lang.Object]
2023-08-03 20:35:19,405 INFO ru.practicum.shareit.item.ItemController [http-nio-8080-exec-5] Request from user ID: 4 on get item. ID: 2
2023-08-03 20:35:19,405 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-5] HTTP GET http://localhost:9090/items/2
2023-08-03 20:35:19,405 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-5] Accept=[application/json, application/*+json]
2023-08-03 20:35:19,408 INFO ru.practicum.item.ItemController [http-nio-9090-exec-5] Запрос от идентификатора пользователя: 4 при получении элемента. Идентификатор: 2
2023-08-03 20:35:19,408 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-5] Setting JDBC Connection [HikariProxyConnection@1677623437 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST] read-only
2023-08-03 20:35:19,409 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-5] Resetting read-only flag of JDBC Connection [HikariProxyConnection@1677623437 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST]
2023-08-03 20:35:19,415 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-5] Response 200 OK
2023-08-03 20:35:19,415 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-5] Reading to [java.lang.Object]
2023-08-03 20:35:19,437 INFO ru.practicum.shareit.item.ItemController [http-nio-8080-exec-7] Request from user ID: 1 on get item. ID: 2
2023-08-03 20:35:19,437 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-7] HTTP GET http://localhost:9090/items/2
2023-08-03 20:35:19,438 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-7] Accept=[application/json, application/*+json]
2023-08-03 20:35:19,439 INFO ru.practicum.item.ItemController [http-nio-9090-exec-6] Запрос от идентификатора пользователя: 1 при получении элемента. Идентификатор: 2
2023-08-03 20:35:19,439 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-6] Setting JDBC Connection [HikariProxyConnection@484948211 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST] read-only
2023-08-03 20:35:19,440 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-6] Resetting read-only flag of JDBC Connection [HikariProxyConnection@484948211 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST]
2023-08-03 20:35:19,442 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-7] Response 200 OK
2023-08-03 20:35:19,442 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-7] Reading to [java.lang.Object]
2023-08-03 20:35:19,463 INFO ru.practicum.shareit.item.ItemController [http-nio-8080-exec-6] Request from user ID: 5 on get item. ID: 2
2023-08-03 20:35:19,463 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-6] HTTP GET http://localhost:9090/items/2
2023-08-03 20:35:19,464 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-6] Accept=[application/json, application/*+json]
2023-08-03 20:35:19,465 INFO ru.practicum.item.ItemController [http-nio-9090-exec-7] Запрос от идентификатора пользователя: 5 при получении элемента. Идентификатор: 2
2023-08-03 20:35:19,465 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-7] Setting JDBC Connection [HikariProxyConnection@1824560979 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST] read-only
2023-08-03 20:35:19,466 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-7] Resetting read-only flag of JDBC Connection [HikariProxyConnection@1824560979 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST]
2023-08-03 20:35:19,468 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-6] Response 200 OK
2023-08-03 20:35:19,468 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-6] Reading to [java.lang.Object]
2023-08-03 20:35:19,485 INFO ru.practicum.shareit.item.ItemController [http-nio-8080-exec-8] Request on get all for user id: 4
2023-08-03 20:35:19,485 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-8] HTTP GET http://localhost:9090/items?from=0&size=20
2023-08-03 20:35:19,485 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-8] Accept=[application/json, application/*+json]
2023-08-03 20:35:19,487 INFO ru.practicum.item.ItemController [http-nio-9090-exec-8] Запрос на получение всего для идентификатора пользователя: 4
2023-08-03 20:35:19,487 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-8] Setting JDBC Connection [HikariProxyConnection@666351942 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST] read-only
2023-08-03 20:35:19,488 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-8] Resetting read-only flag of JDBC Connection [HikariProxyConnection@666351942 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST]
2023-08-03 20:35:19,493 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-8] Response 200 OK
2023-08-03 20:35:19,494 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-8] Reading to [java.lang.Object]
2023-08-03 20:35:19,522 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-9] HTTP POST http://localhost:9090/bookings
2023-08-03 20:35:19,522 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-9] Accept=[application/json, application/*+json]
2023-08-03 20:35:19,522 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-9] Writing [BookingDto(id=0, itemId=3, start=2023-08-03T20:35:22, end=2023-08-04T20:35:19, status=null, booker=null)] as "application/json"
2023-08-03 20:35:19,529 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-9] Response 200 OK
2023-08-03 20:35:19,530 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-9] Reading to [java.lang.Object]
2023-08-03 20:35:19,556 INFO ru.practicum.shareit.booking.BookingController [http-nio-8080-exec-10] Get booking with state WAITING, userId=1, from=0, size=20
2023-08-03 20:35:19,556 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-10] HTTP GET http://localhost:9090/bookings?state=WAITING&from=0&size=20
2023-08-03 20:35:19,556 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-10] Accept=[application/json, application/*+json]
2023-08-03 20:35:19,558 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-10] Setting JDBC Connection [HikariProxyConnection@716406558 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST] read-only
2023-08-03 20:35:19,559 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-10] Resetting read-only flag of JDBC Connection [HikariProxyConnection@716406558 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST]
2023-08-03 20:35:19,562 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-10] Response 200 OK
2023-08-03 20:35:19,563 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-10] Reading to [java.lang.Object]
2023-08-03 20:35:19,587 INFO ru.practicum.shareit.booking.BookingController [http-nio-8080-exec-2] Get booking with state WAITING, userId=4, from=0, size=20
2023-08-03 20:35:19,587 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-2] HTTP GET http://localhost:9090/bookings/owner?state=WAITING&from=0&size=20
2023-08-03 20:35:19,587 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-2] Accept=[application/json, application/*+json]
2023-08-03 20:35:19,589 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-1] Setting JDBC Connection [HikariProxyConnection@1187033408 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST] read-only
2023-08-03 20:35:19,590 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-1] Resetting read-only flag of JDBC Connection [HikariProxyConnection@1187033408 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST]
2023-08-03 20:35:19,593 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-2] Response 200 OK
2023-08-03 20:35:19,593 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-2] Reading to [java.lang.Object]
2023-08-03 20:35:19,617 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-1] HTTP POST http://localhost:9090/bookings
2023-08-03 20:35:19,618 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-1] Accept=[application/json, application/*+json]
2023-08-03 20:35:19,618 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-1] Writing [BookingDto(id=0, itemId=2, start=2023-08-03T20:35:22, end=2023-08-03T20:35:23, status=null, booker=null)] as "application/json"
2023-08-03 20:35:19,624 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-1] Response 200 OK
2023-08-03 20:35:19,625 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-1] Reading to [java.lang.Object]
2023-08-03 20:35:19,650 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-3] HTTP PATCH http://localhost:9090/bookings/5?approved=false
2023-08-03 20:35:19,650 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-3] Accept=[application/json, application/*+json]
2023-08-03 20:35:19,657 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-3] Response 200 OK
2023-08-03 20:35:19,657 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-3] Reading to [java.lang.Object]
2023-08-03 20:35:19,688 INFO ru.practicum.shareit.booking.BookingController [http-nio-8080-exec-4] Get booking with state REJECTED, userId=1, from=0, size=20
2023-08-03 20:35:19,689 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-4] HTTP GET http://localhost:9090/bookings?state=REJECTED&from=0&size=20
2023-08-03 20:35:19,689 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-4] Accept=[application/json, application/*+json]
2023-08-03 20:35:19,692 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-4] Setting JDBC Connection [HikariProxyConnection@215670670 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST] read-only
2023-08-03 20:35:19,693 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-4] Resetting read-only flag of JDBC Connection [HikariProxyConnection@215670670 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST]
2023-08-03 20:35:19,697 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-4] Response 200 OK
2023-08-03 20:35:19,698 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-4] Reading to [java.lang.Object]
2023-08-03 20:35:19,726 INFO ru.practicum.shareit.booking.BookingController [http-nio-8080-exec-5] Get booking with state REJECTED, userId=4, from=0, size=20
2023-08-03 20:35:19,727 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-5] HTTP GET http://localhost:9090/bookings/owner?state=REJECTED&from=0&size=20
2023-08-03 20:35:19,727 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-5] Accept=[application/json, application/*+json]
2023-08-03 20:35:19,729 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-5] Setting JDBC Connection [HikariProxyConnection@1282771895 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST] read-only
2023-08-03 20:35:19,730 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-5] Resetting read-only flag of JDBC Connection [HikariProxyConnection@1282771895 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST]
2023-08-03 20:35:19,733 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-5] Response 200 OK
2023-08-03 20:35:19,734 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-5] Reading to [java.lang.Object]
2023-08-03 20:35:19,759 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-7] HTTP PATCH http://localhost:9090/bookings/6?approved=true
2023-08-03 20:35:19,759 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-7] Accept=[application/json, application/*+json]
2023-08-03 20:35:19,764 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-7] Response 200 OK
2023-08-03 20:35:19,765 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-7] Reading to [java.lang.Object]
2023-08-03 20:35:19,789 INFO ru.practicum.shareit.item.ItemController [http-nio-8080-exec-6] Request on add ItemDto(id=0, name=Кухонный стол, description=Стол для празднования, available=true, requestId=null), user id: 6
2023-08-03 20:35:19,789 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-6] HTTP POST http://localhost:9090/items
2023-08-03 20:35:19,790 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-6] Accept=[application/json, application/*+json]
2023-08-03 20:35:19,790 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-6] Writing [ItemDto(id=0, name=Кухонный стол, description=Стол для празднования, available=true, requestId=null)] as "application/json"
2023-08-03 20:35:19,791 INFO ru.practicum.item.ItemController [http-nio-9090-exec-7] Запрос на добавление ItemDto(id=0, name=Кухонный стол, description=Стол для празднования, available=true, requestId=null), идентификатор пользователя: 6
2023-08-03 20:35:19,795 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-6] Response 200 OK
2023-08-03 20:35:19,795 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-6] Reading to [java.lang.Object]
2023-08-03 20:35:19,817 INFO ru.practicum.shareit.item.ItemController [http-nio-8080-exec-8] Request from user ID: 1 on get item. ID: 1
2023-08-03 20:35:19,817 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-8] HTTP GET http://localhost:9090/items/1
2023-08-03 20:35:19,817 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-8] Accept=[application/json, application/*+json]
2023-08-03 20:35:19,818 INFO ru.practicum.item.ItemController [http-nio-9090-exec-8] Запрос от идентификатора пользователя: 1 при получении элемента. Идентификатор: 1
2023-08-03 20:35:19,819 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-8] Setting JDBC Connection [HikariProxyConnection@1800325406 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST] read-only
2023-08-03 20:35:19,820 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-8] Resetting read-only flag of JDBC Connection [HikariProxyConnection@1800325406 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST]
2023-08-03 20:35:19,823 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-8] Response 200 OK
2023-08-03 20:35:19,824 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-8] Reading to [java.lang.Object]
2023-08-03 20:35:19,851 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-9] HTTP POST http://localhost:9090/bookings
2023-08-03 20:35:19,852 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-9] Accept=[application/json, application/*+json]
2023-08-03 20:35:19,852 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-9] Writing [BookingDto(id=0, itemId=1, start=2023-08-13T20:35:19, end=2023-08-14T20:35:19, status=null, booker=null)] as "application/json"
2023-08-03 20:35:19,859 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-9] Response 200 OK
2023-08-03 20:35:19,860 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-9] Reading to [java.lang.Object]
2023-08-03 20:35:19,885 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-10] HTTP POST http://localhost:9090/bookings
2023-08-03 20:35:19,886 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-10] Accept=[application/json, application/*+json]
2023-08-03 20:35:19,887 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-10] Writing [BookingDto(id=0, itemId=4, start=2023-08-03T20:35:21, end=2023-08-03T21:35:19, status=null, booker=null)] as "application/json"
2023-08-03 20:35:19,893 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-10] Response 200 OK
2023-08-03 20:35:19,894 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-10] Reading to [java.lang.Object]
2023-08-03 20:35:19,914 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-2] HTTP PATCH http://localhost:9090/bookings/8?approved=true
2023-08-03 20:35:19,914 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-2] Accept=[application/json, application/*+json]
2023-08-03 20:35:19,920 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-2] Response 200 OK
2023-08-03 20:35:19,920 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-2] Reading to [java.lang.Object]
2023-08-03 20:35:22,947 INFO ru.practicum.shareit.item.ItemController [http-nio-8080-exec-1] Request from user ID: 1 on get item. ID: 2
2023-08-03 20:35:22,947 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-1] HTTP GET http://localhost:9090/items/2
2023-08-03 20:35:22,948 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-1] Accept=[application/json, application/*+json]
2023-08-03 20:35:22,950 INFO ru.practicum.item.ItemController [http-nio-9090-exec-2] Запрос от идентификатора пользователя: 1 при получении элемента. Идентификатор: 2
2023-08-03 20:35:22,951 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-2] Setting JDBC Connection [HikariProxyConnection@978711105 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST] read-only
2023-08-03 20:35:22,952 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-2] Resetting read-only flag of JDBC Connection [HikariProxyConnection@978711105 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST]
2023-08-03 20:35:22,953 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-1] Response 200 OK
2023-08-03 20:35:22,954 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-1] Reading to [java.lang.Object]
2023-08-03 20:35:23,939 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-08-03 20:35:23,939 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-08-03 20:35:25,982 INFO ru.practicum.shareit.item.ItemController [http-nio-8080-exec-3] Request from user ID: 4 on get item. ID: 2
2023-08-03 20:35:25,982 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-3] HTTP GET http://localhost:9090/items/2
2023-08-03 20:35:25,982 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-3] Accept=[application/json, application/*+json]
2023-08-03 20:35:25,985 INFO ru.practicum.item.ItemController [http-nio-9090-exec-3] Запрос от идентификатора пользователя: 4 при получении элемента. Идентификатор: 2
2023-08-03 20:35:25,985 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-3] Setting JDBC Connection [HikariProxyConnection@670480172 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST] read-only
2023-08-03 20:35:25,986 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-3] Resetting read-only flag of JDBC Connection [HikariProxyConnection@670480172 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST]
2023-08-03 20:35:25,989 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-3] Response 200 OK
2023-08-03 20:35:25,990 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-3] Reading to [java.lang.Object]
2023-08-03 20:35:26,017 INFO ru.practicum.shareit.item.ItemController [http-nio-8080-exec-4] Request on add comment Comment for item 1, item id: 1, user id: 4
2023-08-03 20:35:26,018 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-4] HTTP POST http://localhost:9090/items/1/comment
2023-08-03 20:35:26,018 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-4] Accept=[application/json, application/*+json]
2023-08-03 20:35:26,021 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-4] Writing [CommentDto(id=0, text=Comment for item 1, authorName=null, created=null)] as "application/json"
2023-08-03 20:35:26,026 INFO ru.practicum.item.ItemController [http-nio-9090-exec-4] Запрос на добавление комментария Comment for item 1, идентификатор элемента: 1, идентификатор пользователя: 4
2023-08-03 20:35:26,033 INFO ru.practicum.ErrorHandler [http-nio-9090-exec-4] Not available: Нет доступного бронирования для идентификатора пользователя: 4 и вещи: 1
2023-08-03 20:35:26,034 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-4] Response 400 BAD_REQUEST
2023-08-03 20:35:26,055 INFO ru.practicum.shareit.ErrorHandler [http-nio-8080-exec-7] Validation failed for field: text. Error message: не должно быть пустым
2023-08-03 20:35:26,077 INFO ru.practicum.shareit.item.ItemController [http-nio-8080-exec-8] Request on add comment Add comment from user1, item id: 2, user id: 1
2023-08-03 20:35:26,078 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-8] HTTP POST http://localhost:9090/items/2/comment
2023-08-03 20:35:26,078 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-8] Accept=[application/json, application/*+json]
2023-08-03 20:35:26,078 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-8] Writing [CommentDto(id=0, text=Add comment from user1, authorName=null, created=null)] as "application/json"
2023-08-03 20:35:26,080 INFO ru.practicum.item.ItemController [http-nio-9090-exec-5] Запрос на добавление комментария Add comment from user1, идентификатор элемента: 2, идентификатор пользователя: 1
2023-08-03 20:35:26,088 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-8] Response 200 OK
2023-08-03 20:35:26,088 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-8] Reading to [java.lang.Object]
2023-08-03 20:35:26,108 INFO ru.practicum.shareit.item.ItemController [http-nio-8080-exec-9] Request from user ID: 1 on get item. ID: 2
2023-08-03 20:35:26,108 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-9] HTTP GET http://localhost:9090/items/2
2023-08-03 20:35:26,108 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-9] Accept=[application/json, application/*+json]
2023-08-03 20:35:26,110 INFO ru.practicum.item.ItemController [http-nio-9090-exec-6] Запрос от идентификатора пользователя: 1 при получении элемента. Идентификатор: 2
2023-08-03 20:35:26,110 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-6] Setting JDBC Connection [HikariProxyConnection@357671940 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST] read-only
2023-08-03 20:35:26,111 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-6] Resetting read-only flag of JDBC Connection [HikariProxyConnection@357671940 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST]
2023-08-03 20:35:26,114 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-9] Response 200 OK
2023-08-03 20:35:26,114 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-9] Reading to [java.lang.Object]
2023-08-03 20:35:26,136 INFO ru.practicum.shareit.item.ItemController [http-nio-8080-exec-10] Request from user ID: 4 on get item. ID: 2
2023-08-03 20:35:26,136 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-10] HTTP GET http://localhost:9090/items/2
2023-08-03 20:35:26,136 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-10] Accept=[application/json, application/*+json]
2023-08-03 20:35:26,138 INFO ru.practicum.item.ItemController [http-nio-9090-exec-7] Запрос от идентификатора пользователя: 4 при получении элемента. Идентификатор: 2
2023-08-03 20:35:26,139 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-7] Setting JDBC Connection [HikariProxyConnection@1642714177 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST] read-only
2023-08-03 20:35:26,139 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-7] Resetting read-only flag of JDBC Connection [HikariProxyConnection@1642714177 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST]
2023-08-03 20:35:26,143 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-10] Response 200 OK
2023-08-03 20:35:26,144 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-10] Reading to [java.lang.Object]
2023-08-03 20:35:26,168 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-2] HTTP PATCH http://localhost:9090/bookings/7?approved=true
2023-08-03 20:35:26,168 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-2] Accept=[application/json, application/*+json]
2023-08-03 20:35:26,174 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-2] Response 200 OK
2023-08-03 20:35:26,174 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-2] Reading to [java.lang.Object]
2023-08-03 20:35:26,195 INFO ru.practicum.shareit.item.ItemController [http-nio-8080-exec-1] Request on add comment Add comment from user5, item id: 1, user id: 5
2023-08-03 20:35:26,196 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-1] HTTP POST http://localhost:9090/items/1/comment
2023-08-03 20:35:26,196 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-1] Accept=[application/json, application/*+json]
2023-08-03 20:35:26,196 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-1] Writing [CommentDto(id=0, text=Add comment from user5, authorName=null, created=null)] as "application/json"
2023-08-03 20:35:26,198 INFO ru.practicum.item.ItemController [http-nio-9090-exec-9] Запрос на добавление комментария Add comment from user5, идентификатор элемента: 1, идентификатор пользователя: 5
2023-08-03 20:35:26,201 INFO ru.practicum.ErrorHandler [http-nio-9090-exec-9] Not available: Нет доступного бронирования для идентификатора пользователя: 5 и вещи: 1
2023-08-03 20:35:26,203 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-1] Response 400 BAD_REQUEST
2023-08-03 20:35:26,225 INFO ru.practicum.shareit.booking.BookingController [http-nio-8080-exec-4] Get booking with state CURRENT, userId=1, from=0, size=20
2023-08-03 20:35:26,225 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-4] HTTP GET http://localhost:9090/bookings?state=CURRENT&from=0&size=20
2023-08-03 20:35:26,226 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-4] Accept=[application/json, application/*+json]
2023-08-03 20:35:26,228 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-10] Setting JDBC Connection [HikariProxyConnection@292381361 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST] read-only
2023-08-03 20:35:26,230 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-10] Resetting read-only flag of JDBC Connection [HikariProxyConnection@292381361 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST]
2023-08-03 20:35:26,233 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-4] Response 200 OK
2023-08-03 20:35:26,233 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-4] Reading to [java.lang.Object]
2023-08-03 20:35:26,260 INFO ru.practicum.shareit.booking.BookingController [http-nio-8080-exec-5] Get booking with state CURRENT, userId=4, from=0, size=20
2023-08-03 20:35:26,260 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-5] HTTP GET http://localhost:9090/bookings/owner?state=CURRENT&from=0&size=20
2023-08-03 20:35:26,260 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-5] Accept=[application/json, application/*+json]
2023-08-03 20:35:26,262 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-1] Setting JDBC Connection [HikariProxyConnection@1164421478 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST] read-only
2023-08-03 20:35:26,263 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-1] Resetting read-only flag of JDBC Connection [HikariProxyConnection@1164421478 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST]
2023-08-03 20:35:26,267 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-5] Response 200 OK
2023-08-03 20:35:26,268 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-5] Reading to [java.lang.Object]
2023-08-03 20:35:26,292 INFO ru.practicum.shareit.booking.BookingController [http-nio-8080-exec-7] Get booking with state PAST, userId=1, from=0, size=20
2023-08-03 20:35:26,292 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-7] HTTP GET http://localhost:9090/bookings?state=PAST&from=0&size=20
2023-08-03 20:35:26,293 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-7] Accept=[application/json, application/*+json]
2023-08-03 20:35:26,294 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-2] Setting JDBC Connection [HikariProxyConnection@848457055 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST] read-only
2023-08-03 20:35:26,295 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-2] Resetting read-only flag of JDBC Connection [HikariProxyConnection@848457055 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST]
2023-08-03 20:35:26,298 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-7] Response 200 OK
2023-08-03 20:35:26,298 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-7] Reading to [java.lang.Object]
2023-08-03 20:35:26,324 INFO ru.practicum.shareit.booking.BookingController [http-nio-8080-exec-6] Get booking with state PAST, userId=4, from=0, size=20
2023-08-03 20:35:26,324 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-6] HTTP GET http://localhost:9090/bookings/owner?state=PAST&from=0&size=20
2023-08-03 20:35:26,324 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-6] Accept=[application/json, application/*+json]
2023-08-03 20:35:26,326 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-3] Setting JDBC Connection [HikariProxyConnection@871447441 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST] read-only
2023-08-03 20:35:26,326 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-3] Resetting read-only flag of JDBC Connection [HikariProxyConnection@871447441 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST]
2023-08-03 20:35:26,330 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-6] Response 200 OK
2023-08-03 20:35:26,331 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-6] Reading to [java.lang.Object]
2023-08-03 20:35:26,353 INFO ru.practicum.shareit.item.ItemController [http-nio-8080-exec-8] Request from user ID: 6 on get item. ID: 4
2023-08-03 20:35:26,353 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-8] HTTP GET http://localhost:9090/items/4
2023-08-03 20:35:26,353 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-8] Accept=[application/json, application/*+json]
2023-08-03 20:35:26,355 INFO ru.practicum.item.ItemController [http-nio-9090-exec-4] Запрос от идентификатора пользователя: 6 при получении элемента. Идентификатор: 4
2023-08-03 20:35:26,355 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-4] Setting JDBC Connection [HikariProxyConnection@486442259 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST] read-only
2023-08-03 20:35:26,357 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-4] Resetting read-only flag of JDBC Connection [HikariProxyConnection@486442259 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST]
2023-08-03 20:35:26,363 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-8] Response 200 OK
2023-08-03 20:35:26,363 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-8] Reading to [java.lang.Object]
2023-08-03 20:35:26,406 INFO ru.practicum.shareit.request.RequestController [http-nio-8080-exec-9] Add request on item RequestDto(id=0, description=Хотел бы воспользоваться щёткой для обуви, created=null, items=null), user id: 99
2023-08-03 20:35:26,407 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-9] HTTP POST http://localhost:9090/requests
2023-08-03 20:35:26,408 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-9] Accept=[application/json, application/*+json]
2023-08-03 20:35:26,409 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-9] Writing [RequestDto(id=0, description=Хотел бы воспользоваться щёткой для обуви, created=null, items=null)] as "application/json"
2023-08-03 20:35:26,419 INFO ru.practicum.request.RequestController [http-nio-9090-exec-5] Добавить запрос на элемент RequestDto(id=0, description=Хотел бы воспользоваться щёткой для обуви, created=null, items=null), идентификатор пользователя: 99
2023-08-03 20:35:26,428 INFO ru.practicum.ErrorHandler [http-nio-9090-exec-5] Not found: User with ID: 99 not found
2023-08-03 20:35:26,429 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-9] Response 404 NOT_FOUND
2023-08-03 20:35:26,462 INFO ru.practicum.shareit.ErrorHandler [http-nio-8080-exec-10] Validation failed for field: description. Error message: Description can't blank
2023-08-03 20:35:26,486 INFO ru.practicum.shareit.request.RequestController [http-nio-8080-exec-1] Request on get all requests from user id: 99
2023-08-03 20:35:26,486 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-1] HTTP GET http://localhost:9090/requests?from=0&size=20
2023-08-03 20:35:26,487 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-1] Accept=[application/json, application/*+json]
2023-08-03 20:35:26,489 INFO ru.practicum.request.RequestController [http-nio-9090-exec-6] Запрос на получение всех запросов от идентификатора пользователя: 99
2023-08-03 20:35:26,489 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-6] Setting JDBC Connection [HikariProxyConnection@576196034 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST] read-only
2023-08-03 20:35:26,490 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-6] Resetting read-only flag of JDBC Connection [HikariProxyConnection@576196034 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST]
2023-08-03 20:35:26,491 INFO ru.practicum.ErrorHandler [http-nio-9090-exec-6] Not found: User with ID: 99 not found
2023-08-03 20:35:26,492 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-1] Response 404 NOT_FOUND
2023-08-03 20:35:26,518 INFO ru.practicum.shareit.request.RequestController [http-nio-8080-exec-3] Request on get all requests from user id: 1
2023-08-03 20:35:26,518 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-3] HTTP GET http://localhost:9090/requests?from=0&size=20
2023-08-03 20:35:26,518 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-3] Accept=[application/json, application/*+json]
2023-08-03 20:35:26,520 INFO ru.practicum.request.RequestController [http-nio-9090-exec-7] Запрос на получение всех запросов от идентификатора пользователя: 1
2023-08-03 20:35:26,520 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-7] Setting JDBC Connection [HikariProxyConnection@1203753286 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST] read-only
2023-08-03 20:35:26,521 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-7] Resetting read-only flag of JDBC Connection [HikariProxyConnection@1203753286 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST]
2023-08-03 20:35:26,527 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-3] Response 200 OK
2023-08-03 20:35:26,528 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-3] Reading to [java.lang.Object]
2023-08-03 20:35:26,549 INFO ru.practicum.shareit.request.RequestController [http-nio-8080-exec-4] Request on get all requests
2023-08-03 20:35:26,550 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-4] HTTP GET http://localhost:9090/requests/all?from=0&size=20
2023-08-03 20:35:26,550 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-4] Accept=[application/json, application/*+json]
2023-08-03 20:35:26,558 INFO ru.practicum.request.RequestController [http-nio-9090-exec-8] Запрос на получение всех запросов
2023-08-03 20:35:26,559 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-4] Response 200 OK
2023-08-03 20:35:26,559 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-4] Reading to [java.lang.Object]
2023-08-03 20:35:26,582 INFO ru.practicum.shareit.ErrorHandler [http-nio-8080-exec-5] Validation failed for field: size. Error message: должно быть больше 0
2023-08-03 20:35:26,601 INFO ru.practicum.shareit.ErrorHandler [http-nio-8080-exec-6] Validation failed for field: from. Error message: должно быть больше или равно 0
2023-08-03 20:35:26,622 INFO ru.practicum.shareit.ErrorHandler [http-nio-8080-exec-9] Validation failed for field: size. Error message: должно быть больше 0
2023-08-03 20:35:26,649 INFO ru.practicum.shareit.request.RequestController [http-nio-8080-exec-2] Request on get all requests
2023-08-03 20:35:26,650 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-2] HTTP GET http://localhost:9090/requests/all?from=0&size=20
2023-08-03 20:35:26,650 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-2] Accept=[application/json, application/*+json]
2023-08-03 20:35:26,654 INFO ru.practicum.request.RequestController [http-nio-9090-exec-9] Запрос на получение всех запросов
2023-08-03 20:35:26,655 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-2] Response 200 OK
2023-08-03 20:35:26,655 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-2] Reading to [java.lang.Object]
2023-08-03 20:35:26,682 INFO ru.practicum.shareit.request.RequestController [http-nio-8080-exec-1] Add request on item RequestDto(id=0, description=Хотел бы воспользоваться щёткой для обуви, created=null, items=null), user id: 1
2023-08-03 20:35:26,682 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-1] HTTP POST http://localhost:9090/requests
2023-08-03 20:35:26,682 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-1] Accept=[application/json, application/*+json]
2023-08-03 20:35:26,682 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-1] Writing [RequestDto(id=0, description=Хотел бы воспользоваться щёткой для обуви, created=null, items=null)] as "application/json"
2023-08-03 20:35:26,684 INFO ru.practicum.request.RequestController [http-nio-9090-exec-10] Добавить запрос на элемент RequestDto(id=0, description=Хотел бы воспользоваться щёткой для обуви, created=null, items=null), идентификатор пользователя: 1
2023-08-03 20:35:26,690 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-1] Response 200 OK
2023-08-03 20:35:26,690 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-1] Reading to [java.lang.Object]
2023-08-03 20:35:27,711 INFO ru.practicum.shareit.request.RequestController [http-nio-8080-exec-3] Request on get all requests from user id: 1
2023-08-03 20:35:27,712 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-3] HTTP GET http://localhost:9090/requests?from=0&size=20
2023-08-03 20:35:27,712 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-3] Accept=[application/json, application/*+json]
2023-08-03 20:35:27,713 INFO ru.practicum.request.RequestController [http-nio-9090-exec-1] Запрос на получение всех запросов от идентификатора пользователя: 1
2023-08-03 20:35:27,714 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-1] Setting JDBC Connection [HikariProxyConnection@157999958 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST] read-only
2023-08-03 20:35:27,714 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-1] Resetting read-only flag of JDBC Connection [HikariProxyConnection@157999958 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST]
2023-08-03 20:35:27,718 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-3] Response 200 OK
2023-08-03 20:35:27,718 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-3] Reading to [java.lang.Object]
2023-08-03 20:35:27,738 INFO ru.practicum.shareit.item.ItemController [http-nio-8080-exec-4] Request on add ItemDto(id=0, name=Щётка для обуви, description=Стандартная щётка для обуви, available=true, requestId=1), user id: 4
2023-08-03 20:35:27,738 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-4] HTTP POST http://localhost:9090/items
2023-08-03 20:35:27,738 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-4] Accept=[application/json, application/*+json]
2023-08-03 20:35:27,739 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-4] Writing [ItemDto(id=0, name=Щётка для обуви, description=Стандартная щётка для обуви, available=true, requestId=1)] as "application/json"
2023-08-03 20:35:27,740 INFO ru.practicum.item.ItemController [http-nio-9090-exec-2] Запрос на добавление ItemDto(id=0, name=Щётка для обуви, description=Стандартная щётка для обуви, available=true, requestId=1), идентификатор пользователя: 4
2023-08-03 20:35:27,743 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-4] Response 200 OK
2023-08-03 20:35:27,743 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-4] Reading to [java.lang.Object]
2023-08-03 20:35:27,763 INFO ru.practicum.shareit.request.RequestController [http-nio-8080-exec-5] Request on get all requests from user id: 1
2023-08-03 20:35:27,763 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-5] HTTP GET http://localhost:9090/requests?from=0&size=20
2023-08-03 20:35:27,763 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-5] Accept=[application/json, application/*+json]
2023-08-03 20:35:27,765 INFO ru.practicum.request.RequestController [http-nio-9090-exec-3] Запрос на получение всех запросов от идентификатора пользователя: 1
2023-08-03 20:35:27,765 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-3] Setting JDBC Connection [HikariProxyConnection@538215015 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST] read-only
2023-08-03 20:35:27,766 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-3] Resetting read-only flag of JDBC Connection [HikariProxyConnection@538215015 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST]
2023-08-03 20:35:27,770 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-5] Response 200 OK
2023-08-03 20:35:27,770 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-5] Reading to [java.lang.Object]
2023-08-03 20:35:27,791 INFO ru.practicum.shareit.request.RequestController [http-nio-8080-exec-7] Request on get all requests
2023-08-03 20:35:27,791 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-7] HTTP GET http://localhost:9090/requests/all?from=0&size=20
2023-08-03 20:35:27,791 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-7] Accept=[application/json, application/*+json]
2023-08-03 20:35:27,795 INFO ru.practicum.request.RequestController [http-nio-9090-exec-4] Запрос на получение всех запросов
2023-08-03 20:35:27,796 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-7] Response 200 OK
2023-08-03 20:35:27,797 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-7] Reading to [java.lang.Object]
2023-08-03 20:35:27,818 INFO ru.practicum.shareit.request.RequestController [http-nio-8080-exec-6] Request on get all requests
2023-08-03 20:35:27,818 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-6] HTTP GET http://localhost:9090/requests/all?from=0&size=20
2023-08-03 20:35:27,819 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-6] Accept=[application/json, application/*+json]
2023-08-03 20:35:27,823 INFO ru.practicum.request.RequestController [http-nio-9090-exec-5] Запрос на получение всех запросов
2023-08-03 20:35:27,824 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-6] Response 200 OK
2023-08-03 20:35:27,824 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-6] Reading to [java.lang.Object]
2023-08-03 20:35:27,847 INFO ru.practicum.shareit.request.RequestController [http-nio-8080-exec-8] Request from user ID: 99 on get request. ID: 1
2023-08-03 20:35:27,847 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-8] HTTP GET http://localhost:9090/requests/1
2023-08-03 20:35:27,847 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-8] Accept=[application/json, application/*+json]
2023-08-03 20:35:27,849 INFO ru.practicum.request.RequestController [http-nio-9090-exec-6] Запрос от идентификатора пользователя: 99 по запросу get. Идентификатор: 1
2023-08-03 20:35:27,849 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-6] Setting JDBC Connection [HikariProxyConnection@944515858 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST] read-only
2023-08-03 20:35:27,850 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-6] Resetting read-only flag of JDBC Connection [HikariProxyConnection@944515858 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST]
2023-08-03 20:35:27,850 INFO ru.practicum.ErrorHandler [http-nio-9090-exec-6] Not found: User with ID: 99 not found
2023-08-03 20:35:27,851 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-8] Response 404 NOT_FOUND
2023-08-03 20:35:27,871 INFO ru.practicum.shareit.request.RequestController [http-nio-8080-exec-9] Request from user ID: 1 on get request. ID: 99
2023-08-03 20:35:27,872 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-9] HTTP GET http://localhost:9090/requests/99
2023-08-03 20:35:27,872 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-9] Accept=[application/json, application/*+json]
2023-08-03 20:35:27,873 INFO ru.practicum.request.RequestController [http-nio-9090-exec-7] Запрос от идентификатора пользователя: 1 по запросу get. Идентификатор: 99
2023-08-03 20:35:27,874 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-7] Setting JDBC Connection [HikariProxyConnection@1904588501 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST] read-only
2023-08-03 20:35:27,875 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-7] Resetting read-only flag of JDBC Connection [HikariProxyConnection@1904588501 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST]
2023-08-03 20:35:27,875 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-7] Setting JDBC Connection [HikariProxyConnection@1904588501 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST] read-only
2023-08-03 20:35:27,876 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-7] Resetting read-only flag of JDBC Connection [HikariProxyConnection@1904588501 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST]
2023-08-03 20:35:27,877 INFO ru.practicum.ErrorHandler [http-nio-9090-exec-7] Not found: Запрос с идентификатором: 99 не найден
2023-08-03 20:35:27,878 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-9] Response 404 NOT_FOUND
2023-08-03 20:35:27,898 INFO ru.practicum.shareit.request.RequestController [http-nio-8080-exec-10] Request from user ID: 4 on get request. ID: 1
2023-08-03 20:35:27,899 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-10] HTTP GET http://localhost:9090/requests/1
2023-08-03 20:35:27,899 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-10] Accept=[application/json, application/*+json]
2023-08-03 20:35:27,900 INFO ru.practicum.request.RequestController [http-nio-9090-exec-8] Запрос от идентификатора пользователя: 4 по запросу get. Идентификатор: 1
2023-08-03 20:35:27,900 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-8] Setting JDBC Connection [HikariProxyConnection@2036542999 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST] read-only
2023-08-03 20:35:27,901 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-8] Resetting read-only flag of JDBC Connection [HikariProxyConnection@2036542999 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST]
2023-08-03 20:35:27,901 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-8] Setting JDBC Connection [HikariProxyConnection@2036542999 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST] read-only
2023-08-03 20:35:27,902 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-8] Resetting read-only flag of JDBC Connection [HikariProxyConnection@2036542999 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST]
2023-08-03 20:35:27,904 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-10] Response 200 OK
2023-08-03 20:35:27,905 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-10] Reading to [java.lang.Object]
2023-08-03 20:35:27,927 INFO ru.practicum.shareit.request.RequestController [http-nio-8080-exec-2] Request from user ID: 1 on get request. ID: 1
2023-08-03 20:35:27,927 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-2] HTTP GET http://localhost:9090/requests/1
2023-08-03 20:35:27,927 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-2] Accept=[application/json, application/*+json]
2023-08-03 20:35:27,930 INFO ru.practicum.request.RequestController [http-nio-9090-exec-9] Запрос от идентификатора пользователя: 1 по запросу get. Идентификатор: 1
2023-08-03 20:35:27,931 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-9] Setting JDBC Connection [HikariProxyConnection@950705950 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST] read-only
2023-08-03 20:35:27,932 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-9] Resetting read-only flag of JDBC Connection [HikariProxyConnection@950705950 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST]
2023-08-03 20:35:27,933 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-9] Setting JDBC Connection [HikariProxyConnection@950705950 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST] read-only
2023-08-03 20:35:27,933 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-9] Resetting read-only flag of JDBC Connection [HikariProxyConnection@950705950 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST]
2023-08-03 20:35:27,935 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-2] Response 200 OK
2023-08-03 20:35:27,936 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-2] Reading to [java.lang.Object]
2023-08-03 20:35:27,963 INFO ru.practicum.shareit.ErrorHandler [http-nio-8080-exec-1] Validation failed for field: size. Error message: должно быть больше 0
2023-08-03 20:35:27,987 INFO ru.practicum.shareit.ErrorHandler [http-nio-8080-exec-4] Validation failed for field: size. Error message: должно быть больше 0
2023-08-03 20:35:28,008 INFO ru.practicum.shareit.ErrorHandler [http-nio-8080-exec-7] Validation failed for field: from. Error message: должно быть больше или равно 0
2023-08-03 20:35:28,028 INFO ru.practicum.shareit.ErrorHandler [http-nio-8080-exec-8] Validation failed for field: from. Error message: должно быть больше или равно 0
2023-08-03 20:35:28,050 INFO ru.practicum.shareit.ErrorHandler [http-nio-8080-exec-10] Validation failed for field: size. Error message: должно быть больше 0
2023-08-03 20:35:28,071 INFO ru.practicum.shareit.ErrorHandler [http-nio-8080-exec-1] Validation failed for field: size. Error message: должно быть больше 0
2023-08-03 20:35:28,094 INFO ru.practicum.shareit.booking.BookingController [http-nio-8080-exec-4] Get booking with state ALL, userId=1, from=4, size=2
2023-08-03 20:35:28,094 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-4] HTTP GET http://localhost:9090/bookings?state=ALL&from=4&size=2
2023-08-03 20:35:28,095 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-4] Accept=[application/json, application/*+json]
2023-08-03 20:35:28,096 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-10] Setting JDBC Connection [HikariProxyConnection@1557570624 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST] read-only
2023-08-03 20:35:28,097 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-10] Resetting read-only flag of JDBC Connection [HikariProxyConnection@1557570624 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST]
2023-08-03 20:35:28,099 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-4] Response 200 OK
2023-08-03 20:35:28,099 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-4] Reading to [java.lang.Object]
2023-08-03 20:35:28,123 INFO ru.practicum.shareit.booking.BookingController [http-nio-8080-exec-5] Get booking with state ALL, userId=1, from=1, size=1
2023-08-03 20:35:28,123 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-5] HTTP GET http://localhost:9090/bookings/owner?state=ALL&from=1&size=1
2023-08-03 20:35:28,123 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-5] Accept=[application/json, application/*+json]
2023-08-03 20:35:28,125 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-1] Setting JDBC Connection [HikariProxyConnection@1581180719 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST] read-only
2023-08-03 20:35:28,125 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-1] Resetting read-only flag of JDBC Connection [HikariProxyConnection@1581180719 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST]
2023-08-03 20:35:28,131 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-5] Response 200 OK
2023-08-03 20:35:28,132 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-5] Reading to [java.lang.Object]
2023-08-03 20:35:38,135 INFO org.springframework.orm.jpa.AbstractEntityManagerFactoryBean [SpringApplicationShutdownHook] Closing JPA EntityManagerFactory for persistence unit 'default'
2023-08-03 20:35:38,135 INFO org.hibernate.tool.schema.internal.SchemaDropperImpl$DelayedDropActionImpl [SpringApplicationShutdownHook] HHH000477: Starting delayed evictData of schema as part of SessionFactory shut-down'
2023-08-03 20:35:38,137 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn0: url=jdbc:h2:mem:my_db user=TEST: (connection is dead)
2023-08-03 20:35:38,137 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn1: url=jdbc:h2:mem:my_db user=TEST: (connection is dead)
2023-08-03 20:35:38,137 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 connection closer] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-08-03 20:35:38,137 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn2: url=jdbc:h2:mem:my_db user=TEST: (connection is dead)
2023-08-03 20:35:38,137 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 connection closer] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-08-03 20:35:38,137 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn3: url=jdbc:h2:mem:my_db user=TEST: (connection is dead)
2023-08-03 20:35:38,137 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 connection closer] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-08-03 20:35:38,138 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn4: url=jdbc:h2:mem:my_db user=TEST: (connection is dead)
2023-08-03 20:35:38,138 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 connection closer] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-08-03 20:35:38,138 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn5: url=jdbc:h2:mem:my_db user=TEST: (connection is dead)
2023-08-03 20:35:38,138 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 connection closer] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-08-03 20:35:38,138 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn6: url=jdbc:h2:mem:my_db user=TEST: (connection is dead)
2023-08-03 20:35:38,138 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 connection closer] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-08-03 20:35:38,138 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn7: url=jdbc:h2:mem:my_db user=TEST: (connection is dead)
2023-08-03 20:35:38,138 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 connection closer] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-08-03 20:35:38,138 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn8: url=jdbc:h2:mem:my_db user=TEST: (connection is dead)
2023-08-03 20:35:38,138 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 connection closer] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-08-03 20:35:38,138 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn9: url=jdbc:h2:mem:my_db user=TEST: (connection is dead)
2023-08-03 20:35:38,138 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 connection closer] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-08-03 20:35:38,316 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn10: url=jdbc:h2:mem:my_db user=TEST
2023-08-03 20:35:38,316 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn11: url=jdbc:h2:mem:my_db user=TEST
2023-08-03 20:35:38,316 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn12: url=jdbc:h2:mem:my_db user=TEST
2023-08-03 20:35:38,316 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn13: url=jdbc:h2:mem:my_db user=TEST
2023-08-03 20:35:38,317 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn14: url=jdbc:h2:mem:my_db user=TEST
2023-08-03 20:35:38,317 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn15: url=jdbc:h2:mem:my_db user=TEST
2023-08-03 20:35:38,317 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn16: url=jdbc:h2:mem:my_db user=TEST
2023-08-03 20:35:38,317 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn17: url=jdbc:h2:mem:my_db user=TEST
2023-08-03 20:35:38,317 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn18: url=jdbc:h2:mem:my_db user=TEST
2023-08-03 20:35:38,318 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn19: url=jdbc:h2:mem:my_db user=TEST
2023-08-03 20:35:38,318 INFO com.zaxxer.hikari.HikariDataSource [SpringApplicationShutdownHook] HikariPool-1 - Shutdown initiated...
2023-08-03 20:35:38,318 DEBUG com.zaxxer.hikari.pool.HikariPool [SpringApplicationShutdownHook] HikariPool-1 - Before shutdown stats (total=10, active=0, idle=10, waiting=0)
2023-08-03 20:35:38,318 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn10: url=jdbc:h2:mem:my_db user=TEST: (connection evicted)
2023-08-03 20:35:38,319 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn11: url=jdbc:h2:mem:my_db user=TEST: (connection evicted)
2023-08-03 20:35:38,319 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn12: url=jdbc:h2:mem:my_db user=TEST: (connection evicted)
2023-08-03 20:35:38,319 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn13: url=jdbc:h2:mem:my_db user=TEST: (connection evicted)
2023-08-03 20:35:38,319 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn14: url=jdbc:h2:mem:my_db user=TEST: (connection evicted)
2023-08-03 20:35:38,319 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn15: url=jdbc:h2:mem:my_db user=TEST: (connection evicted)
2023-08-03 20:35:38,319 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn16: url=jdbc:h2:mem:my_db user=TEST: (connection evicted)
2023-08-03 20:35:38,319 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn17: url=jdbc:h2:mem:my_db user=TEST: (connection evicted)
2023-08-03 20:35:38,319 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn18: url=jdbc:h2:mem:my_db user=TEST: (connection evicted)
2023-08-03 20:35:38,319 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn19: url=jdbc:h2:mem:my_db user=TEST: (connection evicted)
2023-08-03 20:35:38,319 DEBUG com.zaxxer.hikari.pool.HikariPool [SpringApplicationShutdownHook] HikariPool-1 - After shutdown stats (total=0, active=0, idle=0, waiting=0)
2023-08-03 20:35:38,320 INFO com.zaxxer.hikari.HikariDataSource [SpringApplicationShutdownHook] HikariPool-1 - Shutdown completed.
2023-08-03 23:05:17,508 INFO org.hibernate.validator.internal.util.Version [background-preinit] HV000001: Hibernate Validator 6.2.5.Final
2023-08-03 23:05:17,515 INFO org.springframework.boot.StartupInfoLogger [main] Starting ShareItGateway using Java 18.0.2 on DESKTOP-HBQA1DH with PID 16376 (C:\Users\Aser\dev\java-shareit\shareIt-gateway\target\classes started by Aser in C:\Users\Aser\dev\java-shareit)
2023-08-03 23:05:17,516 INFO org.springframework.boot.SpringApplication [main] No active profile set, falling back to 1 default profile: "default"
2023-08-03 23:05:18,531 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [main] Tomcat initialized with port(s): 8080 (http)
2023-08-03 23:05:18,538 INFO org.apache.juli.logging.DirectJDKLog [main] Initializing ProtocolHandler ["http-nio-8080"]
2023-08-03 23:05:18,538 INFO org.apache.juli.logging.DirectJDKLog [main] Starting service [Tomcat]
2023-08-03 23:05:18,538 INFO org.apache.juli.logging.DirectJDKLog [main] Starting Servlet engine: [Apache Tomcat/9.0.71]
2023-08-03 23:05:18,604 INFO org.apache.juli.logging.DirectJDKLog [main] Initializing Spring embedded WebApplicationContext
2023-08-03 23:05:18,604 INFO org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext [main] Root WebApplicationContext: initialization completed in 1046 ms
2023-08-03 23:05:19,190 INFO org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver [main] Exposing 1 endpoint(s) beneath base path '/actuator'
2023-08-03 23:05:19,206 INFO org.apache.juli.logging.DirectJDKLog [main] Starting ProtocolHandler ["http-nio-8080"]
2023-08-03 23:05:19,223 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [main] Tomcat started on port(s): 8080 (http) with context path ''
2023-08-03 23:05:19,236 INFO org.springframework.boot.StartupInfoLogger [main] Started ShareItGateway in 2.125 seconds (JVM running for 2.491)
2023-08-03 23:05:29,572 INFO org.springframework.boot.StartupInfoLogger [main] Starting ShareItServerApp using Java 18.0.2 on DESKTOP-HBQA1DH with PID 7488 (C:\Users\Aser\dev\java-shareit\ser\target\classes started by Aser in C:\Users\Aser\dev\java-shareit)
2023-08-03 23:05:29,575 INFO org.springframework.boot.SpringApplication [main] No active profile set, falling back to 1 default profile: "default"
2023-08-03 23:05:30,202 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2023-08-03 23:05:30,271 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Finished Spring Data repository scanning in 56 ms. Found 5 JPA repository interfaces.
2023-08-03 23:05:30,765 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [main] Tomcat initialized with port(s): 9090 (http)
2023-08-03 23:05:30,772 INFO org.apache.juli.logging.DirectJDKLog [main] Initializing ProtocolHandler ["http-nio-9090"]
2023-08-03 23:05:30,772 INFO org.apache.juli.logging.DirectJDKLog [main] Starting service [Tomcat]
2023-08-03 23:05:30,773 INFO org.apache.juli.logging.DirectJDKLog [main] Starting Servlet engine: [Apache Tomcat/9.0.71]
2023-08-03 23:05:30,848 INFO org.apache.juli.logging.DirectJDKLog [main] Initializing Spring embedded WebApplicationContext
2023-08-03 23:05:30,848 INFO org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext [main] Root WebApplicationContext: initialization completed in 1232 ms
2023-08-03 23:05:30,913 DEBUG com.zaxxer.hikari.HikariConfig [main] Driver class org.h2.Driver found in Thread context class loader TomcatEmbeddedWebappClassLoader
  context: ROOT
  delegate: true
----------> Parent Classloader:
jdk.internal.loader.ClassLoaders$AppClassLoader@3cd1a2f1

2023-08-03 23:05:31,083 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [main] Fetching JDBC Connection from DataSource
2023-08-03 23:05:31,083 DEBUG com.zaxxer.hikari.HikariConfig [main] HikariPool-1 - configuration:
2023-08-03 23:05:31,085 DEBUG com.zaxxer.hikari.HikariConfig [main] allowPoolSuspension................................false
2023-08-03 23:05:31,086 DEBUG com.zaxxer.hikari.HikariConfig [main] autoCommit................................true
2023-08-03 23:05:31,086 DEBUG com.zaxxer.hikari.HikariConfig [main] catalog................................none
2023-08-03 23:05:31,087 DEBUG com.zaxxer.hikari.HikariConfig [main] connectionInitSql................................none
2023-08-03 23:05:31,087 DEBUG com.zaxxer.hikari.HikariConfig [main] connectionTestQuery................................none
2023-08-03 23:05:31,087 DEBUG com.zaxxer.hikari.HikariConfig [main] connectionTimeout................................30000
2023-08-03 23:05:31,088 DEBUG com.zaxxer.hikari.HikariConfig [main] dataSource................................none
2023-08-03 23:05:31,088 DEBUG com.zaxxer.hikari.HikariConfig [main] dataSourceClassName................................none
2023-08-03 23:05:31,088 DEBUG com.zaxxer.hikari.HikariConfig [main] dataSourceJNDI................................none
2023-08-03 23:05:31,088 DEBUG com.zaxxer.hikari.HikariConfig [main] dataSourceProperties................................{password=<masked>}
2023-08-03 23:05:31,088 DEBUG com.zaxxer.hikari.HikariConfig [main] driverClassName................................"org.h2.Driver"
2023-08-03 23:05:31,089 DEBUG com.zaxxer.hikari.HikariConfig [main] exceptionOverrideClassName................................none
2023-08-03 23:05:31,089 DEBUG com.zaxxer.hikari.HikariConfig [main] healthCheckProperties................................{}
2023-08-03 23:05:31,089 DEBUG com.zaxxer.hikari.HikariConfig [main] healthCheckRegistry................................none
2023-08-03 23:05:31,089 DEBUG com.zaxxer.hikari.HikariConfig [main] idleTimeout................................600000
2023-08-03 23:05:31,089 DEBUG com.zaxxer.hikari.HikariConfig [main] initializationFailTimeout................................1
2023-08-03 23:05:31,089 DEBUG com.zaxxer.hikari.HikariConfig [main] isolateInternalQueries................................false
2023-08-03 23:05:31,090 DEBUG com.zaxxer.hikari.HikariConfig [main] jdbcUrl................................jdbc:h2:mem:my_db
2023-08-03 23:05:31,090 DEBUG com.zaxxer.hikari.HikariConfig [main] keepaliveTime................................0
2023-08-03 23:05:31,090 DEBUG com.zaxxer.hikari.HikariConfig [main] leakDetectionThreshold................................0
2023-08-03 23:05:31,090 DEBUG com.zaxxer.hikari.HikariConfig [main] maxLifetime................................1800000
2023-08-03 23:05:31,090 DEBUG com.zaxxer.hikari.HikariConfig [main] maximumPoolSize................................10
2023-08-03 23:05:31,090 DEBUG com.zaxxer.hikari.HikariConfig [main] metricRegistry................................none
2023-08-03 23:05:31,091 DEBUG com.zaxxer.hikari.HikariConfig [main] metricsTrackerFactory................................com.zaxxer.hikari.metrics.micrometer.MicrometerMetricsTrackerFactory@7f79edee
2023-08-03 23:05:31,091 DEBUG com.zaxxer.hikari.HikariConfig [main] minimumIdle................................10
2023-08-03 23:05:31,091 DEBUG com.zaxxer.hikari.HikariConfig [main] password................................<masked>
2023-08-03 23:05:31,091 DEBUG com.zaxxer.hikari.HikariConfig [main] poolName................................"HikariPool-1"
2023-08-03 23:05:31,091 DEBUG com.zaxxer.hikari.HikariConfig [main] readOnly................................false
2023-08-03 23:05:31,091 DEBUG com.zaxxer.hikari.HikariConfig [main] registerMbeans................................false
2023-08-03 23:05:31,092 DEBUG com.zaxxer.hikari.HikariConfig [main] scheduledExecutor................................none
2023-08-03 23:05:31,092 DEBUG com.zaxxer.hikari.HikariConfig [main] schema................................none
2023-08-03 23:05:31,092 DEBUG com.zaxxer.hikari.HikariConfig [main] threadFactory................................internal
2023-08-03 23:05:31,092 DEBUG com.zaxxer.hikari.HikariConfig [main] transactionIsolation................................default
2023-08-03 23:05:31,092 DEBUG com.zaxxer.hikari.HikariConfig [main] username................................"test"
2023-08-03 23:05:31,093 DEBUG com.zaxxer.hikari.HikariConfig [main] validationTimeout................................5000
2023-08-03 23:05:31,093 INFO com.zaxxer.hikari.HikariDataSource [main] HikariPool-1 - Starting...
2023-08-03 23:05:31,245 DEBUG com.zaxxer.hikari.pool.HikariPool [main] HikariPool-1 - Added connection conn0: url=jdbc:h2:mem:my_db user=TEST
2023-08-03 23:05:31,246 INFO com.zaxxer.hikari.HikariDataSource [main] HikariPool-1 - Start completed.
2023-08-03 23:05:31,291 INFO org.hibernate.jpa.internal.util.LogHelper [main] HHH000204: Processing PersistenceUnitInfo [name: default]
2023-08-03 23:05:31,325 INFO org.hibernate.Version [main] HHH000412: Hibernate ORM core version 5.6.15.Final
2023-08-03 23:05:31,348 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=1, active=0, idle=1, waiting=0)
2023-08-03 23:05:31,349 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn1: url=jdbc:h2:mem:my_db user=TEST
2023-08-03 23:05:31,350 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn2: url=jdbc:h2:mem:my_db user=TEST
2023-08-03 23:05:31,350 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn3: url=jdbc:h2:mem:my_db user=TEST
2023-08-03 23:05:31,350 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn4: url=jdbc:h2:mem:my_db user=TEST
2023-08-03 23:05:31,351 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn5: url=jdbc:h2:mem:my_db user=TEST
2023-08-03 23:05:31,351 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn6: url=jdbc:h2:mem:my_db user=TEST
2023-08-03 23:05:31,352 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn7: url=jdbc:h2:mem:my_db user=TEST
2023-08-03 23:05:31,352 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn8: url=jdbc:h2:mem:my_db user=TEST
2023-08-03 23:05:31,352 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn9: url=jdbc:h2:mem:my_db user=TEST
2023-08-03 23:05:31,353 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 connection adder] HikariPool-1 - After adding stats (total=10, active=0, idle=10, waiting=0)
2023-08-03 23:05:31,448 INFO org.hibernate.annotations.common.reflection.java.JavaReflectionManager [main] HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2023-08-03 23:05:31,540 INFO org.hibernate.dialect.Dialect [main] HHH000400: Using dialect: org.hibernate.dialect.PostgreSQL10Dialect
2023-08-03 23:05:31,999 INFO org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator [main] HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2023-08-03 23:05:32,004 INFO org.springframework.orm.jpa.AbstractEntityManagerFactoryBean [main] Initialized JPA EntityManagerFactory for persistence unit 'default'
2023-08-03 23:05:32,587 WARN org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration [main] spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2023-08-03 23:05:32,902 INFO org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver [main] Exposing 1 endpoint(s) beneath base path '/actuator'
2023-08-03 23:05:32,919 INFO org.apache.juli.logging.DirectJDKLog [main] Starting ProtocolHandler ["http-nio-9090"]
2023-08-03 23:05:32,937 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [main] Tomcat started on port(s): 9090 (http) with context path ''
2023-08-03 23:05:32,953 INFO org.springframework.boot.StartupInfoLogger [main] Started ShareItServerApp in 3.824 seconds (JVM running for 4.208)
2023-08-03 23:05:40,601 INFO org.apache.juli.logging.DirectJDKLog [http-nio-8080-exec-1] Initializing Spring DispatcherServlet 'dispatcherServlet'
2023-08-03 23:05:40,601 INFO org.springframework.web.servlet.FrameworkServlet [http-nio-8080-exec-1] Initializing Servlet 'dispatcherServlet'
2023-08-03 23:05:40,603 INFO org.springframework.web.servlet.FrameworkServlet [http-nio-8080-exec-1] Completed initialization in 1 ms
2023-08-03 23:05:40,737 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-1] HTTP POST http://localhost:9090/users
2023-08-03 23:05:40,743 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-1] Accept=[application/json, application/*+json]
2023-08-03 23:05:40,753 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-1] Writing [UserDto(id=0, email=user@user.com, name=user)] as "application/json"
2023-08-03 23:05:40,829 INFO org.apache.juli.logging.DirectJDKLog [http-nio-9090-exec-1] Initializing Spring DispatcherServlet 'dispatcherServlet'
2023-08-03 23:05:40,830 INFO org.springframework.web.servlet.FrameworkServlet [http-nio-9090-exec-1] Initializing Servlet 'dispatcherServlet'
2023-08-03 23:05:40,831 INFO org.springframework.web.servlet.FrameworkServlet [http-nio-9090-exec-1] Completed initialization in 1 ms
2023-08-03 23:05:40,961 INFO ru.practicum.user.UserController [http-nio-9090-exec-1] Было создано: ru.practicum.user.model.User@449917a5
2023-08-03 23:05:40,982 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-1] Response 201 CREATED
2023-08-03 23:05:40,982 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-1] Reading to [java.lang.Object]
2023-08-03 23:05:41,028 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-3] HTTP POST http://localhost:9090/users
2023-08-03 23:05:41,028 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-3] Accept=[application/json, application/*+json]
2023-08-03 23:05:41,029 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-3] Writing [UserDto(id=0, email=user@user.com, name=user)] as "application/json"
2023-08-03 23:05:41,036 WARN org.hibernate.engine.jdbc.spi.SqlExceptionHelper [http-nio-9090-exec-2] SQL Error: 23505, SQLState: 23505
2023-08-03 23:05:41,037 ERROR org.hibernate.engine.jdbc.spi.SqlExceptionHelper [http-nio-9090-exec-2] Нарушение уникального индекса или первичного ключа: "PUBLIC.UNIQ_EMAIL_INDEX_4 ON PUBLIC.USERS(EMAIL NULLS FIRST) VALUES ( /* 1 */ 'user@user.com' )"
Unique index or primary key violation: "PUBLIC.UNIQ_EMAIL_INDEX_4 ON PUBLIC.USERS(EMAIL NULLS FIRST) VALUES ( /* 1 */ 'user@user.com' )"; SQL statement:
insert into users (email, name) values (?, ?) [23505-214]
2023-08-03 23:05:41,043 INFO ru.practicum.ErrorHandler [http-nio-9090-exec-2] Server error could not execute statement; SQL [n/a]; constraint [null]; nested exception is org.hibernate.exception.ConstraintViolationException: could not execute statement
2023-08-03 23:05:41,049 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-3] Response 500 INTERNAL_SERVER_ERROR
2023-08-03 23:05:41,085 INFO ru.practicum.shareit.ErrorHandler [http-nio-8080-exec-5] Validation failed for field: email. Error message: Email can not be null
2023-08-03 23:05:41,109 INFO ru.practicum.shareit.ErrorHandler [http-nio-8080-exec-7] Validation failed for field: email. Error message: Email is wrong
2023-08-03 23:05:41,130 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-9] HTTP PATCH http://localhost:9090/users/1
2023-08-03 23:05:41,130 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-9] Accept=[application/json, application/*+json]
2023-08-03 23:05:41,131 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-9] Writing [UserDto(id=0, email=update@user.com, name=update)] as "application/json"
2023-08-03 23:05:41,148 INFO ru.practicum.user.UserServiceImpl [http-nio-9090-exec-3] Обновление: ru.practicum.user.model.User@512585f6
2023-08-03 23:05:41,148 INFO ru.practicum.user.UserServiceImpl [http-nio-9090-exec-3] Электронная почта обновлена
2023-08-03 23:05:41,149 INFO ru.practicum.user.UserServiceImpl [http-nio-9090-exec-3] Имя ползователя обновлено
2023-08-03 23:05:41,161 INFO ru.practicum.user.UserController [http-nio-9090-exec-3] Был обновлен: ru.practicum.user.model.User@512585f6
2023-08-03 23:05:41,162 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-9] Response 200 OK
2023-08-03 23:05:41,163 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-9] Reading to [java.lang.Object]
2023-08-03 23:05:41,164 INFO ru.practicum.shareit.user.UserController [http-nio-8080-exec-9] Has been updated: <200,{id=1, email=update@user.com, name=update},[Content-Type:"application/json", Transfer-Encoding:"chunked", Date:"Thu, 03 Aug 2023 19:05:40 GMT", Keep-Alive:"timeout=60", Connection:"keep-alive"]>
2023-08-03 23:05:41,187 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-10] HTTP POST http://localhost:9090/users
2023-08-03 23:05:41,188 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-10] Accept=[application/json, application/*+json]
2023-08-03 23:05:41,188 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-10] Writing [UserDto(id=0, email=user@user.com, name=user)] as "application/json"
2023-08-03 23:05:41,194 INFO ru.practicum.user.UserController [http-nio-9090-exec-4] Было создано: ru.practicum.user.model.User@57bfecdf
2023-08-03 23:05:41,195 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-10] Response 201 CREATED
2023-08-03 23:05:41,196 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-10] Reading to [java.lang.Object]
2023-08-03 23:05:41,220 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-2] HTTP PATCH http://localhost:9090/users/1
2023-08-03 23:05:41,221 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-2] Accept=[application/json, application/*+json]
2023-08-03 23:05:41,221 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-2] Writing [UserDto(id=0, email=null, name=updateName)] as "application/json"
2023-08-03 23:05:41,226 INFO ru.practicum.user.UserServiceImpl [http-nio-9090-exec-5] Обновление: ru.practicum.user.model.User@7757e72e
2023-08-03 23:05:41,226 INFO ru.practicum.user.UserServiceImpl [http-nio-9090-exec-5] Имя ползователя обновлено
2023-08-03 23:05:41,229 INFO ru.practicum.user.UserController [http-nio-9090-exec-5] Был обновлен: ru.practicum.user.model.User@7757e72e
2023-08-03 23:05:41,230 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-2] Response 200 OK
2023-08-03 23:05:41,231 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-2] Reading to [java.lang.Object]
2023-08-03 23:05:41,231 INFO ru.practicum.shareit.user.UserController [http-nio-8080-exec-2] Has been updated: <200,{id=1, email=update@user.com, name=updateName},[Content-Type:"application/json", Transfer-Encoding:"chunked", Date:"Thu, 03 Aug 2023 19:05:40 GMT", Keep-Alive:"timeout=60", Connection:"keep-alive"]>
2023-08-03 23:05:41,256 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-1] HTTP PATCH http://localhost:9090/users/1
2023-08-03 23:05:41,256 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-1] Accept=[application/json, application/*+json]
2023-08-03 23:05:41,257 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-1] Writing [UserDto(id=0, email=updateName@user.com, name=null)] as "application/json"
2023-08-03 23:05:41,262 INFO ru.practicum.user.UserServiceImpl [http-nio-9090-exec-6] Обновление: ru.practicum.user.model.User@8c0ed85
2023-08-03 23:05:41,262 INFO ru.practicum.user.UserServiceImpl [http-nio-9090-exec-6] Электронная почта обновлена
2023-08-03 23:05:41,263 INFO ru.practicum.user.UserController [http-nio-9090-exec-6] Был обновлен: ru.practicum.user.model.User@8c0ed85
2023-08-03 23:05:41,265 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-1] Response 200 OK
2023-08-03 23:05:41,265 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-1] Reading to [java.lang.Object]
2023-08-03 23:05:41,266 INFO ru.practicum.shareit.user.UserController [http-nio-8080-exec-1] Has been updated: <200,{id=1, email=updateName@user.com, name=updateName},[Content-Type:"application/json", Transfer-Encoding:"chunked", Date:"Thu, 03 Aug 2023 19:05:40 GMT", Keep-Alive:"timeout=60", Connection:"keep-alive"]>
2023-08-03 23:05:41,290 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-3] HTTP PATCH http://localhost:9090/users/1
2023-08-03 23:05:41,290 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-3] Accept=[application/json, application/*+json]
2023-08-03 23:05:41,290 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-3] Writing [UserDto(id=0, email=updateName@user.com, name=null)] as "application/json"
2023-08-03 23:05:41,294 INFO ru.practicum.user.UserServiceImpl [http-nio-9090-exec-7] Обновление: ru.practicum.user.model.User@3e2fee1
2023-08-03 23:05:41,295 INFO ru.practicum.user.UserController [http-nio-9090-exec-7] Был обновлен: ru.practicum.user.model.User@3e2fee1
2023-08-03 23:05:41,296 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-3] Response 200 OK
2023-08-03 23:05:41,297 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-3] Reading to [java.lang.Object]
2023-08-03 23:05:41,297 INFO ru.practicum.shareit.user.UserController [http-nio-8080-exec-3] Has been updated: <200,{id=1, email=updateName@user.com, name=updateName},[Content-Type:"application/json", Transfer-Encoding:"chunked", Date:"Thu, 03 Aug 2023 19:05:40 GMT", Keep-Alive:"timeout=60", Connection:"keep-alive"]>
2023-08-03 23:05:41,319 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-4] HTTP PATCH http://localhost:9090/users/1
2023-08-03 23:05:41,320 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-4] Accept=[application/json, application/*+json]
2023-08-03 23:05:41,320 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-4] Writing [UserDto(id=0, email=user@user.com, name=null)] as "application/json"
2023-08-03 23:05:41,324 INFO ru.practicum.user.UserServiceImpl [http-nio-9090-exec-8] Обновление: ru.practicum.user.model.User@3d2f239e
2023-08-03 23:05:41,324 INFO ru.practicum.user.UserServiceImpl [http-nio-9090-exec-8] Электронная почта обновлена
2023-08-03 23:05:41,325 WARN org.hibernate.engine.jdbc.spi.SqlExceptionHelper [http-nio-9090-exec-8] SQL Error: 23505, SQLState: 23505
2023-08-03 23:05:41,326 ERROR org.hibernate.engine.jdbc.spi.SqlExceptionHelper [http-nio-9090-exec-8] Нарушение уникального индекса или первичного ключа: "PUBLIC.UNIQ_EMAIL_INDEX_4 ON PUBLIC.USERS(EMAIL NULLS FIRST) VALUES ( /* 3 */ 'user@user.com' )"
Unique index or primary key violation: "PUBLIC.UNIQ_EMAIL_INDEX_4 ON PUBLIC.USERS(EMAIL NULLS FIRST) VALUES ( /* 3 */ 'user@user.com' )"; SQL statement:
update users set email=?, name=? where id=? [23505-214]
2023-08-03 23:05:41,326 INFO org.hibernate.engine.jdbc.batch.internal.AbstractBatchImpl [http-nio-9090-exec-8] HHH000010: On release of batch it still contained JDBC statements
2023-08-03 23:05:41,327 INFO ru.practicum.ErrorHandler [http-nio-9090-exec-8] Server error could not execute statement; SQL [n/a]; constraint [null]; nested exception is org.hibernate.exception.ConstraintViolationException: could not execute statement
2023-08-03 23:05:41,329 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-4] Response 500 INTERNAL_SERVER_ERROR
2023-08-03 23:05:41,329 INFO ru.practicum.shareit.user.UserController [http-nio-8080-exec-4] Has been updated: <500 INTERNAL_SERVER_ERROR Internal Server Error,[B@3a73125c,[]>
2023-08-03 23:05:41,353 INFO ru.practicum.shareit.user.UserController [http-nio-8080-exec-6] Request to get user with ID: 1
2023-08-03 23:05:41,355 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-6] HTTP GET http://localhost:9090/users/1
2023-08-03 23:05:41,356 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-6] Accept=[application/json, application/*+json]
2023-08-03 23:05:41,360 INFO ru.practicum.user.UserController [http-nio-9090-exec-9] Запрос на получение пользователя ID: 1
2023-08-03 23:05:41,361 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-9] Setting JDBC Connection [HikariProxyConnection@1402996994 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST] read-only
2023-08-03 23:05:41,362 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-9] Resetting read-only flag of JDBC Connection [HikariProxyConnection@1402996994 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST]
2023-08-03 23:05:41,364 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-6] Response 200 OK
2023-08-03 23:05:41,364 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-6] Reading to [java.lang.Object]
2023-08-03 23:05:41,386 INFO ru.practicum.shareit.user.UserController [http-nio-8080-exec-7] Request to get user with ID: 3
2023-08-03 23:05:41,387 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-7] HTTP GET http://localhost:9090/users/3
2023-08-03 23:05:41,387 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-7] Accept=[application/json, application/*+json]
2023-08-03 23:05:41,390 INFO ru.practicum.user.UserController [http-nio-9090-exec-10] Запрос на получение пользователя ID: 3
2023-08-03 23:05:41,390 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-10] Setting JDBC Connection [HikariProxyConnection@1063463918 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST] read-only
2023-08-03 23:05:41,392 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-10] Resetting read-only flag of JDBC Connection [HikariProxyConnection@1063463918 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST]
2023-08-03 23:05:41,394 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-7] Response 200 OK
2023-08-03 23:05:41,394 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-7] Reading to [java.lang.Object]
2023-08-03 23:05:41,417 INFO ru.practicum.shareit.user.UserController [http-nio-8080-exec-8] Request to get user with ID: 100
2023-08-03 23:05:41,418 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-8] HTTP GET http://localhost:9090/users/100
2023-08-03 23:05:41,419 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-8] Accept=[application/json, application/*+json]
2023-08-03 23:05:41,421 INFO ru.practicum.user.UserController [http-nio-9090-exec-1] Запрос на получение пользователя ID: 100
2023-08-03 23:05:41,421 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-1] Setting JDBC Connection [HikariProxyConnection@895907458 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST] read-only
2023-08-03 23:05:41,422 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-1] Resetting read-only flag of JDBC Connection [HikariProxyConnection@895907458 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST]
2023-08-03 23:05:41,422 INFO ru.practicum.user.UserServiceImpl [http-nio-9090-exec-1] Throw new NotFoundException
2023-08-03 23:05:41,423 INFO ru.practicum.ErrorHandler [http-nio-9090-exec-1] Not found: User with ID: 100 not found
2023-08-03 23:05:41,424 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-8] Response 404 NOT_FOUND
2023-08-03 23:05:41,449 INFO ru.practicum.shareit.user.UserController [http-nio-8080-exec-9] Request to delete with id: 3
2023-08-03 23:05:41,450 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-9] HTTP DELETE http://localhost:9090/users/3
2023-08-03 23:05:41,450 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-9] Accept=[application/json, application/*+json]
2023-08-03 23:05:41,452 INFO ru.practicum.user.UserController [http-nio-9090-exec-2] Запрос на удаление с ID: 3
2023-08-03 23:05:41,459 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-9] Response 204 NO_CONTENT
2023-08-03 23:05:41,482 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-10] HTTP POST http://localhost:9090/users
2023-08-03 23:05:41,483 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-10] Accept=[application/json, application/*+json]
2023-08-03 23:05:41,483 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-10] Writing [UserDto(id=0, email=user@user.com, name=user)] as "application/json"
2023-08-03 23:05:41,488 INFO ru.practicum.user.UserController [http-nio-9090-exec-3] Было создано: ru.practicum.user.model.User@78c33540
2023-08-03 23:05:41,490 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-10] Response 201 CREATED
2023-08-03 23:05:41,491 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-10] Reading to [java.lang.Object]
2023-08-03 23:05:41,516 INFO ru.practicum.shareit.user.UserController [http-nio-8080-exec-2] Request on get all
2023-08-03 23:05:41,517 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-2] HTTP GET http://localhost:9090/users
2023-08-03 23:05:41,517 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-2] Accept=[application/json, application/*+json]
2023-08-03 23:05:41,520 INFO ru.practicum.user.UserController [http-nio-9090-exec-4] Запрос на получение всего
2023-08-03 23:05:41,521 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-4] Setting JDBC Connection [HikariProxyConnection@817155232 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST] read-only
2023-08-03 23:05:41,534 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-4] Resetting read-only flag of JDBC Connection [HikariProxyConnection@817155232 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST]
2023-08-03 23:05:41,539 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-2] Response 200 OK
2023-08-03 23:05:41,540 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-2] Reading to [java.lang.Object]
2023-08-03 23:05:41,587 INFO ru.practicum.shareit.item.ItemController [http-nio-8080-exec-1] Request on add ItemDto(id=0, name=Дрель, description=Простая дрель, available=true, requestId=null), user id: 1
2023-08-03 23:05:41,591 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-1] HTTP POST http://localhost:9090/items
2023-08-03 23:05:41,592 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-1] Accept=[application/json, application/*+json]
2023-08-03 23:05:41,594 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-1] Writing [ItemDto(id=0, name=Дрель, description=Простая дрель, available=true, requestId=null)] as "application/json"
2023-08-03 23:05:41,606 INFO ru.practicum.item.ItemController [http-nio-9090-exec-5] Запрос на добавление ItemDto(id=0, name=Дрель, description=Простая дрель, available=true, requestId=null), идентификатор пользователя: 1
2023-08-03 23:05:41,625 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-1] Response 200 OK
2023-08-03 23:05:41,626 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-1] Reading to [java.lang.Object]
2023-08-03 23:05:41,646 INFO ru.practicum.shareit.ErrorHandler [http-nio-8080-exec-3] Missing request header: Required request header 'X-Sharer-User-Id' for method parameter type Long is not present
2023-08-03 23:05:41,667 INFO ru.practicum.shareit.item.ItemController [http-nio-8080-exec-5] Request on add ItemDto(id=0, name=Дрель, description=Простая дрель, available=true, requestId=null), user id: 10
2023-08-03 23:05:41,667 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-5] HTTP POST http://localhost:9090/items
2023-08-03 23:05:41,667 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-5] Accept=[application/json, application/*+json]
2023-08-03 23:05:41,668 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-5] Writing [ItemDto(id=0, name=Дрель, description=Простая дрель, available=true, requestId=null)] as "application/json"
2023-08-03 23:05:41,670 INFO ru.practicum.item.ItemController [http-nio-9090-exec-6] Запрос на добавление ItemDto(id=0, name=Дрель, description=Простая дрель, available=true, requestId=null), идентификатор пользователя: 10
2023-08-03 23:05:41,672 INFO ru.practicum.ErrorHandler [http-nio-9090-exec-6] Not found: User with ID: 10 not found
2023-08-03 23:05:41,673 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-5] Response 404 NOT_FOUND
2023-08-03 23:05:41,695 INFO ru.practicum.shareit.ErrorHandler [http-nio-8080-exec-6] Validation failed for field: available. Error message: Available should be specified
2023-08-03 23:05:41,718 INFO ru.practicum.shareit.ErrorHandler [http-nio-8080-exec-8] Validation failed for field: name. Error message: Name can't blank
2023-08-03 23:05:41,738 INFO ru.practicum.shareit.ErrorHandler [http-nio-8080-exec-10] Validation failed for field: description. Error message: Description can't blank
2023-08-03 23:05:41,761 INFO ru.practicum.shareit.item.ItemController [http-nio-8080-exec-1] Request on edit item id: 1, ItemDto(id=1, name=Дрель+, description=Аккумуляторная дрель, available=false, requestId=null), user id: 1
2023-08-03 23:05:41,762 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-1] HTTP PATCH http://localhost:9090/items/1
2023-08-03 23:05:41,762 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-1] Accept=[application/json, application/*+json]
2023-08-03 23:05:41,762 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-1] Writing [ItemDto(id=1, name=Дрель+, description=Аккумуляторная дрель, available=false, requestId=null)] as "application/json"
2023-08-03 23:05:41,766 INFO ru.practicum.item.ItemController [http-nio-9090-exec-7] Запрос на редактирование идентификатора элемента: 1, ItemDto(id=1, name=Дрель+, description=Аккумуляторная дрель, available=false, requestId=null), идентификатор пользователя: 1
2023-08-03 23:05:41,776 INFO ru.practicum.item.ItemServiceImpl [http-nio-9090-exec-7] Обновление: ru.practicum.item.model.Item@26cf8fb6
2023-08-03 23:05:41,776 INFO ru.practicum.item.ItemServiceImpl [http-nio-9090-exec-7] Название обновлено
2023-08-03 23:05:41,777 INFO ru.practicum.item.ItemServiceImpl [http-nio-9090-exec-7] Описание обновлено
2023-08-03 23:05:41,777 INFO ru.practicum.item.ItemServiceImpl [http-nio-9090-exec-7] Доступность обновлена
2023-08-03 23:05:41,780 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-1] Response 200 OK
2023-08-03 23:05:41,781 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-1] Reading to [java.lang.Object]
2023-08-03 23:05:41,803 INFO ru.practicum.shareit.ErrorHandler [http-nio-8080-exec-3] Missing request header: Required request header 'X-Sharer-User-Id' for method parameter type Long is not present
2023-08-03 23:05:41,824 INFO ru.practicum.shareit.item.ItemController [http-nio-8080-exec-5] Request on edit item id: 1, ItemDto(id=0, name=Дрель, description=Простая дрель, available=false, requestId=null), user id: 3
2023-08-03 23:05:41,825 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-5] HTTP PATCH http://localhost:9090/items/1
2023-08-03 23:05:41,826 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-5] Accept=[application/json, application/*+json]
2023-08-03 23:05:41,826 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-5] Writing [ItemDto(id=0, name=Дрель, description=Простая дрель, available=false, requestId=null)] as "application/json"
2023-08-03 23:05:41,829 INFO ru.practicum.item.ItemController [http-nio-9090-exec-8] Запрос на редактирование идентификатора элемента: 1, ItemDto(id=0, name=Дрель, description=Простая дрель, available=false, requestId=null), идентификатор пользователя: 3
2023-08-03 23:05:41,830 INFO ru.practicum.item.ItemServiceImpl [http-nio-9090-exec-8] Обновление: ru.practicum.item.model.Item@1c4ca9ab
2023-08-03 23:05:41,831 INFO ru.practicum.ErrorHandler [http-nio-9090-exec-8] Not found: Пользователь не является владельцем элемента
2023-08-03 23:05:41,834 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-5] Response 404 NOT_FOUND
2023-08-03 23:05:41,858 INFO ru.practicum.shareit.item.ItemController [http-nio-8080-exec-6] Request on edit item id: 1, ItemDto(id=0, name=null, description=null, available=true, requestId=null), user id: 1
2023-08-03 23:05:41,859 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-6] HTTP PATCH http://localhost:9090/items/1
2023-08-03 23:05:41,859 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-6] Accept=[application/json, application/*+json]
2023-08-03 23:05:41,860 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-6] Writing [ItemDto(id=0, name=null, description=null, available=true, requestId=null)] as "application/json"
2023-08-03 23:05:41,863 INFO ru.practicum.item.ItemController [http-nio-9090-exec-9] Запрос на редактирование идентификатора элемента: 1, ItemDto(id=0, name=null, description=null, available=true, requestId=null), идентификатор пользователя: 1
2023-08-03 23:05:41,865 INFO ru.practicum.item.ItemServiceImpl [http-nio-9090-exec-9] Обновление: ru.practicum.item.model.Item@37dd72bb
2023-08-03 23:05:41,866 INFO ru.practicum.item.ItemServiceImpl [http-nio-9090-exec-9] Доступность обновлена
2023-08-03 23:05:41,869 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-6] Response 200 OK
2023-08-03 23:05:41,870 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-6] Reading to [java.lang.Object]
2023-08-03 23:05:41,891 INFO ru.practicum.shareit.item.ItemController [http-nio-8080-exec-7] Request on edit item id: 1, ItemDto(id=0, name=null, description=Аккумуляторная дрель + аккумулятор, available=null, requestId=null), user id: 1
2023-08-03 23:05:41,892 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-7] HTTP PATCH http://localhost:9090/items/1
2023-08-03 23:05:41,892 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-7] Accept=[application/json, application/*+json]
2023-08-03 23:05:41,892 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-7] Writing [ItemDto(id=0, name=null, description=Аккумуляторная дрель + аккумулятор, available=null, requestId=null)] as "application/json"
2023-08-03 23:05:41,894 INFO ru.practicum.item.ItemController [http-nio-9090-exec-10] Запрос на редактирование идентификатора элемента: 1, ItemDto(id=0, name=null, description=Аккумуляторная дрель + аккумулятор, available=null, requestId=null), идентификатор пользователя: 1
2023-08-03 23:05:41,896 INFO ru.practicum.item.ItemServiceImpl [http-nio-9090-exec-10] Обновление: ru.practicum.item.model.Item@2ed36915
2023-08-03 23:05:41,896 INFO ru.practicum.item.ItemServiceImpl [http-nio-9090-exec-10] Описание обновлено
2023-08-03 23:05:41,898 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-7] Response 200 OK
2023-08-03 23:05:41,899 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-7] Reading to [java.lang.Object]
2023-08-03 23:05:41,920 INFO ru.practicum.shareit.item.ItemController [http-nio-8080-exec-8] Request on edit item id: 1, ItemDto(id=0, name=Аккумуляторная дрель, description=null, available=null, requestId=null), user id: 1
2023-08-03 23:05:41,921 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-8] HTTP PATCH http://localhost:9090/items/1
2023-08-03 23:05:41,921 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-8] Accept=[application/json, application/*+json]
2023-08-03 23:05:41,922 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-8] Writing [ItemDto(id=0, name=Аккумуляторная дрель, description=null, available=null, requestId=null)] as "application/json"
2023-08-03 23:05:41,924 INFO ru.practicum.item.ItemController [http-nio-9090-exec-1] Запрос на редактирование идентификатора элемента: 1, ItemDto(id=0, name=Аккумуляторная дрель, description=null, available=null, requestId=null), идентификатор пользователя: 1
2023-08-03 23:05:41,926 INFO ru.practicum.item.ItemServiceImpl [http-nio-9090-exec-1] Обновление: ru.practicum.item.model.Item@306a3aa6
2023-08-03 23:05:41,927 INFO ru.practicum.item.ItemServiceImpl [http-nio-9090-exec-1] Название обновлено
2023-08-03 23:05:41,930 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-8] Response 200 OK
2023-08-03 23:05:41,930 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-8] Reading to [java.lang.Object]
2023-08-03 23:05:41,953 INFO ru.practicum.shareit.item.ItemController [http-nio-8080-exec-9] Request from user ID: 1 on get item. ID: 1
2023-08-03 23:05:41,953 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-9] HTTP GET http://localhost:9090/items/1
2023-08-03 23:05:41,953 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-9] Accept=[application/json, application/*+json]
2023-08-03 23:05:41,956 INFO ru.practicum.item.ItemController [http-nio-9090-exec-2] Запрос от идентификатора пользователя: 1 при получении элемента. Идентификатор: 1
2023-08-03 23:05:41,957 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-2] Setting JDBC Connection [HikariProxyConnection@1538279730 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST] read-only
2023-08-03 23:05:41,959 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-2] Resetting read-only flag of JDBC Connection [HikariProxyConnection@1538279730 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST]
2023-08-03 23:05:41,986 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-9] Response 200 OK
2023-08-03 23:05:41,986 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-9] Reading to [java.lang.Object]
2023-08-03 23:05:42,008 INFO ru.practicum.shareit.item.ItemController [http-nio-8080-exec-10] Request from user ID: 4 on get item. ID: 1
2023-08-03 23:05:42,009 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-10] HTTP GET http://localhost:9090/items/1
2023-08-03 23:05:42,009 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-10] Accept=[application/json, application/*+json]
2023-08-03 23:05:42,011 INFO ru.practicum.item.ItemController [http-nio-9090-exec-3] Запрос от идентификатора пользователя: 4 при получении элемента. Идентификатор: 1
2023-08-03 23:05:42,012 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-3] Setting JDBC Connection [HikariProxyConnection@1074112770 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST] read-only
2023-08-03 23:05:42,013 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-3] Resetting read-only flag of JDBC Connection [HikariProxyConnection@1074112770 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST]
2023-08-03 23:05:42,015 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-10] Response 200 OK
2023-08-03 23:05:42,015 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-10] Reading to [java.lang.Object]
2023-08-03 23:05:42,034 INFO ru.practicum.shareit.item.ItemController [http-nio-8080-exec-2] Request from user ID: 4 on get item. ID: 100
2023-08-03 23:05:42,034 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-2] HTTP GET http://localhost:9090/items/100
2023-08-03 23:05:42,035 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-2] Accept=[application/json, application/*+json]
2023-08-03 23:05:42,037 INFO ru.practicum.item.ItemController [http-nio-9090-exec-4] Запрос от идентификатора пользователя: 4 при получении элемента. Идентификатор: 100
2023-08-03 23:05:42,038 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-4] Setting JDBC Connection [HikariProxyConnection@2054775882 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST] read-only
2023-08-03 23:05:42,039 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-4] Resetting read-only flag of JDBC Connection [HikariProxyConnection@2054775882 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST]
2023-08-03 23:05:42,040 INFO ru.practicum.ErrorHandler [http-nio-9090-exec-4] Not found: Вещь не найдена
2023-08-03 23:05:42,041 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-2] Response 404 NOT_FOUND
2023-08-03 23:05:42,062 INFO ru.practicum.shareit.item.ItemController [http-nio-8080-exec-1] Request on add ItemDto(id=0, name=Отвертка, description=Аккумуляторная отвертка, available=true, requestId=null), user id: 4
2023-08-03 23:05:42,062 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-1] HTTP POST http://localhost:9090/items
2023-08-03 23:05:42,063 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-1] Accept=[application/json, application/*+json]
2023-08-03 23:05:42,063 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-1] Writing [ItemDto(id=0, name=Отвертка, description=Аккумуляторная отвертка, available=true, requestId=null)] as "application/json"
2023-08-03 23:05:42,065 INFO ru.practicum.item.ItemController [http-nio-9090-exec-5] Запрос на добавление ItemDto(id=0, name=Отвертка, description=Аккумуляторная отвертка, available=true, requestId=null), идентификатор пользователя: 4
2023-08-03 23:05:42,068 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-1] Response 200 OK
2023-08-03 23:05:42,068 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-1] Reading to [java.lang.Object]
2023-08-03 23:05:42,083 INFO ru.practicum.shareit.item.ItemController [http-nio-8080-exec-3] Request on add ItemDto(id=0, name=Клей Момент, description=Тюбик суперклея марки Момент, available=true, requestId=null), user id: 4
2023-08-03 23:05:42,084 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-3] HTTP POST http://localhost:9090/items
2023-08-03 23:05:42,084 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-3] Accept=[application/json, application/*+json]
2023-08-03 23:05:42,084 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-3] Writing [ItemDto(id=0, name=Клей Момент, description=Тюбик суперклея марки Момент, available=true, requestId=null)] as "application/json"
2023-08-03 23:05:42,087 INFO ru.practicum.item.ItemController [http-nio-9090-exec-6] Запрос на добавление ItemDto(id=0, name=Клей Момент, description=Тюбик суперклея марки Момент, available=true, requestId=null), идентификатор пользователя: 4
2023-08-03 23:05:42,091 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-3] Response 200 OK
2023-08-03 23:05:42,092 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-3] Reading to [java.lang.Object]
2023-08-03 23:05:42,115 INFO ru.practicum.shareit.item.ItemController [http-nio-8080-exec-4] Request on get all for user id: 1
2023-08-03 23:05:42,116 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-4] HTTP GET http://localhost:9090/items?from=0&size=20
2023-08-03 23:05:42,117 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-4] Accept=[application/json, application/*+json]
2023-08-03 23:05:42,123 INFO ru.practicum.item.ItemController [http-nio-9090-exec-7] Запрос на получение всего для идентификатора пользователя: 1
2023-08-03 23:05:42,124 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-7] Setting JDBC Connection [HikariProxyConnection@589900019 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST] read-only
2023-08-03 23:05:42,125 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-7] Resetting read-only flag of JDBC Connection [HikariProxyConnection@589900019 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST]
2023-08-03 23:05:42,145 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-4] Response 200 OK
2023-08-03 23:05:42,146 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-4] Reading to [java.lang.Object]
2023-08-03 23:05:42,168 INFO ru.practicum.shareit.item.ItemController [http-nio-8080-exec-5] Request on get all for user id: 4
2023-08-03 23:05:42,168 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-5] HTTP GET http://localhost:9090/items?from=0&size=20
2023-08-03 23:05:42,169 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-5] Accept=[application/json, application/*+json]
2023-08-03 23:05:42,171 INFO ru.practicum.item.ItemController [http-nio-9090-exec-8] Запрос на получение всего для идентификатора пользователя: 4
2023-08-03 23:05:42,171 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-8] Setting JDBC Connection [HikariProxyConnection@787104172 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST] read-only
2023-08-03 23:05:42,173 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-8] Resetting read-only flag of JDBC Connection [HikariProxyConnection@787104172 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST]
2023-08-03 23:05:42,185 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-5] Response 200 OK
2023-08-03 23:05:42,186 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-5] Reading to [java.lang.Object]
2023-08-03 23:05:42,207 INFO ru.practicum.shareit.item.ItemController [http-nio-8080-exec-6] Request on search text: аккУМУляторная
2023-08-03 23:05:42,208 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-6] HTTP GET http://localhost:9090/items/search?text=%D0%B0%D0%BA%D0%BA%D1%83%D0%BC%D1%83%D0%BB%D1%8F%D1%82%D0%BE%D1%80%D0%BD%D0%B0%D1%8F&from=0&size=20
2023-08-03 23:05:42,208 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-6] Accept=[application/json, application/*+json]
2023-08-03 23:05:42,213 INFO ru.practicum.item.ItemController [http-nio-9090-exec-9] Запрос по поисковому тексту: аккумуляторная
2023-08-03 23:05:42,221 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-6] Response 200 OK
2023-08-03 23:05:42,221 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-6] Reading to [java.lang.Object]
2023-08-03 23:05:42,245 INFO ru.practicum.shareit.item.ItemController [http-nio-8080-exec-7] Request on edit item id: 2, ItemDto(id=0, name=null, description=null, available=false, requestId=null), user id: 4
2023-08-03 23:05:42,246 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-7] HTTP PATCH http://localhost:9090/items/2
2023-08-03 23:05:42,246 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-7] Accept=[application/json, application/*+json]
2023-08-03 23:05:42,247 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-7] Writing [ItemDto(id=0, name=null, description=null, available=false, requestId=null)] as "application/json"
2023-08-03 23:05:42,251 INFO ru.practicum.item.ItemController [http-nio-9090-exec-10] Запрос на редактирование идентификатора элемента: 2, ItemDto(id=0, name=null, description=null, available=false, requestId=null), идентификатор пользователя: 4
2023-08-03 23:05:42,253 INFO ru.practicum.item.ItemServiceImpl [http-nio-9090-exec-10] Обновление: ru.practicum.item.model.Item@14f8cb11
2023-08-03 23:05:42,253 INFO ru.practicum.item.ItemServiceImpl [http-nio-9090-exec-10] Доступность обновлена
2023-08-03 23:05:42,256 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-7] Response 200 OK
2023-08-03 23:05:42,257 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-7] Reading to [java.lang.Object]
2023-08-03 23:05:42,277 INFO ru.practicum.shareit.item.ItemController [http-nio-8080-exec-8] Request on search text: дРелЬ
2023-08-03 23:05:42,278 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-8] HTTP GET http://localhost:9090/items/search?text=%D0%B4%D1%80%D0%B5%D0%BB%D1%8C&from=0&size=20
2023-08-03 23:05:42,278 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-8] Accept=[application/json, application/*+json]
2023-08-03 23:05:42,280 INFO ru.practicum.item.ItemController [http-nio-9090-exec-1] Запрос по поисковому тексту: дрель
2023-08-03 23:05:42,283 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-8] Response 200 OK
2023-08-03 23:05:42,283 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-8] Reading to [java.lang.Object]
2023-08-03 23:05:42,302 INFO ru.practicum.shareit.item.ItemController [http-nio-8080-exec-9] Request on search text: аккУМУляторная
2023-08-03 23:05:42,303 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-9] HTTP GET http://localhost:9090/items/search?text=%D0%B0%D0%BA%D0%BA%D1%83%D0%BC%D1%83%D0%BB%D1%8F%D1%82%D0%BE%D1%80%D0%BD%D0%B0%D1%8F&from=0&size=20
2023-08-03 23:05:42,303 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-9] Accept=[application/json, application/*+json]
2023-08-03 23:05:42,305 INFO ru.practicum.item.ItemController [http-nio-9090-exec-2] Запрос по поисковому тексту: аккумуляторная
2023-08-03 23:05:42,308 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-9] Response 200 OK
2023-08-03 23:05:42,309 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-9] Reading to [java.lang.Object]
2023-08-03 23:05:42,330 INFO ru.practicum.shareit.item.ItemController [http-nio-8080-exec-10] Request on edit item id: 2, ItemDto(id=0, name=null, description=null, available=true, requestId=null), user id: 4
2023-08-03 23:05:42,331 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-10] HTTP PATCH http://localhost:9090/items/2
2023-08-03 23:05:42,331 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-10] Accept=[application/json, application/*+json]
2023-08-03 23:05:42,331 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-10] Writing [ItemDto(id=0, name=null, description=null, available=true, requestId=null)] as "application/json"
2023-08-03 23:05:42,334 INFO ru.practicum.item.ItemController [http-nio-9090-exec-3] Запрос на редактирование идентификатора элемента: 2, ItemDto(id=0, name=null, description=null, available=true, requestId=null), идентификатор пользователя: 4
2023-08-03 23:05:42,335 INFO ru.practicum.item.ItemServiceImpl [http-nio-9090-exec-3] Обновление: ru.practicum.item.model.Item@648a6d82
2023-08-03 23:05:42,335 INFO ru.practicum.item.ItemServiceImpl [http-nio-9090-exec-3] Доступность обновлена
2023-08-03 23:05:42,337 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-10] Response 200 OK
2023-08-03 23:05:42,338 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-10] Reading to [java.lang.Object]
2023-08-03 23:05:42,357 INFO ru.practicum.shareit.item.ItemController [http-nio-8080-exec-2] Request on search text: оТверТ
2023-08-03 23:05:42,357 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-2] HTTP GET http://localhost:9090/items/search?text=%D0%BE%D1%82%D0%B2%D0%B5%D1%80%D1%82&from=0&size=20
2023-08-03 23:05:42,358 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-2] Accept=[application/json, application/*+json]
2023-08-03 23:05:42,359 INFO ru.practicum.item.ItemController [http-nio-9090-exec-4] Запрос по поисковому тексту: отверт
2023-08-03 23:05:42,362 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-2] Response 200 OK
2023-08-03 23:05:42,362 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-2] Reading to [java.lang.Object]
2023-08-03 23:05:42,384 INFO ru.practicum.shareit.item.ItemController [http-nio-8080-exec-1] Request on search text: 
2023-08-03 23:05:42,404 INFO ru.practicum.shareit.item.ItemController [http-nio-8080-exec-3] Request on edit item id: 2, ItemDto(id=0, name=null, description=null, available=false, requestId=null), user id: 4
2023-08-03 23:05:42,404 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-3] HTTP PATCH http://localhost:9090/items/2
2023-08-03 23:05:42,404 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-3] Accept=[application/json, application/*+json]
2023-08-03 23:05:42,405 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-3] Writing [ItemDto(id=0, name=null, description=null, available=false, requestId=null)] as "application/json"
2023-08-03 23:05:42,406 INFO ru.practicum.item.ItemController [http-nio-9090-exec-5] Запрос на редактирование идентификатора элемента: 2, ItemDto(id=0, name=null, description=null, available=false, requestId=null), идентификатор пользователя: 4
2023-08-03 23:05:42,408 INFO ru.practicum.item.ItemServiceImpl [http-nio-9090-exec-5] Обновление: ru.practicum.item.model.Item@2855afa3
2023-08-03 23:05:42,408 INFO ru.practicum.item.ItemServiceImpl [http-nio-9090-exec-5] Доступность обновлена
2023-08-03 23:05:42,411 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-3] Response 200 OK
2023-08-03 23:05:42,412 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-3] Reading to [java.lang.Object]
2023-08-03 23:05:42,485 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-4] HTTP POST http://localhost:9090/bookings
2023-08-03 23:05:42,486 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-4] Accept=[application/json, application/*+json]
2023-08-03 23:05:42,492 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-4] Writing [BookingDto(id=0, itemId=2, start=2023-08-04T23:05:42, end=2023-08-05T23:05:42, status=null, booker=null)] as "application/json"
2023-08-03 23:05:42,520 INFO ru.practicum.ErrorHandler [http-nio-9090-exec-6] Not available: Элемент с идентификатором: 2 недоступен
2023-08-03 23:05:42,522 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-4] Response 400 BAD_REQUEST
2023-08-03 23:05:42,546 INFO ru.practicum.shareit.item.ItemController [http-nio-8080-exec-6] Request on edit item id: 2, ItemDto(id=0, name=null, description=null, available=true, requestId=null), user id: 4
2023-08-03 23:05:42,546 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-6] HTTP PATCH http://localhost:9090/items/2
2023-08-03 23:05:42,546 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-6] Accept=[application/json, application/*+json]
2023-08-03 23:05:42,547 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-6] Writing [ItemDto(id=0, name=null, description=null, available=true, requestId=null)] as "application/json"
2023-08-03 23:05:42,550 INFO ru.practicum.item.ItemController [http-nio-9090-exec-7] Запрос на редактирование идентификатора элемента: 2, ItemDto(id=0, name=null, description=null, available=true, requestId=null), идентификатор пользователя: 4
2023-08-03 23:05:42,552 INFO ru.practicum.item.ItemServiceImpl [http-nio-9090-exec-7] Обновление: ru.practicum.item.model.Item@2a3b858a
2023-08-03 23:05:42,553 INFO ru.practicum.item.ItemServiceImpl [http-nio-9090-exec-7] Доступность обновлена
2023-08-03 23:05:42,556 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-6] Response 200 OK
2023-08-03 23:05:42,556 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-6] Reading to [java.lang.Object]
2023-08-03 23:05:42,587 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-7] HTTP POST http://localhost:9090/bookings
2023-08-03 23:05:42,588 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-7] Accept=[application/json, application/*+json]
2023-08-03 23:05:42,588 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-7] Writing [BookingDto(id=0, itemId=2, start=2023-08-04T23:05:42, end=2023-08-05T23:05:42, status=null, booker=null)] as "application/json"
2023-08-03 23:05:42,594 INFO ru.practicum.ErrorHandler [http-nio-9090-exec-8] Not found: User with ID: 100 not found
2023-08-03 23:05:42,595 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-7] Response 404 NOT_FOUND
2023-08-03 23:05:42,620 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-8] HTTP POST http://localhost:9090/bookings
2023-08-03 23:05:42,620 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-8] Accept=[application/json, application/*+json]
2023-08-03 23:05:42,620 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-8] Writing [BookingDto(id=0, itemId=200, start=2023-08-04T23:05:42, end=2023-08-05T23:05:42, status=null, booker=null)] as "application/json"
2023-08-03 23:05:42,625 INFO ru.practicum.ErrorHandler [http-nio-9090-exec-9] Not found: Элемент с идентификатором:200 не найден
2023-08-03 23:05:42,626 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-8] Response 404 NOT_FOUND
2023-08-03 23:05:42,658 INFO ru.practicum.shareit.ErrorHandler [http-nio-8080-exec-9] Validation failed for field: end. Error message: должно содержать дату, которая еще не наступила
2023-08-03 23:05:42,658 INFO ru.practicum.shareit.ErrorHandler [http-nio-8080-exec-9] Validation failed for field: validDateOrder. Error message: End date must be after start date and dates cannot be equal
2023-08-03 23:05:42,680 INFO ru.practicum.shareit.ErrorHandler [http-nio-8080-exec-2] Validation failed for field: validDateOrder. Error message: End date must be after start date and dates cannot be equal
2023-08-03 23:05:42,700 INFO ru.practicum.shareit.ErrorHandler [http-nio-8080-exec-3] Validation failed for field: validDateOrder. Error message: End date must be after start date and dates cannot be equal
2023-08-03 23:05:42,723 INFO ru.practicum.shareit.ErrorHandler [http-nio-8080-exec-5] Validation failed for field: validDateOrder. Error message: End date must be after start date and dates cannot be equal
2023-08-03 23:05:42,724 INFO ru.practicum.shareit.ErrorHandler [http-nio-8080-exec-5] Validation failed for field: start. Error message: не должно равняться null
2023-08-03 23:05:42,752 INFO ru.practicum.shareit.ErrorHandler [http-nio-8080-exec-7] Validation failed for field: validDateOrder. Error message: End date must be after start date and dates cannot be equal
2023-08-03 23:05:42,753 INFO ru.practicum.shareit.ErrorHandler [http-nio-8080-exec-7] Validation failed for field: end. Error message: не должно равняться null
2023-08-03 23:05:42,777 INFO ru.practicum.shareit.ErrorHandler [http-nio-8080-exec-9] Validation failed for field: start. Error message: должно содержать сегодняшнее число или дату, которая еще не наступила
2023-08-03 23:05:42,799 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-2] HTTP POST http://localhost:9090/bookings
2023-08-03 23:05:42,799 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-2] Accept=[application/json, application/*+json]
2023-08-03 23:05:42,799 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-2] Writing [BookingDto(id=0, itemId=2, start=2023-08-03T23:05:45, end=2023-08-03T23:05:46, status=null, booker=null)] as "application/json"
2023-08-03 23:05:42,816 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-2] Response 200 OK
2023-08-03 23:05:42,817 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-2] Reading to [java.lang.Object]
2023-08-03 23:05:42,842 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-1] HTTP PATCH http://localhost:9090/bookings/1?approved=true
2023-08-03 23:05:42,842 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-1] Accept=[application/json, application/*+json]
2023-08-03 23:05:42,850 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-1] Response 200 OK
2023-08-03 23:05:42,851 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-1] Reading to [java.lang.Object]
2023-08-03 23:05:42,876 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-3] HTTP POST http://localhost:9090/bookings
2023-08-03 23:05:42,876 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-3] Accept=[application/json, application/*+json]
2023-08-03 23:05:42,876 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-3] Writing [BookingDto(id=0, itemId=2, start=2023-08-04T23:05:42, end=2023-08-05T23:05:42, status=null, booker=null)] as "application/json"
2023-08-03 23:05:42,881 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-3] Response 200 OK
2023-08-03 23:05:42,881 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-3] Reading to [java.lang.Object]
2023-08-03 23:05:42,905 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-4] HTTP GET http://localhost:9090/bookings/2
2023-08-03 23:05:42,906 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-4] Accept=[application/json, application/*+json]
2023-08-03 23:05:42,910 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-3] Setting JDBC Connection [HikariProxyConnection@1504179129 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST] read-only
2023-08-03 23:05:42,911 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-3] Resetting read-only flag of JDBC Connection [HikariProxyConnection@1504179129 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST]
2023-08-03 23:05:42,912 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-3] Setting JDBC Connection [HikariProxyConnection@1504179129 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST] read-only
2023-08-03 23:05:42,913 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-3] Resetting read-only flag of JDBC Connection [HikariProxyConnection@1504179129 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST]
2023-08-03 23:05:42,915 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-4] Response 200 OK
2023-08-03 23:05:42,915 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-4] Reading to [java.lang.Object]
2023-08-03 23:05:42,933 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-5] HTTP GET http://localhost:9090/bookings/2
2023-08-03 23:05:42,933 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-5] Accept=[application/json, application/*+json]
2023-08-03 23:05:42,935 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-4] Setting JDBC Connection [HikariProxyConnection@607848504 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST] read-only
2023-08-03 23:05:42,936 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-4] Resetting read-only flag of JDBC Connection [HikariProxyConnection@607848504 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST]
2023-08-03 23:05:42,937 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-4] Setting JDBC Connection [HikariProxyConnection@607848504 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST] read-only
2023-08-03 23:05:42,937 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-4] Resetting read-only flag of JDBC Connection [HikariProxyConnection@607848504 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST]
2023-08-03 23:05:42,939 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-5] Response 200 OK
2023-08-03 23:05:42,940 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-5] Reading to [java.lang.Object]
2023-08-03 23:05:42,964 INFO ru.practicum.shareit.booking.BookingController [http-nio-8080-exec-6] Get booking with state ALL, userId=100, from=0, size=20
2023-08-03 23:05:42,964 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-6] HTTP GET http://localhost:9090/bookings?state=ALL&from=0&size=20
2023-08-03 23:05:42,965 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-6] Accept=[application/json, application/*+json]
2023-08-03 23:05:42,967 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-5] Setting JDBC Connection [HikariProxyConnection@216084925 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST] read-only
2023-08-03 23:05:42,968 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-5] Resetting read-only flag of JDBC Connection [HikariProxyConnection@216084925 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST]
2023-08-03 23:05:42,968 INFO ru.practicum.ErrorHandler [http-nio-9090-exec-5] Not found: User with ID: 100 not found
2023-08-03 23:05:42,969 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-6] Response 404 NOT_FOUND
2023-08-03 23:05:42,988 INFO ru.practicum.shareit.booking.BookingController [http-nio-8080-exec-7] Get booking with state ALL, userId=100, from=0, size=20
2023-08-03 23:05:42,989 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-7] HTTP GET http://localhost:9090/bookings/owner?state=ALL&from=0&size=20
2023-08-03 23:05:42,989 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-7] Accept=[application/json, application/*+json]
2023-08-03 23:05:42,991 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-6] Setting JDBC Connection [HikariProxyConnection@1675408740 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST] read-only
2023-08-03 23:05:42,993 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-6] Resetting read-only flag of JDBC Connection [HikariProxyConnection@1675408740 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST]
2023-08-03 23:05:42,993 INFO ru.practicum.ErrorHandler [http-nio-9090-exec-6] Not found: User with ID: 100 not found
2023-08-03 23:05:42,995 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-7] Response 404 NOT_FOUND
2023-08-03 23:05:43,015 INFO ru.practicum.shareit.booking.BookingController [http-nio-8080-exec-8] Get booking with state ALL, userId=1, from=0, size=20
2023-08-03 23:05:43,016 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-8] HTTP GET http://localhost:9090/bookings?state=ALL&from=0&size=20
2023-08-03 23:05:43,016 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-8] Accept=[application/json, application/*+json]
2023-08-03 23:05:43,018 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-7] Setting JDBC Connection [HikariProxyConnection@560892584 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST] read-only
2023-08-03 23:05:43,019 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-7] Resetting read-only flag of JDBC Connection [HikariProxyConnection@560892584 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST]
2023-08-03 23:05:43,023 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-8] Response 200 OK
2023-08-03 23:05:43,023 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-8] Reading to [java.lang.Object]
2023-08-03 23:05:43,048 INFO ru.practicum.shareit.booking.BookingController [http-nio-8080-exec-9] Get booking with state ALL, userId=1, from=0, size=20
2023-08-03 23:05:43,048 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-9] HTTP GET http://localhost:9090/bookings?state=ALL&from=0&size=20
2023-08-03 23:05:43,048 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-9] Accept=[application/json, application/*+json]
2023-08-03 23:05:43,050 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-8] Setting JDBC Connection [HikariProxyConnection@103389851 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST] read-only
2023-08-03 23:05:43,051 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-8] Resetting read-only flag of JDBC Connection [HikariProxyConnection@103389851 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST]
2023-08-03 23:05:43,053 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-9] Response 200 OK
2023-08-03 23:05:43,054 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-9] Reading to [java.lang.Object]
2023-08-03 23:05:43,097 INFO ru.practicum.shareit.booking.BookingController [http-nio-8080-exec-10] Get booking with state FUTURE, userId=1, from=0, size=20
2023-08-03 23:05:43,098 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-10] HTTP GET http://localhost:9090/bookings?state=FUTURE&from=0&size=20
2023-08-03 23:05:43,098 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-10] Accept=[application/json, application/*+json]
2023-08-03 23:05:43,101 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-9] Setting JDBC Connection [HikariProxyConnection@1519240476 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST] read-only
2023-08-03 23:05:43,102 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-9] Resetting read-only flag of JDBC Connection [HikariProxyConnection@1519240476 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST]
2023-08-03 23:05:43,106 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-10] Response 200 OK
2023-08-03 23:05:43,107 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-10] Reading to [java.lang.Object]
2023-08-03 23:05:43,136 INFO ru.practicum.shareit.ErrorHandler [http-nio-8080-exec-2] Bad booking state: Unknown state: UNSUPPORTED_STATUS
2023-08-03 23:05:43,159 INFO ru.practicum.shareit.booking.BookingController [http-nio-8080-exec-3] Get booking with state ALL, userId=4, from=0, size=20
2023-08-03 23:05:43,159 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-3] HTTP GET http://localhost:9090/bookings/owner?state=ALL&from=0&size=20
2023-08-03 23:05:43,160 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-3] Accept=[application/json, application/*+json]
2023-08-03 23:05:43,162 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-10] Setting JDBC Connection [HikariProxyConnection@1116807177 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST] read-only
2023-08-03 23:05:43,163 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-10] Resetting read-only flag of JDBC Connection [HikariProxyConnection@1116807177 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST]
2023-08-03 23:05:43,168 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-3] Response 200 OK
2023-08-03 23:05:43,168 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-3] Reading to [java.lang.Object]
2023-08-03 23:05:43,195 INFO ru.practicum.shareit.booking.BookingController [http-nio-8080-exec-4] Get booking with state ALL, userId=4, from=0, size=20
2023-08-03 23:05:43,196 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-4] HTTP GET http://localhost:9090/bookings/owner?state=ALL&from=0&size=20
2023-08-03 23:05:43,196 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-4] Accept=[application/json, application/*+json]
2023-08-03 23:05:43,198 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-1] Setting JDBC Connection [HikariProxyConnection@2059372914 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST] read-only
2023-08-03 23:05:43,199 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-1] Resetting read-only flag of JDBC Connection [HikariProxyConnection@2059372914 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST]
2023-08-03 23:05:43,202 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-4] Response 200 OK
2023-08-03 23:05:43,203 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-4] Reading to [java.lang.Object]
2023-08-03 23:05:43,228 INFO ru.practicum.shareit.booking.BookingController [http-nio-8080-exec-5] Get booking with state FUTURE, userId=4, from=0, size=20
2023-08-03 23:05:43,228 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-5] HTTP GET http://localhost:9090/bookings/owner?state=FUTURE&from=0&size=20
2023-08-03 23:05:43,228 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-5] Accept=[application/json, application/*+json]
2023-08-03 23:05:43,231 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-2] Setting JDBC Connection [HikariProxyConnection@1485749111 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST] read-only
2023-08-03 23:05:43,232 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-2] Resetting read-only flag of JDBC Connection [HikariProxyConnection@1485749111 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST]
2023-08-03 23:05:43,236 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-5] Response 200 OK
2023-08-03 23:05:43,236 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-5] Reading to [java.lang.Object]
2023-08-03 23:05:43,258 INFO ru.practicum.shareit.ErrorHandler [http-nio-8080-exec-6] Bad booking state: Unknown state: UNSUPPORTED_STATUS
2023-08-03 23:05:43,276 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-8] HTTP GET http://localhost:9090/bookings/1000
2023-08-03 23:05:43,276 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-8] Accept=[application/json, application/*+json]
2023-08-03 23:05:43,278 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-3] Setting JDBC Connection [HikariProxyConnection@36787301 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST] read-only
2023-08-03 23:05:43,279 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-3] Resetting read-only flag of JDBC Connection [HikariProxyConnection@36787301 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST]
2023-08-03 23:05:43,279 INFO ru.practicum.ErrorHandler [http-nio-9090-exec-3] Not found: Бронирование: 1 000 не найдено
2023-08-03 23:05:43,281 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-8] Response 404 NOT_FOUND
2023-08-03 23:05:43,299 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-9] HTTP POST http://localhost:9090/users
2023-08-03 23:05:43,299 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-9] Accept=[application/json, application/*+json]
2023-08-03 23:05:43,299 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-9] Writing [UserDto(id=0, email=other@other.com, name=other)] as "application/json"
2023-08-03 23:05:43,302 INFO ru.practicum.user.UserController [http-nio-9090-exec-4] Было создано: ru.practicum.user.model.User@7218df40
2023-08-03 23:05:43,303 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-9] Response 201 CREATED
2023-08-03 23:05:43,304 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-9] Reading to [java.lang.Object]
2023-08-03 23:05:43,325 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-10] HTTP GET http://localhost:9090/bookings/1
2023-08-03 23:05:43,325 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-10] Accept=[application/json, application/*+json]
2023-08-03 23:05:43,327 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-5] Setting JDBC Connection [HikariProxyConnection@356635504 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST] read-only
2023-08-03 23:05:43,328 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-5] Resetting read-only flag of JDBC Connection [HikariProxyConnection@356635504 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST]
2023-08-03 23:05:43,328 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-5] Setting JDBC Connection [HikariProxyConnection@356635504 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST] read-only
2023-08-03 23:05:43,329 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-5] Resetting read-only flag of JDBC Connection [HikariProxyConnection@356635504 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST]
2023-08-03 23:05:43,330 INFO ru.practicum.ErrorHandler [http-nio-9090-exec-5] Not found: User with id: 5 do not have available
2023-08-03 23:05:43,331 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-10] Response 404 NOT_FOUND
2023-08-03 23:05:43,349 INFO ru.practicum.shareit.ErrorHandler [http-nio-8080-exec-2] Server error Required request parameter 'approved' for method parameter type Boolean is not present
2023-08-03 23:05:43,370 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-3] HTTP PATCH http://localhost:9090/bookings/2?approved=true
2023-08-03 23:05:43,370 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-3] Accept=[application/json, application/*+json]
2023-08-03 23:05:43,373 INFO ru.practicum.ErrorHandler [http-nio-9090-exec-6] Not found: User with id: 1 do not have available
2023-08-03 23:05:43,373 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-3] Response 404 NOT_FOUND
2023-08-03 23:05:43,394 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-4] HTTP PATCH http://localhost:9090/bookings/2?approved=true
2023-08-03 23:05:43,394 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-4] Accept=[application/json, application/*+json]
2023-08-03 23:05:43,401 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-4] Response 200 OK
2023-08-03 23:05:43,402 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-4] Reading to [java.lang.Object]
2023-08-03 23:05:43,421 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-5] HTTP PATCH http://localhost:9090/bookings/2?approved=true
2023-08-03 23:05:43,421 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-5] Accept=[application/json, application/*+json]
2023-08-03 23:05:43,425 INFO ru.practicum.ErrorHandler [http-nio-9090-exec-8] Not available: Рассмотрение
2023-08-03 23:05:43,426 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-5] Response 400 BAD_REQUEST
2023-08-03 23:05:43,445 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-7] HTTP POST http://localhost:9090/users
2023-08-03 23:05:43,446 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-7] Accept=[application/json, application/*+json]
2023-08-03 23:05:43,446 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-7] Writing [UserDto(id=0, email=practicum@yandex.ru, name=practicum)] as "application/json"
2023-08-03 23:05:43,448 INFO ru.practicum.user.UserController [http-nio-9090-exec-9] Было создано: ru.practicum.user.model.User@5dbae768
2023-08-03 23:05:43,449 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-7] Response 201 CREATED
2023-08-03 23:05:43,449 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-7] Reading to [java.lang.Object]
2023-08-03 23:05:43,471 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-8] HTTP POST http://localhost:9090/bookings
2023-08-03 23:05:43,471 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-8] Accept=[application/json, application/*+json]
2023-08-03 23:05:43,472 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-8] Writing [BookingDto(id=0, itemId=1, start=2023-08-05T23:05:43, end=2023-08-06T23:05:43, status=null, booker=null)] as "application/json"
2023-08-03 23:05:43,477 INFO ru.practicum.ErrorHandler [http-nio-9090-exec-10] Not found: Ты владелец
2023-08-03 23:05:43,478 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-8] Response 404 NOT_FOUND
2023-08-03 23:05:43,500 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-9] HTTP POST http://localhost:9090/bookings
2023-08-03 23:05:43,500 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-9] Accept=[application/json, application/*+json]
2023-08-03 23:05:43,500 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-9] Writing [BookingDto(id=0, itemId=1, start=2023-08-04T23:05:43, end=2023-08-05T00:05:43, status=null, booker=null)] as "application/json"
2023-08-03 23:05:43,505 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-9] Response 200 OK
2023-08-03 23:05:43,506 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-9] Reading to [java.lang.Object]
2023-08-03 23:05:43,532 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-10] HTTP PATCH http://localhost:9090/bookings/3?approved=false
2023-08-03 23:05:43,532 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-10] Accept=[application/json, application/*+json]
2023-08-03 23:05:43,538 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-10] Response 200 OK
2023-08-03 23:05:43,538 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-10] Reading to [java.lang.Object]
2023-08-03 23:05:43,568 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-2] HTTP POST http://localhost:9090/bookings
2023-08-03 23:05:43,568 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-2] Accept=[application/json, application/*+json]
2023-08-03 23:05:43,569 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-2] Writing [BookingDto(id=0, itemId=2, start=2023-08-04T00:05:43, end=2023-08-04T01:05:43, status=null, booker=null)] as "application/json"
2023-08-03 23:05:43,576 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-2] Response 200 OK
2023-08-03 23:05:43,577 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-2] Reading to [java.lang.Object]
2023-08-03 23:05:43,603 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-1] HTTP PATCH http://localhost:9090/bookings/4?approved=true
2023-08-03 23:05:43,604 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-1] Accept=[application/json, application/*+json]
2023-08-03 23:05:43,613 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-1] Response 200 OK
2023-08-03 23:05:43,613 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-1] Reading to [java.lang.Object]
2023-08-03 23:05:47,638 INFO ru.practicum.shareit.item.ItemController [http-nio-8080-exec-3] Request from user ID: 4 on get item. ID: 2
2023-08-03 23:05:47,638 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-3] HTTP GET http://localhost:9090/items/2
2023-08-03 23:05:47,638 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-3] Accept=[application/json, application/*+json]
2023-08-03 23:05:47,641 INFO ru.practicum.item.ItemController [http-nio-9090-exec-5] Запрос от идентификатора пользователя: 4 при получении элемента. Идентификатор: 2
2023-08-03 23:05:47,641 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-5] Setting JDBC Connection [HikariProxyConnection@748898308 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST] read-only
2023-08-03 23:05:47,643 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-5] Resetting read-only flag of JDBC Connection [HikariProxyConnection@748898308 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST]
2023-08-03 23:05:47,648 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-3] Response 200 OK
2023-08-03 23:05:47,649 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-3] Reading to [java.lang.Object]
2023-08-03 23:05:47,670 INFO ru.practicum.shareit.item.ItemController [http-nio-8080-exec-4] Request from user ID: 1 on get item. ID: 2
2023-08-03 23:05:47,671 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-4] HTTP GET http://localhost:9090/items/2
2023-08-03 23:05:47,671 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-4] Accept=[application/json, application/*+json]
2023-08-03 23:05:47,672 INFO ru.practicum.item.ItemController [http-nio-9090-exec-6] Запрос от идентификатора пользователя: 1 при получении элемента. Идентификатор: 2
2023-08-03 23:05:47,673 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-6] Setting JDBC Connection [HikariProxyConnection@692074754 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST] read-only
2023-08-03 23:05:47,674 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-6] Resetting read-only flag of JDBC Connection [HikariProxyConnection@692074754 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST]
2023-08-03 23:05:47,675 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-4] Response 200 OK
2023-08-03 23:05:47,675 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-4] Reading to [java.lang.Object]
2023-08-03 23:05:47,694 INFO ru.practicum.shareit.item.ItemController [http-nio-8080-exec-5] Request from user ID: 5 on get item. ID: 2
2023-08-03 23:05:47,694 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-5] HTTP GET http://localhost:9090/items/2
2023-08-03 23:05:47,694 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-5] Accept=[application/json, application/*+json]
2023-08-03 23:05:47,696 INFO ru.practicum.item.ItemController [http-nio-9090-exec-7] Запрос от идентификатора пользователя: 5 при получении элемента. Идентификатор: 2
2023-08-03 23:05:47,696 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-7] Setting JDBC Connection [HikariProxyConnection@709255568 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST] read-only
2023-08-03 23:05:47,697 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-7] Resetting read-only flag of JDBC Connection [HikariProxyConnection@709255568 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST]
2023-08-03 23:05:47,698 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-5] Response 200 OK
2023-08-03 23:05:47,699 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-5] Reading to [java.lang.Object]
2023-08-03 23:05:47,718 INFO ru.practicum.shareit.item.ItemController [http-nio-8080-exec-6] Request on get all for user id: 4
2023-08-03 23:05:47,718 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-6] HTTP GET http://localhost:9090/items?from=0&size=20
2023-08-03 23:05:47,718 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-6] Accept=[application/json, application/*+json]
2023-08-03 23:05:47,719 INFO ru.practicum.item.ItemController [http-nio-9090-exec-8] Запрос на получение всего для идентификатора пользователя: 4
2023-08-03 23:05:47,719 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-8] Setting JDBC Connection [HikariProxyConnection@1160025518 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST] read-only
2023-08-03 23:05:47,720 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-8] Resetting read-only flag of JDBC Connection [HikariProxyConnection@1160025518 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST]
2023-08-03 23:05:47,727 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-6] Response 200 OK
2023-08-03 23:05:47,728 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-6] Reading to [java.lang.Object]
2023-08-03 23:05:47,757 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-7] HTTP POST http://localhost:9090/bookings
2023-08-03 23:05:47,758 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-7] Accept=[application/json, application/*+json]
2023-08-03 23:05:47,758 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-7] Writing [BookingDto(id=0, itemId=3, start=2023-08-03T23:05:50, end=2023-08-04T23:05:47, status=null, booker=null)] as "application/json"
2023-08-03 23:05:47,763 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-7] Response 200 OK
2023-08-03 23:05:47,764 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-7] Reading to [java.lang.Object]
2023-08-03 23:05:47,788 INFO ru.practicum.shareit.booking.BookingController [http-nio-8080-exec-8] Get booking with state WAITING, userId=1, from=0, size=20
2023-08-03 23:05:47,788 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-8] HTTP GET http://localhost:9090/bookings?state=WAITING&from=0&size=20
2023-08-03 23:05:47,788 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-8] Accept=[application/json, application/*+json]
2023-08-03 23:05:47,790 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-10] Setting JDBC Connection [HikariProxyConnection@1094391282 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST] read-only
2023-08-03 23:05:47,792 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-10] Resetting read-only flag of JDBC Connection [HikariProxyConnection@1094391282 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST]
2023-08-03 23:05:47,795 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-8] Response 200 OK
2023-08-03 23:05:47,796 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-8] Reading to [java.lang.Object]
2023-08-03 23:05:47,817 INFO ru.practicum.shareit.booking.BookingController [http-nio-8080-exec-9] Get booking with state WAITING, userId=4, from=0, size=20
2023-08-03 23:05:47,817 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-9] HTTP GET http://localhost:9090/bookings/owner?state=WAITING&from=0&size=20
2023-08-03 23:05:47,817 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-9] Accept=[application/json, application/*+json]
2023-08-03 23:05:47,819 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-1] Setting JDBC Connection [HikariProxyConnection@120275753 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST] read-only
2023-08-03 23:05:47,820 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-1] Resetting read-only flag of JDBC Connection [HikariProxyConnection@120275753 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST]
2023-08-03 23:05:47,823 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-9] Response 200 OK
2023-08-03 23:05:47,823 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-9] Reading to [java.lang.Object]
2023-08-03 23:05:47,845 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-10] HTTP POST http://localhost:9090/bookings
2023-08-03 23:05:47,845 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-10] Accept=[application/json, application/*+json]
2023-08-03 23:05:47,846 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-10] Writing [BookingDto(id=0, itemId=2, start=2023-08-03T23:05:50, end=2023-08-03T23:05:51, status=null, booker=null)] as "application/json"
2023-08-03 23:05:47,853 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-10] Response 200 OK
2023-08-03 23:05:47,853 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-10] Reading to [java.lang.Object]
2023-08-03 23:05:47,881 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-2] HTTP PATCH http://localhost:9090/bookings/5?approved=false
2023-08-03 23:05:47,881 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-2] Accept=[application/json, application/*+json]
2023-08-03 23:05:47,886 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-2] Response 200 OK
2023-08-03 23:05:47,887 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-2] Reading to [java.lang.Object]
2023-08-03 23:05:47,920 INFO ru.practicum.shareit.booking.BookingController [http-nio-8080-exec-1] Get booking with state REJECTED, userId=1, from=0, size=20
2023-08-03 23:05:47,920 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-1] HTTP GET http://localhost:9090/bookings?state=REJECTED&from=0&size=20
2023-08-03 23:05:47,920 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-1] Accept=[application/json, application/*+json]
2023-08-03 23:05:47,922 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-4] Setting JDBC Connection [HikariProxyConnection@353171541 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST] read-only
2023-08-03 23:05:47,923 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-4] Resetting read-only flag of JDBC Connection [HikariProxyConnection@353171541 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST]
2023-08-03 23:05:47,927 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-1] Response 200 OK
2023-08-03 23:05:47,927 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-1] Reading to [java.lang.Object]
2023-08-03 23:05:47,955 INFO ru.practicum.shareit.booking.BookingController [http-nio-8080-exec-3] Get booking with state REJECTED, userId=4, from=0, size=20
2023-08-03 23:05:47,955 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-3] HTTP GET http://localhost:9090/bookings/owner?state=REJECTED&from=0&size=20
2023-08-03 23:05:47,956 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-3] Accept=[application/json, application/*+json]
2023-08-03 23:05:47,959 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-5] Setting JDBC Connection [HikariProxyConnection@1558581112 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST] read-only
2023-08-03 23:05:47,960 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-5] Resetting read-only flag of JDBC Connection [HikariProxyConnection@1558581112 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST]
2023-08-03 23:05:47,964 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-3] Response 200 OK
2023-08-03 23:05:47,964 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-3] Reading to [java.lang.Object]
2023-08-03 23:05:47,983 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-4] HTTP PATCH http://localhost:9090/bookings/6?approved=true
2023-08-03 23:05:47,983 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-4] Accept=[application/json, application/*+json]
2023-08-03 23:05:47,987 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-4] Response 200 OK
2023-08-03 23:05:47,988 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-4] Reading to [java.lang.Object]
2023-08-03 23:05:48,010 INFO ru.practicum.shareit.item.ItemController [http-nio-8080-exec-5] Request on add ItemDto(id=0, name=Кухонный стол, description=Стол для празднования, available=true, requestId=null), user id: 6
2023-08-03 23:05:48,010 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-5] HTTP POST http://localhost:9090/items
2023-08-03 23:05:48,011 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-5] Accept=[application/json, application/*+json]
2023-08-03 23:05:48,011 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-5] Writing [ItemDto(id=0, name=Кухонный стол, description=Стол для празднования, available=true, requestId=null)] as "application/json"
2023-08-03 23:05:48,013 INFO ru.practicum.item.ItemController [http-nio-9090-exec-7] Запрос на добавление ItemDto(id=0, name=Кухонный стол, description=Стол для празднования, available=true, requestId=null), идентификатор пользователя: 6
2023-08-03 23:05:48,015 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-5] Response 200 OK
2023-08-03 23:05:48,016 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-5] Reading to [java.lang.Object]
2023-08-03 23:05:48,035 INFO ru.practicum.shareit.item.ItemController [http-nio-8080-exec-6] Request from user ID: 1 on get item. ID: 1
2023-08-03 23:05:48,035 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-6] HTTP GET http://localhost:9090/items/1
2023-08-03 23:05:48,035 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-6] Accept=[application/json, application/*+json]
2023-08-03 23:05:48,037 INFO ru.practicum.item.ItemController [http-nio-9090-exec-8] Запрос от идентификатора пользователя: 1 при получении элемента. Идентификатор: 1
2023-08-03 23:05:48,038 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-8] Setting JDBC Connection [HikariProxyConnection@1185798572 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST] read-only
2023-08-03 23:05:48,039 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-8] Resetting read-only flag of JDBC Connection [HikariProxyConnection@1185798572 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST]
2023-08-03 23:05:48,046 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-6] Response 200 OK
2023-08-03 23:05:48,047 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-6] Reading to [java.lang.Object]
2023-08-03 23:05:48,073 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-7] HTTP POST http://localhost:9090/bookings
2023-08-03 23:05:48,073 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-7] Accept=[application/json, application/*+json]
2023-08-03 23:05:48,074 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-7] Writing [BookingDto(id=0, itemId=1, start=2023-08-13T23:05:48, end=2023-08-14T23:05:48, status=null, booker=null)] as "application/json"
2023-08-03 23:05:48,080 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-7] Response 200 OK
2023-08-03 23:05:48,080 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-7] Reading to [java.lang.Object]
2023-08-03 23:05:48,103 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-8] HTTP POST http://localhost:9090/bookings
2023-08-03 23:05:48,104 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-8] Accept=[application/json, application/*+json]
2023-08-03 23:05:48,104 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-8] Writing [BookingDto(id=0, itemId=4, start=2023-08-03T23:05:50, end=2023-08-04T00:05:48, status=null, booker=null)] as "application/json"
2023-08-03 23:05:48,109 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-8] Response 200 OK
2023-08-03 23:05:48,110 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-8] Reading to [java.lang.Object]
2023-08-03 23:05:48,132 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-9] HTTP PATCH http://localhost:9090/bookings/8?approved=true
2023-08-03 23:05:48,133 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-9] Accept=[application/json, application/*+json]
2023-08-03 23:05:48,140 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-9] Response 200 OK
2023-08-03 23:05:48,140 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-9] Reading to [java.lang.Object]
2023-08-03 23:05:51,165 INFO ru.practicum.shareit.item.ItemController [http-nio-8080-exec-10] Request from user ID: 1 on get item. ID: 2
2023-08-03 23:05:51,166 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-10] HTTP GET http://localhost:9090/items/2
2023-08-03 23:05:51,166 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-10] Accept=[application/json, application/*+json]
2023-08-03 23:05:51,167 INFO ru.practicum.item.ItemController [http-nio-9090-exec-2] Запрос от идентификатора пользователя: 1 при получении элемента. Идентификатор: 2
2023-08-03 23:05:51,168 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-2] Setting JDBC Connection [HikariProxyConnection@1319255828 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST] read-only
2023-08-03 23:05:51,169 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-2] Resetting read-only flag of JDBC Connection [HikariProxyConnection@1319255828 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST]
2023-08-03 23:05:51,170 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-10] Response 200 OK
2023-08-03 23:05:51,171 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-10] Reading to [java.lang.Object]
2023-08-03 23:06:01,350 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-08-03 23:06:01,350 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-08-03 23:06:31,351 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-08-03 23:06:31,351 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-08-03 23:07:01,352 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-08-03 23:07:01,352 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-08-03 23:07:31,354 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-08-03 23:07:31,354 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-08-03 23:07:37,358 INFO org.springframework.orm.jpa.AbstractEntityManagerFactoryBean [SpringApplicationShutdownHook] Closing JPA EntityManagerFactory for persistence unit 'default'
2023-08-03 23:07:37,358 INFO org.hibernate.tool.schema.internal.SchemaDropperImpl$DelayedDropActionImpl [SpringApplicationShutdownHook] HHH000477: Starting delayed evictData of schema as part of SessionFactory shut-down'
2023-08-03 23:07:37,360 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn0: url=jdbc:h2:mem:my_db user=TEST: (connection is dead)
2023-08-03 23:07:37,360 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn1: url=jdbc:h2:mem:my_db user=TEST: (connection is dead)
2023-08-03 23:07:37,360 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 connection closer] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-08-03 23:07:37,360 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn2: url=jdbc:h2:mem:my_db user=TEST: (connection is dead)
2023-08-03 23:07:37,360 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 connection closer] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-08-03 23:07:37,360 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn3: url=jdbc:h2:mem:my_db user=TEST: (connection is dead)
2023-08-03 23:07:37,360 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 connection closer] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-08-03 23:07:37,360 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn4: url=jdbc:h2:mem:my_db user=TEST: (connection is dead)
2023-08-03 23:07:37,361 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 connection closer] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-08-03 23:07:37,361 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn5: url=jdbc:h2:mem:my_db user=TEST: (connection is dead)
2023-08-03 23:07:37,361 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 connection closer] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-08-03 23:07:37,361 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn6: url=jdbc:h2:mem:my_db user=TEST: (connection is dead)
2023-08-03 23:07:37,361 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 connection closer] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-08-03 23:07:37,361 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn7: url=jdbc:h2:mem:my_db user=TEST: (connection is dead)
2023-08-03 23:07:37,361 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 connection closer] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-08-03 23:07:37,361 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn8: url=jdbc:h2:mem:my_db user=TEST: (connection is dead)
2023-08-03 23:07:37,361 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 connection closer] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-08-03 23:07:37,361 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn9: url=jdbc:h2:mem:my_db user=TEST: (connection is dead)
2023-08-03 23:07:37,361 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 connection closer] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-08-03 23:07:37,535 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn10: url=jdbc:h2:mem:my_db user=TEST
2023-08-03 23:07:37,535 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn11: url=jdbc:h2:mem:my_db user=TEST
2023-08-03 23:07:37,535 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn12: url=jdbc:h2:mem:my_db user=TEST
2023-08-03 23:07:37,536 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn13: url=jdbc:h2:mem:my_db user=TEST
2023-08-03 23:07:37,536 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn14: url=jdbc:h2:mem:my_db user=TEST
2023-08-03 23:07:37,536 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn15: url=jdbc:h2:mem:my_db user=TEST
2023-08-03 23:07:37,536 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn16: url=jdbc:h2:mem:my_db user=TEST
2023-08-03 23:07:37,537 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn17: url=jdbc:h2:mem:my_db user=TEST
2023-08-03 23:07:37,537 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn18: url=jdbc:h2:mem:my_db user=TEST
2023-08-03 23:07:37,537 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn19: url=jdbc:h2:mem:my_db user=TEST
2023-08-03 23:07:37,537 INFO com.zaxxer.hikari.HikariDataSource [SpringApplicationShutdownHook] HikariPool-1 - Shutdown initiated...
2023-08-03 23:07:37,537 DEBUG com.zaxxer.hikari.pool.HikariPool [SpringApplicationShutdownHook] HikariPool-1 - Before shutdown stats (total=10, active=0, idle=10, waiting=0)
2023-08-03 23:07:37,538 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn10: url=jdbc:h2:mem:my_db user=TEST: (connection evicted)
2023-08-03 23:07:37,538 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn11: url=jdbc:h2:mem:my_db user=TEST: (connection evicted)
2023-08-03 23:07:37,544 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn12: url=jdbc:h2:mem:my_db user=TEST: (connection evicted)
2023-08-03 23:07:37,544 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn13: url=jdbc:h2:mem:my_db user=TEST: (connection evicted)
2023-08-03 23:07:37,544 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn14: url=jdbc:h2:mem:my_db user=TEST: (connection evicted)
2023-08-03 23:07:37,544 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn15: url=jdbc:h2:mem:my_db user=TEST: (connection evicted)
2023-08-03 23:07:37,544 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn16: url=jdbc:h2:mem:my_db user=TEST: (connection evicted)
2023-08-03 23:07:37,545 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn17: url=jdbc:h2:mem:my_db user=TEST: (connection evicted)
2023-08-03 23:07:37,545 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn18: url=jdbc:h2:mem:my_db user=TEST: (connection evicted)
2023-08-03 23:07:37,545 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn19: url=jdbc:h2:mem:my_db user=TEST: (connection evicted)
2023-08-03 23:07:37,545 DEBUG com.zaxxer.hikari.pool.HikariPool [SpringApplicationShutdownHook] HikariPool-1 - After shutdown stats (total=0, active=0, idle=0, waiting=0)
2023-08-03 23:07:37,545 INFO com.zaxxer.hikari.HikariDataSource [SpringApplicationShutdownHook] HikariPool-1 - Shutdown completed.
