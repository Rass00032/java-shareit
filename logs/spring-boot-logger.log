2023-08-04 13:32:22,990 INFO org.hibernate.validator.internal.util.Version [background-preinit] HV000001: Hibernate Validator 6.2.5.Final
2023-08-04 13:32:22,997 INFO org.springframework.boot.StartupInfoLogger [main] Starting ShareItGateway using Java 18.0.2 on DESKTOP-HBQA1DH with PID 5860 (C:\Users\Aser\dev\java-shareit\shareIt-gateway\target\classes started by Aser in C:\Users\Aser\dev\java-shareit)
2023-08-04 13:32:22,998 INFO org.springframework.boot.SpringApplication [main] No active profile set, falling back to 1 default profile: "default"
2023-08-04 13:32:24,100 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [main] Tomcat initialized with port(s): 8080 (http)
2023-08-04 13:32:24,107 INFO org.apache.juli.logging.DirectJDKLog [main] Initializing ProtocolHandler ["http-nio-8080"]
2023-08-04 13:32:24,108 INFO org.apache.juli.logging.DirectJDKLog [main] Starting service [Tomcat]
2023-08-04 13:32:24,108 INFO org.apache.juli.logging.DirectJDKLog [main] Starting Servlet engine: [Apache Tomcat/9.0.71]
2023-08-04 13:32:24,179 INFO org.apache.juli.logging.DirectJDKLog [main] Initializing Spring embedded WebApplicationContext
2023-08-04 13:32:24,179 INFO org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext [main] Root WebApplicationContext: initialization completed in 1139 ms
2023-08-04 13:32:24,841 INFO org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver [main] Exposing 1 endpoint(s) beneath base path '/actuator'
2023-08-04 13:32:24,860 INFO org.apache.juli.logging.DirectJDKLog [main] Starting ProtocolHandler ["http-nio-8080"]
2023-08-04 13:32:24,878 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [main] Tomcat started on port(s): 8080 (http) with context path ''
2023-08-04 13:32:24,892 INFO org.springframework.boot.StartupInfoLogger [main] Started ShareItGateway in 2.346 seconds (JVM running for 2.788)
2023-08-04 13:32:41,171 INFO org.springframework.boot.StartupInfoLogger [main] Starting ShareItServerApp using Java 18.0.2 on DESKTOP-HBQA1DH with PID 7572 (C:\Users\Aser\dev\java-shareit\ser\target\classes started by Aser in C:\Users\Aser\dev\java-shareit)
2023-08-04 13:32:41,174 INFO org.springframework.boot.SpringApplication [main] No active profile set, falling back to 1 default profile: "default"
2023-08-04 13:32:42,090 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2023-08-04 13:32:42,190 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Finished Spring Data repository scanning in 91 ms. Found 5 JPA repository interfaces.
2023-08-04 13:32:42,793 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [main] Tomcat initialized with port(s): 9090 (http)
2023-08-04 13:32:42,800 INFO org.apache.juli.logging.DirectJDKLog [main] Initializing ProtocolHandler ["http-nio-9090"]
2023-08-04 13:32:42,801 INFO org.apache.juli.logging.DirectJDKLog [main] Starting service [Tomcat]
2023-08-04 13:32:42,801 INFO org.apache.juli.logging.DirectJDKLog [main] Starting Servlet engine: [Apache Tomcat/9.0.71]
2023-08-04 13:32:42,891 INFO org.apache.juli.logging.DirectJDKLog [main] Initializing Spring embedded WebApplicationContext
2023-08-04 13:32:42,891 INFO org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext [main] Root WebApplicationContext: initialization completed in 1675 ms
2023-08-04 13:32:42,965 DEBUG com.zaxxer.hikari.HikariConfig [main] Driver class org.h2.Driver found in Thread context class loader TomcatEmbeddedWebappClassLoader
  context: ROOT
  delegate: true
----------> Parent Classloader:
jdk.internal.loader.ClassLoaders$AppClassLoader@3cd1a2f1

2023-08-04 13:32:43,207 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [main] Fetching JDBC Connection from DataSource
2023-08-04 13:32:43,208 DEBUG com.zaxxer.hikari.HikariConfig [main] HikariPool-1 - configuration:
2023-08-04 13:32:43,211 DEBUG com.zaxxer.hikari.HikariConfig [main] allowPoolSuspension................................false
2023-08-04 13:32:43,212 DEBUG com.zaxxer.hikari.HikariConfig [main] autoCommit................................true
2023-08-04 13:32:43,212 DEBUG com.zaxxer.hikari.HikariConfig [main] catalog................................none
2023-08-04 13:32:43,213 DEBUG com.zaxxer.hikari.HikariConfig [main] connectionInitSql................................none
2023-08-04 13:32:43,213 DEBUG com.zaxxer.hikari.HikariConfig [main] connectionTestQuery................................none
2023-08-04 13:32:43,214 DEBUG com.zaxxer.hikari.HikariConfig [main] connectionTimeout................................30000
2023-08-04 13:32:43,215 DEBUG com.zaxxer.hikari.HikariConfig [main] dataSource................................none
2023-08-04 13:32:43,215 DEBUG com.zaxxer.hikari.HikariConfig [main] dataSourceClassName................................none
2023-08-04 13:32:43,215 DEBUG com.zaxxer.hikari.HikariConfig [main] dataSourceJNDI................................none
2023-08-04 13:32:43,216 DEBUG com.zaxxer.hikari.HikariConfig [main] dataSourceProperties................................{password=<masked>}
2023-08-04 13:32:43,216 DEBUG com.zaxxer.hikari.HikariConfig [main] driverClassName................................"org.h2.Driver"
2023-08-04 13:32:43,216 DEBUG com.zaxxer.hikari.HikariConfig [main] exceptionOverrideClassName................................none
2023-08-04 13:32:43,217 DEBUG com.zaxxer.hikari.HikariConfig [main] healthCheckProperties................................{}
2023-08-04 13:32:43,217 DEBUG com.zaxxer.hikari.HikariConfig [main] healthCheckRegistry................................none
2023-08-04 13:32:43,217 DEBUG com.zaxxer.hikari.HikariConfig [main] idleTimeout................................600000
2023-08-04 13:32:43,217 DEBUG com.zaxxer.hikari.HikariConfig [main] initializationFailTimeout................................1
2023-08-04 13:32:43,217 DEBUG com.zaxxer.hikari.HikariConfig [main] isolateInternalQueries................................false
2023-08-04 13:32:43,218 DEBUG com.zaxxer.hikari.HikariConfig [main] jdbcUrl................................jdbc:h2:mem:my_db
2023-08-04 13:32:43,218 DEBUG com.zaxxer.hikari.HikariConfig [main] keepaliveTime................................0
2023-08-04 13:32:43,218 DEBUG com.zaxxer.hikari.HikariConfig [main] leakDetectionThreshold................................0
2023-08-04 13:32:43,218 DEBUG com.zaxxer.hikari.HikariConfig [main] maxLifetime................................1800000
2023-08-04 13:32:43,218 DEBUG com.zaxxer.hikari.HikariConfig [main] maximumPoolSize................................10
2023-08-04 13:32:43,219 DEBUG com.zaxxer.hikari.HikariConfig [main] metricRegistry................................none
2023-08-04 13:32:43,219 DEBUG com.zaxxer.hikari.HikariConfig [main] metricsTrackerFactory................................com.zaxxer.hikari.metrics.micrometer.MicrometerMetricsTrackerFactory@f238e4f
2023-08-04 13:32:43,219 DEBUG com.zaxxer.hikari.HikariConfig [main] minimumIdle................................10
2023-08-04 13:32:43,219 DEBUG com.zaxxer.hikari.HikariConfig [main] password................................<masked>
2023-08-04 13:32:43,219 DEBUG com.zaxxer.hikari.HikariConfig [main] poolName................................"HikariPool-1"
2023-08-04 13:32:43,220 DEBUG com.zaxxer.hikari.HikariConfig [main] readOnly................................false
2023-08-04 13:32:43,220 DEBUG com.zaxxer.hikari.HikariConfig [main] registerMbeans................................false
2023-08-04 13:32:43,220 DEBUG com.zaxxer.hikari.HikariConfig [main] scheduledExecutor................................none
2023-08-04 13:32:43,220 DEBUG com.zaxxer.hikari.HikariConfig [main] schema................................none
2023-08-04 13:32:43,220 DEBUG com.zaxxer.hikari.HikariConfig [main] threadFactory................................internal
2023-08-04 13:32:43,220 DEBUG com.zaxxer.hikari.HikariConfig [main] transactionIsolation................................default
2023-08-04 13:32:43,221 DEBUG com.zaxxer.hikari.HikariConfig [main] username................................"test"
2023-08-04 13:32:43,221 DEBUG com.zaxxer.hikari.HikariConfig [main] validationTimeout................................5000
2023-08-04 13:32:43,221 INFO com.zaxxer.hikari.HikariDataSource [main] HikariPool-1 - Starting...
2023-08-04 13:32:43,412 DEBUG com.zaxxer.hikari.pool.HikariPool [main] HikariPool-1 - Added connection conn0: url=jdbc:h2:mem:my_db user=TEST
2023-08-04 13:32:43,416 INFO com.zaxxer.hikari.HikariDataSource [main] HikariPool-1 - Start completed.
2023-08-04 13:32:43,474 INFO org.hibernate.jpa.internal.util.LogHelper [main] HHH000204: Processing PersistenceUnitInfo [name: default]
2023-08-04 13:32:43,518 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=1, active=0, idle=1, waiting=0)
2023-08-04 13:32:43,519 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn1: url=jdbc:h2:mem:my_db user=TEST
2023-08-04 13:32:43,519 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn2: url=jdbc:h2:mem:my_db user=TEST
2023-08-04 13:32:43,519 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn3: url=jdbc:h2:mem:my_db user=TEST
2023-08-04 13:32:43,520 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn4: url=jdbc:h2:mem:my_db user=TEST
2023-08-04 13:32:43,521 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn5: url=jdbc:h2:mem:my_db user=TEST
2023-08-04 13:32:43,521 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn6: url=jdbc:h2:mem:my_db user=TEST
2023-08-04 13:32:43,522 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn7: url=jdbc:h2:mem:my_db user=TEST
2023-08-04 13:32:43,522 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn8: url=jdbc:h2:mem:my_db user=TEST
2023-08-04 13:32:43,523 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn9: url=jdbc:h2:mem:my_db user=TEST
2023-08-04 13:32:43,523 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 connection adder] HikariPool-1 - After adding stats (total=10, active=0, idle=10, waiting=0)
2023-08-04 13:32:43,537 INFO org.hibernate.Version [main] HHH000412: Hibernate ORM core version 5.6.15.Final
2023-08-04 13:32:43,684 INFO org.hibernate.annotations.common.reflection.java.JavaReflectionManager [main] HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2023-08-04 13:32:43,812 INFO org.hibernate.dialect.Dialect [main] HHH000400: Using dialect: org.hibernate.dialect.PostgreSQL10Dialect
2023-08-04 13:32:44,391 INFO org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator [main] HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2023-08-04 13:32:44,398 INFO org.springframework.orm.jpa.AbstractEntityManagerFactoryBean [main] Initialized JPA EntityManagerFactory for persistence unit 'default'
2023-08-04 13:32:45,109 WARN org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration [main] spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2023-08-04 13:32:45,505 INFO org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver [main] Exposing 1 endpoint(s) beneath base path '/actuator'
2023-08-04 13:32:45,529 INFO org.apache.juli.logging.DirectJDKLog [main] Starting ProtocolHandler ["http-nio-9090"]
2023-08-04 13:32:45,552 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [main] Tomcat started on port(s): 9090 (http) with context path ''
2023-08-04 13:32:45,574 INFO org.springframework.boot.StartupInfoLogger [main] Started ShareItServerApp in 4.846 seconds (JVM running for 6.739)
2023-08-04 13:33:11,548 INFO org.apache.juli.logging.DirectJDKLog [http-nio-8080-exec-1] Initializing Spring DispatcherServlet 'dispatcherServlet'
2023-08-04 13:33:11,548 INFO org.springframework.web.servlet.FrameworkServlet [http-nio-8080-exec-1] Initializing Servlet 'dispatcherServlet'
2023-08-04 13:33:11,550 INFO org.springframework.web.servlet.FrameworkServlet [http-nio-8080-exec-1] Completed initialization in 2 ms
2023-08-04 13:33:11,683 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-1] HTTP POST http://localhost:9090/users
2023-08-04 13:33:11,689 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-1] Accept=[application/json, application/*+json]
2023-08-04 13:33:11,699 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-1] Writing [UserDto(id=0, email=user@user.com, name=user)] as "application/json"
2023-08-04 13:33:11,794 INFO org.apache.juli.logging.DirectJDKLog [http-nio-9090-exec-1] Initializing Spring DispatcherServlet 'dispatcherServlet'
2023-08-04 13:33:11,795 INFO org.springframework.web.servlet.FrameworkServlet [http-nio-9090-exec-1] Initializing Servlet 'dispatcherServlet'
2023-08-04 13:33:11,797 INFO org.springframework.web.servlet.FrameworkServlet [http-nio-9090-exec-1] Completed initialization in 2 ms
2023-08-04 13:33:11,983 INFO ru.practicum.user.UserController [http-nio-9090-exec-1] Было создано: ru.practicum.user.model.User@27ae5a61
2023-08-04 13:33:12,014 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-1] Response 201 CREATED
2023-08-04 13:33:12,015 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-1] Reading to [java.lang.Object]
2023-08-04 13:33:12,073 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-3] HTTP POST http://localhost:9090/users
2023-08-04 13:33:12,074 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-3] Accept=[application/json, application/*+json]
2023-08-04 13:33:12,074 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-3] Writing [UserDto(id=0, email=user@user.com, name=user)] as "application/json"
2023-08-04 13:33:12,084 WARN org.hibernate.engine.jdbc.spi.SqlExceptionHelper [http-nio-9090-exec-2] SQL Error: 23505, SQLState: 23505
2023-08-04 13:33:12,085 ERROR org.hibernate.engine.jdbc.spi.SqlExceptionHelper [http-nio-9090-exec-2] Нарушение уникального индекса или первичного ключа: "PUBLIC.UNIQ_EMAIL_INDEX_4 ON PUBLIC.USERS(EMAIL NULLS FIRST) VALUES ( /* 1 */ 'user@user.com' )"
Unique index or primary key violation: "PUBLIC.UNIQ_EMAIL_INDEX_4 ON PUBLIC.USERS(EMAIL NULLS FIRST) VALUES ( /* 1 */ 'user@user.com' )"; SQL statement:
insert into users (email, name) values (?, ?) [23505-214]
2023-08-04 13:33:12,090 INFO ru.practicum.ErrorHandler [http-nio-9090-exec-2] Server error could not execute statement; SQL [n/a]; constraint [null]; nested exception is org.hibernate.exception.ConstraintViolationException: could not execute statement
2023-08-04 13:33:12,095 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-3] Response 500 INTERNAL_SERVER_ERROR
2023-08-04 13:33:12,133 INFO ru.practicum.shareit.ErrorHandler [http-nio-8080-exec-5] Validation failed for field: email. Error message: Email can not be null
2023-08-04 13:33:12,165 INFO ru.practicum.shareit.ErrorHandler [http-nio-8080-exec-7] Validation failed for field: email. Error message: Email is wrong
2023-08-04 13:33:12,191 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-9] HTTP PATCH http://localhost:9090/users/1
2023-08-04 13:33:12,191 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-9] Accept=[application/json, application/*+json]
2023-08-04 13:33:12,192 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-9] Writing [UserDto(id=0, email=update@user.com, name=update)] as "application/json"
2023-08-04 13:33:12,212 INFO ru.practicum.user.UserServiceImpl [http-nio-9090-exec-4] Обновление: ru.practicum.user.model.User@181665f2
2023-08-04 13:33:12,212 INFO ru.practicum.user.UserServiceImpl [http-nio-9090-exec-4] Электронная почта обновлена
2023-08-04 13:33:12,213 INFO ru.practicum.user.UserServiceImpl [http-nio-9090-exec-4] Имя ползователя обновлено
2023-08-04 13:33:12,225 INFO ru.practicum.user.UserController [http-nio-9090-exec-4] Был обновлен: ru.practicum.user.model.User@181665f2
2023-08-04 13:33:12,227 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-9] Response 200 OK
2023-08-04 13:33:12,227 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-9] Reading to [java.lang.Object]
2023-08-04 13:33:12,228 INFO ru.practicum.shareit.user.UserController [http-nio-8080-exec-9] Has been updated: <200,{id=1, email=update@user.com, name=update},[Content-Type:"application/json", Transfer-Encoding:"chunked", Date:"Fri, 04 Aug 2023 09:33:12 GMT", Keep-Alive:"timeout=60", Connection:"keep-alive"]>
2023-08-04 13:33:12,256 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-10] HTTP POST http://localhost:9090/users
2023-08-04 13:33:12,256 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-10] Accept=[application/json, application/*+json]
2023-08-04 13:33:12,256 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-10] Writing [UserDto(id=0, email=user@user.com, name=user)] as "application/json"
2023-08-04 13:33:12,261 INFO ru.practicum.user.UserController [http-nio-9090-exec-3] Было создано: ru.practicum.user.model.User@5f8b8b87
2023-08-04 13:33:12,263 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-10] Response 201 CREATED
2023-08-04 13:33:12,263 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-10] Reading to [java.lang.Object]
2023-08-04 13:33:12,284 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-2] HTTP PATCH http://localhost:9090/users/1
2023-08-04 13:33:12,284 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-2] Accept=[application/json, application/*+json]
2023-08-04 13:33:12,285 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-2] Writing [UserDto(id=0, email=null, name=updateName)] as "application/json"
2023-08-04 13:33:12,289 INFO ru.practicum.user.UserServiceImpl [http-nio-9090-exec-5] Обновление: ru.practicum.user.model.User@7d66a977
2023-08-04 13:33:12,289 INFO ru.practicum.user.UserServiceImpl [http-nio-9090-exec-5] Имя ползователя обновлено
2023-08-04 13:33:12,292 INFO ru.practicum.user.UserController [http-nio-9090-exec-5] Был обновлен: ru.practicum.user.model.User@7d66a977
2023-08-04 13:33:12,294 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-2] Response 200 OK
2023-08-04 13:33:12,295 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-2] Reading to [java.lang.Object]
2023-08-04 13:33:12,296 INFO ru.practicum.shareit.user.UserController [http-nio-8080-exec-2] Has been updated: <200,{id=1, email=update@user.com, name=updateName},[Content-Type:"application/json", Transfer-Encoding:"chunked", Date:"Fri, 04 Aug 2023 09:33:12 GMT", Keep-Alive:"timeout=60", Connection:"keep-alive"]>
2023-08-04 13:33:12,317 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-1] HTTP PATCH http://localhost:9090/users/1
2023-08-04 13:33:12,318 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-1] Accept=[application/json, application/*+json]
2023-08-04 13:33:12,318 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-1] Writing [UserDto(id=0, email=updateName@user.com, name=null)] as "application/json"
2023-08-04 13:33:12,321 INFO ru.practicum.user.UserServiceImpl [http-nio-9090-exec-6] Обновление: ru.practicum.user.model.User@dd16836
2023-08-04 13:33:12,322 INFO ru.practicum.user.UserServiceImpl [http-nio-9090-exec-6] Электронная почта обновлена
2023-08-04 13:33:12,323 INFO ru.practicum.user.UserController [http-nio-9090-exec-6] Был обновлен: ru.practicum.user.model.User@dd16836
2023-08-04 13:33:12,324 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-1] Response 200 OK
2023-08-04 13:33:12,324 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-1] Reading to [java.lang.Object]
2023-08-04 13:33:12,325 INFO ru.practicum.shareit.user.UserController [http-nio-8080-exec-1] Has been updated: <200,{id=1, email=updateName@user.com, name=updateName},[Content-Type:"application/json", Transfer-Encoding:"chunked", Date:"Fri, 04 Aug 2023 09:33:12 GMT", Keep-Alive:"timeout=60", Connection:"keep-alive"]>
2023-08-04 13:33:12,347 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-3] HTTP PATCH http://localhost:9090/users/1
2023-08-04 13:33:12,348 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-3] Accept=[application/json, application/*+json]
2023-08-04 13:33:12,348 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-3] Writing [UserDto(id=0, email=updateName@user.com, name=null)] as "application/json"
2023-08-04 13:33:12,351 INFO ru.practicum.user.UserServiceImpl [http-nio-9090-exec-7] Обновление: ru.practicum.user.model.User@126f4875
2023-08-04 13:33:12,352 INFO ru.practicum.user.UserController [http-nio-9090-exec-7] Был обновлен: ru.practicum.user.model.User@126f4875
2023-08-04 13:33:12,353 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-3] Response 200 OK
2023-08-04 13:33:12,353 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-3] Reading to [java.lang.Object]
2023-08-04 13:33:12,354 INFO ru.practicum.shareit.user.UserController [http-nio-8080-exec-3] Has been updated: <200,{id=1, email=updateName@user.com, name=updateName},[Content-Type:"application/json", Transfer-Encoding:"chunked", Date:"Fri, 04 Aug 2023 09:33:12 GMT", Keep-Alive:"timeout=60", Connection:"keep-alive"]>
2023-08-04 13:33:12,377 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-4] HTTP PATCH http://localhost:9090/users/1
2023-08-04 13:33:12,378 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-4] Accept=[application/json, application/*+json]
2023-08-04 13:33:12,378 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-4] Writing [UserDto(id=0, email=user@user.com, name=null)] as "application/json"
2023-08-04 13:33:12,381 INFO ru.practicum.user.UserServiceImpl [http-nio-9090-exec-8] Обновление: ru.practicum.user.model.User@6e05f9e2
2023-08-04 13:33:12,381 INFO ru.practicum.user.UserServiceImpl [http-nio-9090-exec-8] Электронная почта обновлена
2023-08-04 13:33:12,382 WARN org.hibernate.engine.jdbc.spi.SqlExceptionHelper [http-nio-9090-exec-8] SQL Error: 23505, SQLState: 23505
2023-08-04 13:33:12,383 ERROR org.hibernate.engine.jdbc.spi.SqlExceptionHelper [http-nio-9090-exec-8] Нарушение уникального индекса или первичного ключа: "PUBLIC.UNIQ_EMAIL_INDEX_4 ON PUBLIC.USERS(EMAIL NULLS FIRST) VALUES ( /* 3 */ 'user@user.com' )"
Unique index or primary key violation: "PUBLIC.UNIQ_EMAIL_INDEX_4 ON PUBLIC.USERS(EMAIL NULLS FIRST) VALUES ( /* 3 */ 'user@user.com' )"; SQL statement:
update users set email=?, name=? where id=? [23505-214]
2023-08-04 13:33:12,383 INFO org.hibernate.engine.jdbc.batch.internal.AbstractBatchImpl [http-nio-9090-exec-8] HHH000010: On release of batch it still contained JDBC statements
2023-08-04 13:33:12,384 INFO ru.practicum.ErrorHandler [http-nio-9090-exec-8] Server error could not execute statement; SQL [n/a]; constraint [null]; nested exception is org.hibernate.exception.ConstraintViolationException: could not execute statement
2023-08-04 13:33:12,385 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-4] Response 500 INTERNAL_SERVER_ERROR
2023-08-04 13:33:12,386 INFO ru.practicum.shareit.user.UserController [http-nio-8080-exec-4] Has been updated: <500 INTERNAL_SERVER_ERROR Internal Server Error,[B@379b7e2f,[]>
2023-08-04 13:33:12,409 INFO ru.practicum.shareit.user.UserController [http-nio-8080-exec-6] Request to get user with ID: 1
2023-08-04 13:33:12,410 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-6] HTTP GET http://localhost:9090/users/1
2023-08-04 13:33:12,410 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-6] Accept=[application/json, application/*+json]
2023-08-04 13:33:12,414 INFO ru.practicum.user.UserController [http-nio-9090-exec-9] Запрос на получение пользователя ID: 1
2023-08-04 13:33:12,415 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-9] Setting JDBC Connection [HikariProxyConnection@1906360276 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST] read-only
2023-08-04 13:33:12,416 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-9] Resetting read-only flag of JDBC Connection [HikariProxyConnection@1906360276 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST]
2023-08-04 13:33:12,417 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-6] Response 200 OK
2023-08-04 13:33:12,418 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-6] Reading to [java.lang.Object]
2023-08-04 13:33:12,439 INFO ru.practicum.shareit.user.UserController [http-nio-8080-exec-7] Request to get user with ID: 3
2023-08-04 13:33:12,439 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-7] HTTP GET http://localhost:9090/users/3
2023-08-04 13:33:12,440 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-7] Accept=[application/json, application/*+json]
2023-08-04 13:33:12,442 INFO ru.practicum.user.UserController [http-nio-9090-exec-10] Запрос на получение пользователя ID: 3
2023-08-04 13:33:12,442 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-10] Setting JDBC Connection [HikariProxyConnection@938525311 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST] read-only
2023-08-04 13:33:12,443 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-10] Resetting read-only flag of JDBC Connection [HikariProxyConnection@938525311 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST]
2023-08-04 13:33:12,444 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-7] Response 200 OK
2023-08-04 13:33:12,445 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-7] Reading to [java.lang.Object]
2023-08-04 13:33:12,466 INFO ru.practicum.shareit.user.UserController [http-nio-8080-exec-8] Request to get user with ID: 100
2023-08-04 13:33:12,467 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-8] HTTP GET http://localhost:9090/users/100
2023-08-04 13:33:12,467 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-8] Accept=[application/json, application/*+json]
2023-08-04 13:33:12,468 INFO ru.practicum.user.UserController [http-nio-9090-exec-1] Запрос на получение пользователя ID: 100
2023-08-04 13:33:12,468 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-1] Setting JDBC Connection [HikariProxyConnection@817538976 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST] read-only
2023-08-04 13:33:12,469 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-1] Resetting read-only flag of JDBC Connection [HikariProxyConnection@817538976 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST]
2023-08-04 13:33:12,469 INFO ru.practicum.user.UserServiceImpl [http-nio-9090-exec-1] Throw new NotFoundException
2023-08-04 13:33:12,471 INFO ru.practicum.ErrorHandler [http-nio-9090-exec-1] Not found: User with ID: 100 not found
2023-08-04 13:33:12,472 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-8] Response 404 NOT_FOUND
2023-08-04 13:33:12,493 INFO ru.practicum.shareit.user.UserController [http-nio-8080-exec-9] Request to delete with id: 3
2023-08-04 13:33:12,494 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-9] HTTP DELETE http://localhost:9090/users/3
2023-08-04 13:33:12,494 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-9] Accept=[application/json, application/*+json]
2023-08-04 13:33:12,497 INFO ru.practicum.user.UserController [http-nio-9090-exec-2] Запрос на удаление с ID: 3
2023-08-04 13:33:12,506 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-9] Response 204 NO_CONTENT
2023-08-04 13:33:12,525 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-10] HTTP POST http://localhost:9090/users
2023-08-04 13:33:12,526 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-10] Accept=[application/json, application/*+json]
2023-08-04 13:33:12,526 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-10] Writing [UserDto(id=0, email=user@user.com, name=user)] as "application/json"
2023-08-04 13:33:12,530 INFO ru.practicum.user.UserController [http-nio-9090-exec-4] Было создано: ru.practicum.user.model.User@6553a6fa
2023-08-04 13:33:12,531 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-10] Response 201 CREATED
2023-08-04 13:33:12,532 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-10] Reading to [java.lang.Object]
2023-08-04 13:33:12,557 INFO ru.practicum.shareit.user.UserController [http-nio-8080-exec-2] Request on get all
2023-08-04 13:33:12,558 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-2] HTTP GET http://localhost:9090/users
2023-08-04 13:33:12,559 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-2] Accept=[application/json, application/*+json]
2023-08-04 13:33:12,560 INFO ru.practicum.user.UserController [http-nio-9090-exec-3] Запрос на получение всего
2023-08-04 13:33:12,561 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-3] Setting JDBC Connection [HikariProxyConnection@321192455 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST] read-only
2023-08-04 13:33:12,571 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-3] Resetting read-only flag of JDBC Connection [HikariProxyConnection@321192455 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST]
2023-08-04 13:33:12,575 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-2] Response 200 OK
2023-08-04 13:33:12,576 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-2] Reading to [java.lang.Object]
2023-08-04 13:33:12,625 INFO ru.practicum.shareit.item.ItemController [http-nio-8080-exec-1] Request on add ItemDto(id=0, name=Дрель, description=Простая дрель, available=true, requestId=null), user id: 1
2023-08-04 13:33:12,630 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-1] HTTP POST http://localhost:9090/items
2023-08-04 13:33:12,631 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-1] Accept=[application/json, application/*+json]
2023-08-04 13:33:12,632 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-1] Writing [ItemDto(id=0, name=Дрель, description=Простая дрель, available=true, requestId=null)] as "application/json"
2023-08-04 13:33:12,643 INFO ru.practicum.item.ItemController [http-nio-9090-exec-5] Запрос на добавление ItemDto(id=0, name=Дрель, description=Простая дрель, available=true, requestId=null), идентификатор пользователя: 1
2023-08-04 13:33:12,674 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-1] Response 200 OK
2023-08-04 13:33:12,674 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-1] Reading to [java.lang.Object]
2023-08-04 13:33:12,698 INFO ru.practicum.shareit.ErrorHandler [http-nio-8080-exec-3] Missing request header: Required request header 'X-Sharer-User-Id' for method parameter type Long is not present
2023-08-04 13:33:12,724 INFO ru.practicum.shareit.item.ItemController [http-nio-8080-exec-5] Request on add ItemDto(id=0, name=Дрель, description=Простая дрель, available=true, requestId=null), user id: 10
2023-08-04 13:33:12,725 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-5] HTTP POST http://localhost:9090/items
2023-08-04 13:33:12,725 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-5] Accept=[application/json, application/*+json]
2023-08-04 13:33:12,726 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-5] Writing [ItemDto(id=0, name=Дрель, description=Простая дрель, available=true, requestId=null)] as "application/json"
2023-08-04 13:33:12,728 INFO ru.practicum.item.ItemController [http-nio-9090-exec-6] Запрос на добавление ItemDto(id=0, name=Дрель, description=Простая дрель, available=true, requestId=null), идентификатор пользователя: 10
2023-08-04 13:33:12,730 INFO ru.practicum.ErrorHandler [http-nio-9090-exec-6] Not found: User with ID: 10 not found
2023-08-04 13:33:12,731 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-5] Response 404 NOT_FOUND
2023-08-04 13:33:12,754 INFO ru.practicum.shareit.ErrorHandler [http-nio-8080-exec-6] Validation failed for field: available. Error message: Available should be specified
2023-08-04 13:33:12,778 INFO ru.practicum.shareit.ErrorHandler [http-nio-8080-exec-8] Validation failed for field: name. Error message: Name can't blank
2023-08-04 13:33:12,798 INFO ru.practicum.shareit.ErrorHandler [http-nio-8080-exec-10] Validation failed for field: description. Error message: Description can't blank
2023-08-04 13:33:12,822 INFO ru.practicum.shareit.item.ItemController [http-nio-8080-exec-1] Request on edit item id: 1, ItemDto(id=1, name=Дрель+, description=Аккумуляторная дрель, available=false, requestId=null), user id: 1
2023-08-04 13:33:12,823 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-1] HTTP PATCH http://localhost:9090/items/1
2023-08-04 13:33:12,824 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-1] Accept=[application/json, application/*+json]
2023-08-04 13:33:12,824 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-1] Writing [ItemDto(id=1, name=Дрель+, description=Аккумуляторная дрель, available=false, requestId=null)] as "application/json"
2023-08-04 13:33:12,828 INFO ru.practicum.item.ItemController [http-nio-9090-exec-7] Запрос на редактирование идентификатора элемента: 1, ItemDto(id=1, name=Дрель+, description=Аккумуляторная дрель, available=false, requestId=null), идентификатор пользователя: 1
2023-08-04 13:33:12,836 INFO ru.practicum.item.ItemServiceImpl [http-nio-9090-exec-7] Обновление: ru.practicum.item.model.Item@37423b13
2023-08-04 13:33:12,837 INFO ru.practicum.item.ItemServiceImpl [http-nio-9090-exec-7] Название обновлено
2023-08-04 13:33:12,837 INFO ru.practicum.item.ItemServiceImpl [http-nio-9090-exec-7] Описание обновлено
2023-08-04 13:33:12,837 INFO ru.practicum.item.ItemServiceImpl [http-nio-9090-exec-7] Доступность обновлена
2023-08-04 13:33:12,839 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-1] Response 200 OK
2023-08-04 13:33:12,840 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-1] Reading to [java.lang.Object]
2023-08-04 13:33:12,863 INFO ru.practicum.shareit.ErrorHandler [http-nio-8080-exec-3] Missing request header: Required request header 'X-Sharer-User-Id' for method parameter type Long is not present
2023-08-04 13:33:12,883 INFO ru.practicum.shareit.item.ItemController [http-nio-8080-exec-5] Request on edit item id: 1, ItemDto(id=0, name=Дрель, description=Простая дрель, available=false, requestId=null), user id: 3
2023-08-04 13:33:12,884 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-5] HTTP PATCH http://localhost:9090/items/1
2023-08-04 13:33:12,885 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-5] Accept=[application/json, application/*+json]
2023-08-04 13:33:12,885 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-5] Writing [ItemDto(id=0, name=Дрель, description=Простая дрель, available=false, requestId=null)] as "application/json"
2023-08-04 13:33:12,888 INFO ru.practicum.item.ItemController [http-nio-9090-exec-8] Запрос на редактирование идентификатора элемента: 1, ItemDto(id=0, name=Дрель, description=Простая дрель, available=false, requestId=null), идентификатор пользователя: 3
2023-08-04 13:33:12,889 INFO ru.practicum.item.ItemServiceImpl [http-nio-9090-exec-8] Обновление: ru.practicum.item.model.Item@4f663a80
2023-08-04 13:33:12,890 INFO ru.practicum.ErrorHandler [http-nio-9090-exec-8] Not found: Пользователь не является владельцем элемента
2023-08-04 13:33:12,892 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-5] Response 404 NOT_FOUND
2023-08-04 13:33:12,912 INFO ru.practicum.shareit.item.ItemController [http-nio-8080-exec-6] Request on edit item id: 1, ItemDto(id=0, name=null, description=null, available=true, requestId=null), user id: 1
2023-08-04 13:33:12,913 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-6] HTTP PATCH http://localhost:9090/items/1
2023-08-04 13:33:12,913 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-6] Accept=[application/json, application/*+json]
2023-08-04 13:33:12,913 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-6] Writing [ItemDto(id=0, name=null, description=null, available=true, requestId=null)] as "application/json"
2023-08-04 13:33:12,915 INFO ru.practicum.item.ItemController [http-nio-9090-exec-9] Запрос на редактирование идентификатора элемента: 1, ItemDto(id=0, name=null, description=null, available=true, requestId=null), идентификатор пользователя: 1
2023-08-04 13:33:12,916 INFO ru.practicum.item.ItemServiceImpl [http-nio-9090-exec-9] Обновление: ru.practicum.item.model.Item@326e560f
2023-08-04 13:33:12,917 INFO ru.practicum.item.ItemServiceImpl [http-nio-9090-exec-9] Доступность обновлена
2023-08-04 13:33:12,918 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-6] Response 200 OK
2023-08-04 13:33:12,918 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-6] Reading to [java.lang.Object]
2023-08-04 13:33:12,943 INFO ru.practicum.shareit.item.ItemController [http-nio-8080-exec-7] Request on edit item id: 1, ItemDto(id=0, name=null, description=Аккумуляторная дрель + аккумулятор, available=null, requestId=null), user id: 1
2023-08-04 13:33:12,944 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-7] HTTP PATCH http://localhost:9090/items/1
2023-08-04 13:33:12,944 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-7] Accept=[application/json, application/*+json]
2023-08-04 13:33:12,945 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-7] Writing [ItemDto(id=0, name=null, description=Аккумуляторная дрель + аккумулятор, available=null, requestId=null)] as "application/json"
2023-08-04 13:33:12,948 INFO ru.practicum.item.ItemController [http-nio-9090-exec-10] Запрос на редактирование идентификатора элемента: 1, ItemDto(id=0, name=null, description=Аккумуляторная дрель + аккумулятор, available=null, requestId=null), идентификатор пользователя: 1
2023-08-04 13:33:12,950 INFO ru.practicum.item.ItemServiceImpl [http-nio-9090-exec-10] Обновление: ru.practicum.item.model.Item@3100b51f
2023-08-04 13:33:12,950 INFO ru.practicum.item.ItemServiceImpl [http-nio-9090-exec-10] Описание обновлено
2023-08-04 13:33:12,953 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-7] Response 200 OK
2023-08-04 13:33:12,953 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-7] Reading to [java.lang.Object]
2023-08-04 13:33:12,977 INFO ru.practicum.shareit.item.ItemController [http-nio-8080-exec-8] Request on edit item id: 1, ItemDto(id=0, name=Аккумуляторная дрель, description=null, available=null, requestId=null), user id: 1
2023-08-04 13:33:12,978 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-8] HTTP PATCH http://localhost:9090/items/1
2023-08-04 13:33:12,979 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-8] Accept=[application/json, application/*+json]
2023-08-04 13:33:12,979 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-8] Writing [ItemDto(id=0, name=Аккумуляторная дрель, description=null, available=null, requestId=null)] as "application/json"
2023-08-04 13:33:12,982 INFO ru.practicum.item.ItemController [http-nio-9090-exec-1] Запрос на редактирование идентификатора элемента: 1, ItemDto(id=0, name=Аккумуляторная дрель, description=null, available=null, requestId=null), идентификатор пользователя: 1
2023-08-04 13:33:12,983 INFO ru.practicum.item.ItemServiceImpl [http-nio-9090-exec-1] Обновление: ru.practicum.item.model.Item@70f4d074
2023-08-04 13:33:12,984 INFO ru.practicum.item.ItemServiceImpl [http-nio-9090-exec-1] Название обновлено
2023-08-04 13:33:12,986 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-8] Response 200 OK
2023-08-04 13:33:12,986 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-8] Reading to [java.lang.Object]
2023-08-04 13:33:13,010 INFO ru.practicum.shareit.item.ItemController [http-nio-8080-exec-9] Request from user ID: 1 on get item. ID: 1
2023-08-04 13:33:13,010 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-9] HTTP GET http://localhost:9090/items/1
2023-08-04 13:33:13,011 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-9] Accept=[application/json, application/*+json]
2023-08-04 13:33:13,013 INFO ru.practicum.item.ItemController [http-nio-9090-exec-2] Запрос от идентификатора пользователя: 1 при получении элемента. Идентификатор: 1
2023-08-04 13:33:13,014 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-2] Setting JDBC Connection [HikariProxyConnection@9180100 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST] read-only
2023-08-04 13:33:13,015 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-2] Resetting read-only flag of JDBC Connection [HikariProxyConnection@9180100 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST]
2023-08-04 13:33:13,039 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-9] Response 200 OK
2023-08-04 13:33:13,039 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-9] Reading to [java.lang.Object]
2023-08-04 13:33:13,060 INFO ru.practicum.shareit.item.ItemController [http-nio-8080-exec-10] Request from user ID: 4 on get item. ID: 1
2023-08-04 13:33:13,061 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-10] HTTP GET http://localhost:9090/items/1
2023-08-04 13:33:13,061 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-10] Accept=[application/json, application/*+json]
2023-08-04 13:33:13,063 INFO ru.practicum.item.ItemController [http-nio-9090-exec-4] Запрос от идентификатора пользователя: 4 при получении элемента. Идентификатор: 1
2023-08-04 13:33:13,063 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-4] Setting JDBC Connection [HikariProxyConnection@1606483862 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST] read-only
2023-08-04 13:33:13,064 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-4] Resetting read-only flag of JDBC Connection [HikariProxyConnection@1606483862 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST]
2023-08-04 13:33:13,066 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-10] Response 200 OK
2023-08-04 13:33:13,066 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-10] Reading to [java.lang.Object]
2023-08-04 13:33:13,086 INFO ru.practicum.shareit.item.ItemController [http-nio-8080-exec-2] Request from user ID: 4 on get item. ID: 100
2023-08-04 13:33:13,087 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-2] HTTP GET http://localhost:9090/items/100
2023-08-04 13:33:13,088 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-2] Accept=[application/json, application/*+json]
2023-08-04 13:33:13,091 INFO ru.practicum.item.ItemController [http-nio-9090-exec-3] Запрос от идентификатора пользователя: 4 при получении элемента. Идентификатор: 100
2023-08-04 13:33:13,092 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-3] Setting JDBC Connection [HikariProxyConnection@1404414348 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST] read-only
2023-08-04 13:33:13,093 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-3] Resetting read-only flag of JDBC Connection [HikariProxyConnection@1404414348 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST]
2023-08-04 13:33:13,094 INFO ru.practicum.ErrorHandler [http-nio-9090-exec-3] Not found: Вещь не найдена
2023-08-04 13:33:13,096 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-2] Response 404 NOT_FOUND
2023-08-04 13:33:13,116 INFO ru.practicum.shareit.item.ItemController [http-nio-8080-exec-1] Request on add ItemDto(id=0, name=Отвертка, description=Аккумуляторная отвертка, available=true, requestId=null), user id: 4
2023-08-04 13:33:13,116 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-1] HTTP POST http://localhost:9090/items
2023-08-04 13:33:13,116 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-1] Accept=[application/json, application/*+json]
2023-08-04 13:33:13,117 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-1] Writing [ItemDto(id=0, name=Отвертка, description=Аккумуляторная отвертка, available=true, requestId=null)] as "application/json"
2023-08-04 13:33:13,118 INFO ru.practicum.item.ItemController [http-nio-9090-exec-5] Запрос на добавление ItemDto(id=0, name=Отвертка, description=Аккумуляторная отвертка, available=true, requestId=null), идентификатор пользователя: 4
2023-08-04 13:33:13,120 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-1] Response 200 OK
2023-08-04 13:33:13,121 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-1] Reading to [java.lang.Object]
2023-08-04 13:33:13,144 INFO ru.practicum.shareit.item.ItemController [http-nio-8080-exec-3] Request on add ItemDto(id=0, name=Клей Момент, description=Тюбик суперклея марки Момент, available=true, requestId=null), user id: 4
2023-08-04 13:33:13,144 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-3] HTTP POST http://localhost:9090/items
2023-08-04 13:33:13,144 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-3] Accept=[application/json, application/*+json]
2023-08-04 13:33:13,145 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-3] Writing [ItemDto(id=0, name=Клей Момент, description=Тюбик суперклея марки Момент, available=true, requestId=null)] as "application/json"
2023-08-04 13:33:13,147 INFO ru.practicum.item.ItemController [http-nio-9090-exec-6] Запрос на добавление ItemDto(id=0, name=Клей Момент, description=Тюбик суперклея марки Момент, available=true, requestId=null), идентификатор пользователя: 4
2023-08-04 13:33:13,150 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-3] Response 200 OK
2023-08-04 13:33:13,150 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-3] Reading to [java.lang.Object]
2023-08-04 13:33:13,175 INFO ru.practicum.shareit.item.ItemController [http-nio-8080-exec-4] Request on get all for user id: 1
2023-08-04 13:33:13,177 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-4] HTTP GET http://localhost:9090/items?from=0&size=20
2023-08-04 13:33:13,177 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-4] Accept=[application/json, application/*+json]
2023-08-04 13:33:13,186 INFO ru.practicum.item.ItemController [http-nio-9090-exec-7] Запрос на получение всего для идентификатора пользователя: 1
2023-08-04 13:33:13,187 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-7] Setting JDBC Connection [HikariProxyConnection@1965882674 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST] read-only
2023-08-04 13:33:13,188 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-7] Resetting read-only flag of JDBC Connection [HikariProxyConnection@1965882674 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST]
2023-08-04 13:33:13,211 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-4] Response 200 OK
2023-08-04 13:33:13,212 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-4] Reading to [java.lang.Object]
2023-08-04 13:33:13,235 INFO ru.practicum.shareit.item.ItemController [http-nio-8080-exec-5] Request on get all for user id: 4
2023-08-04 13:33:13,236 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-5] HTTP GET http://localhost:9090/items?from=0&size=20
2023-08-04 13:33:13,236 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-5] Accept=[application/json, application/*+json]
2023-08-04 13:33:13,238 INFO ru.practicum.item.ItemController [http-nio-9090-exec-8] Запрос на получение всего для идентификатора пользователя: 4
2023-08-04 13:33:13,238 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-8] Setting JDBC Connection [HikariProxyConnection@1348082457 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST] read-only
2023-08-04 13:33:13,239 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-8] Resetting read-only flag of JDBC Connection [HikariProxyConnection@1348082457 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST]
2023-08-04 13:33:13,249 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-5] Response 200 OK
2023-08-04 13:33:13,250 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-5] Reading to [java.lang.Object]
2023-08-04 13:33:13,277 INFO ru.practicum.shareit.item.ItemController [http-nio-8080-exec-6] Request on search text: аккУМУляторная
2023-08-04 13:33:13,278 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-6] HTTP GET http://localhost:9090/items/search?text=%D0%B0%D0%BA%D0%BA%D1%83%D0%BC%D1%83%D0%BB%D1%8F%D1%82%D0%BE%D1%80%D0%BD%D0%B0%D1%8F&from=0&size=20
2023-08-04 13:33:13,278 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-6] Accept=[application/json, application/*+json]
2023-08-04 13:33:13,287 INFO ru.practicum.item.ItemController [http-nio-9090-exec-9] Запрос по поисковому тексту: аккумуляторная
2023-08-04 13:33:13,297 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-6] Response 200 OK
2023-08-04 13:33:13,297 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-6] Reading to [java.lang.Object]
2023-08-04 13:33:13,321 INFO ru.practicum.shareit.item.ItemController [http-nio-8080-exec-7] Request on edit item id: 2, ItemDto(id=0, name=null, description=null, available=false, requestId=null), user id: 4
2023-08-04 13:33:13,322 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-7] HTTP PATCH http://localhost:9090/items/2
2023-08-04 13:33:13,322 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-7] Accept=[application/json, application/*+json]
2023-08-04 13:33:13,322 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-7] Writing [ItemDto(id=0, name=null, description=null, available=false, requestId=null)] as "application/json"
2023-08-04 13:33:13,325 INFO ru.practicum.item.ItemController [http-nio-9090-exec-10] Запрос на редактирование идентификатора элемента: 2, ItemDto(id=0, name=null, description=null, available=false, requestId=null), идентификатор пользователя: 4
2023-08-04 13:33:13,326 INFO ru.practicum.item.ItemServiceImpl [http-nio-9090-exec-10] Обновление: ru.practicum.item.model.Item@1c6b2319
2023-08-04 13:33:13,326 INFO ru.practicum.item.ItemServiceImpl [http-nio-9090-exec-10] Доступность обновлена
2023-08-04 13:33:13,329 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-7] Response 200 OK
2023-08-04 13:33:13,330 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-7] Reading to [java.lang.Object]
2023-08-04 13:33:13,353 INFO ru.practicum.shareit.item.ItemController [http-nio-8080-exec-8] Request on search text: дРелЬ
2023-08-04 13:33:13,354 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-8] HTTP GET http://localhost:9090/items/search?text=%D0%B4%D1%80%D0%B5%D0%BB%D1%8C&from=0&size=20
2023-08-04 13:33:13,354 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-8] Accept=[application/json, application/*+json]
2023-08-04 13:33:13,356 INFO ru.practicum.item.ItemController [http-nio-9090-exec-1] Запрос по поисковому тексту: дрель
2023-08-04 13:33:13,359 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-8] Response 200 OK
2023-08-04 13:33:13,360 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-8] Reading to [java.lang.Object]
2023-08-04 13:33:13,382 INFO ru.practicum.shareit.item.ItemController [http-nio-8080-exec-9] Request on search text: аккУМУляторная
2023-08-04 13:33:13,383 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-9] HTTP GET http://localhost:9090/items/search?text=%D0%B0%D0%BA%D0%BA%D1%83%D0%BC%D1%83%D0%BB%D1%8F%D1%82%D0%BE%D1%80%D0%BD%D0%B0%D1%8F&from=0&size=20
2023-08-04 13:33:13,383 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-9] Accept=[application/json, application/*+json]
2023-08-04 13:33:13,385 INFO ru.practicum.item.ItemController [http-nio-9090-exec-2] Запрос по поисковому тексту: аккумуляторная
2023-08-04 13:33:13,388 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-9] Response 200 OK
2023-08-04 13:33:13,388 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-9] Reading to [java.lang.Object]
2023-08-04 13:33:13,413 INFO ru.practicum.shareit.item.ItemController [http-nio-8080-exec-10] Request on edit item id: 2, ItemDto(id=0, name=null, description=null, available=true, requestId=null), user id: 4
2023-08-04 13:33:13,413 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-10] HTTP PATCH http://localhost:9090/items/2
2023-08-04 13:33:13,414 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-10] Accept=[application/json, application/*+json]
2023-08-04 13:33:13,414 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-10] Writing [ItemDto(id=0, name=null, description=null, available=true, requestId=null)] as "application/json"
2023-08-04 13:33:13,417 INFO ru.practicum.item.ItemController [http-nio-9090-exec-4] Запрос на редактирование идентификатора элемента: 2, ItemDto(id=0, name=null, description=null, available=true, requestId=null), идентификатор пользователя: 4
2023-08-04 13:33:13,419 INFO ru.practicum.item.ItemServiceImpl [http-nio-9090-exec-4] Обновление: ru.practicum.item.model.Item@1f448d0d
2023-08-04 13:33:13,419 INFO ru.practicum.item.ItemServiceImpl [http-nio-9090-exec-4] Доступность обновлена
2023-08-04 13:33:13,421 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-10] Response 200 OK
2023-08-04 13:33:13,421 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-10] Reading to [java.lang.Object]
2023-08-04 13:33:13,440 INFO ru.practicum.shareit.item.ItemController [http-nio-8080-exec-2] Request on search text: оТверТ
2023-08-04 13:33:13,441 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-2] HTTP GET http://localhost:9090/items/search?text=%D0%BE%D1%82%D0%B2%D0%B5%D1%80%D1%82&from=0&size=20
2023-08-04 13:33:13,441 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-2] Accept=[application/json, application/*+json]
2023-08-04 13:33:13,443 INFO ru.practicum.item.ItemController [http-nio-9090-exec-3] Запрос по поисковому тексту: отверт
2023-08-04 13:33:13,447 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-2] Response 200 OK
2023-08-04 13:33:13,447 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-2] Reading to [java.lang.Object]
2023-08-04 13:33:13,468 INFO ru.practicum.shareit.item.ItemController [http-nio-8080-exec-1] Request on search text: 
2023-08-04 13:33:13,487 INFO ru.practicum.shareit.item.ItemController [http-nio-8080-exec-3] Request on edit item id: 2, ItemDto(id=0, name=null, description=null, available=false, requestId=null), user id: 4
2023-08-04 13:33:13,487 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-3] HTTP PATCH http://localhost:9090/items/2
2023-08-04 13:33:13,488 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-3] Accept=[application/json, application/*+json]
2023-08-04 13:33:13,488 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-3] Writing [ItemDto(id=0, name=null, description=null, available=false, requestId=null)] as "application/json"
2023-08-04 13:33:13,490 INFO ru.practicum.item.ItemController [http-nio-9090-exec-5] Запрос на редактирование идентификатора элемента: 2, ItemDto(id=0, name=null, description=null, available=false, requestId=null), идентификатор пользователя: 4
2023-08-04 13:33:13,492 INFO ru.practicum.item.ItemServiceImpl [http-nio-9090-exec-5] Обновление: ru.practicum.item.model.Item@21882cfa
2023-08-04 13:33:13,492 INFO ru.practicum.item.ItemServiceImpl [http-nio-9090-exec-5] Доступность обновлена
2023-08-04 13:33:13,495 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-3] Response 200 OK
2023-08-04 13:33:13,496 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-3] Reading to [java.lang.Object]
2023-08-04 13:33:13,519 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-08-04 13:33:13,519 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-08-04 13:33:13,551 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-4] HTTP POST http://localhost:9090/bookings
2023-08-04 13:33:13,552 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-4] Accept=[application/json, application/*+json]
2023-08-04 13:33:13,557 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-4] Writing [BookingDto(id=0, itemId=2, start=2023-08-05T13:33:13, end=2023-08-06T13:33:13, status=null, booker=null)] as "application/json"
2023-08-04 13:33:13,583 INFO ru.practicum.ErrorHandler [http-nio-9090-exec-6] Not available: Элемент с идентификатором: 2 недоступен
2023-08-04 13:33:13,585 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-4] Response 400 BAD_REQUEST
2023-08-04 13:33:13,609 INFO ru.practicum.shareit.item.ItemController [http-nio-8080-exec-6] Request on edit item id: 2, ItemDto(id=0, name=null, description=null, available=true, requestId=null), user id: 4
2023-08-04 13:33:13,609 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-6] HTTP PATCH http://localhost:9090/items/2
2023-08-04 13:33:13,610 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-6] Accept=[application/json, application/*+json]
2023-08-04 13:33:13,610 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-6] Writing [ItemDto(id=0, name=null, description=null, available=true, requestId=null)] as "application/json"
2023-08-04 13:33:13,612 INFO ru.practicum.item.ItemController [http-nio-9090-exec-7] Запрос на редактирование идентификатора элемента: 2, ItemDto(id=0, name=null, description=null, available=true, requestId=null), идентификатор пользователя: 4
2023-08-04 13:33:13,614 INFO ru.practicum.item.ItemServiceImpl [http-nio-9090-exec-7] Обновление: ru.practicum.item.model.Item@5783b0dc
2023-08-04 13:33:13,614 INFO ru.practicum.item.ItemServiceImpl [http-nio-9090-exec-7] Доступность обновлена
2023-08-04 13:33:13,616 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-6] Response 200 OK
2023-08-04 13:33:13,617 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-6] Reading to [java.lang.Object]
2023-08-04 13:33:13,649 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-7] HTTP POST http://localhost:9090/bookings
2023-08-04 13:33:13,650 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-7] Accept=[application/json, application/*+json]
2023-08-04 13:33:13,650 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-7] Writing [BookingDto(id=0, itemId=2, start=2023-08-05T13:33:13, end=2023-08-06T13:33:13, status=null, booker=null)] as "application/json"
2023-08-04 13:33:13,661 INFO ru.practicum.ErrorHandler [http-nio-9090-exec-8] Not found: User with ID: 100 not found
2023-08-04 13:33:13,662 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-7] Response 404 NOT_FOUND
2023-08-04 13:33:13,685 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-8] HTTP POST http://localhost:9090/bookings
2023-08-04 13:33:13,685 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-8] Accept=[application/json, application/*+json]
2023-08-04 13:33:13,685 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-8] Writing [BookingDto(id=0, itemId=200, start=2023-08-05T13:33:13, end=2023-08-06T13:33:13, status=null, booker=null)] as "application/json"
2023-08-04 13:33:13,689 INFO ru.practicum.ErrorHandler [http-nio-9090-exec-9] Not found: Элемент с идентификатором:200 не найден
2023-08-04 13:33:13,691 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-8] Response 404 NOT_FOUND
2023-08-04 13:33:13,731 INFO ru.practicum.shareit.ErrorHandler [http-nio-8080-exec-9] Validation failed for field: end. Error message: должно содержать дату, которая еще не наступила
2023-08-04 13:33:13,732 INFO ru.practicum.shareit.ErrorHandler [http-nio-8080-exec-9] Validation failed for field: validDateOrder. Error message: End date must be after start date and dates cannot be equal
2023-08-04 13:33:13,754 INFO ru.practicum.shareit.ErrorHandler [http-nio-8080-exec-2] Validation failed for field: validDateOrder. Error message: End date must be after start date and dates cannot be equal
2023-08-04 13:33:13,783 INFO ru.practicum.shareit.ErrorHandler [http-nio-8080-exec-3] Validation failed for field: validDateOrder. Error message: End date must be after start date and dates cannot be equal
2023-08-04 13:33:13,806 INFO ru.practicum.shareit.ErrorHandler [http-nio-8080-exec-5] Validation failed for field: start. Error message: не должно равняться null
2023-08-04 13:33:13,806 INFO ru.practicum.shareit.ErrorHandler [http-nio-8080-exec-5] Validation failed for field: validDateOrder. Error message: End date must be after start date and dates cannot be equal
2023-08-04 13:33:13,832 INFO ru.practicum.shareit.ErrorHandler [http-nio-8080-exec-7] Validation failed for field: validDateOrder. Error message: End date must be after start date and dates cannot be equal
2023-08-04 13:33:13,832 INFO ru.practicum.shareit.ErrorHandler [http-nio-8080-exec-7] Validation failed for field: end. Error message: не должно равняться null
2023-08-04 13:33:13,854 INFO ru.practicum.shareit.ErrorHandler [http-nio-8080-exec-9] Validation failed for field: start. Error message: должно содержать сегодняшнее число или дату, которая еще не наступила
2023-08-04 13:33:13,880 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-2] HTTP POST http://localhost:9090/bookings
2023-08-04 13:33:13,880 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-2] Accept=[application/json, application/*+json]
2023-08-04 13:33:13,880 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-2] Writing [BookingDto(id=0, itemId=2, start=2023-08-04T13:33:16, end=2023-08-04T13:33:17, status=null, booker=null)] as "application/json"
2023-08-04 13:33:13,895 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-2] Response 200 OK
2023-08-04 13:33:13,895 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-2] Reading to [java.lang.Object]
2023-08-04 13:33:13,917 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-1] HTTP PATCH http://localhost:9090/bookings/1?approved=true
2023-08-04 13:33:13,918 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-1] Accept=[application/json, application/*+json]
2023-08-04 13:33:13,928 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-1] Response 200 OK
2023-08-04 13:33:13,929 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-1] Reading to [java.lang.Object]
2023-08-04 13:33:13,955 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-3] HTTP POST http://localhost:9090/bookings
2023-08-04 13:33:13,955 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-3] Accept=[application/json, application/*+json]
2023-08-04 13:33:13,955 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-3] Writing [BookingDto(id=0, itemId=2, start=2023-08-05T13:33:13, end=2023-08-06T13:33:13, status=null, booker=null)] as "application/json"
2023-08-04 13:33:13,963 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-3] Response 200 OK
2023-08-04 13:33:13,963 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-3] Reading to [java.lang.Object]
2023-08-04 13:33:13,993 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-4] HTTP GET http://localhost:9090/bookings/2
2023-08-04 13:33:13,994 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-4] Accept=[application/json, application/*+json]
2023-08-04 13:33:13,996 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-4] Setting JDBC Connection [HikariProxyConnection@1551901319 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST] read-only
2023-08-04 13:33:13,998 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-4] Resetting read-only flag of JDBC Connection [HikariProxyConnection@1551901319 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST]
2023-08-04 13:33:13,998 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-4] Setting JDBC Connection [HikariProxyConnection@1551901319 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST] read-only
2023-08-04 13:33:13,999 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-4] Resetting read-only flag of JDBC Connection [HikariProxyConnection@1551901319 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST]
2023-08-04 13:33:14,000 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-4] Response 200 OK
2023-08-04 13:33:14,001 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-4] Reading to [java.lang.Object]
2023-08-04 13:33:14,021 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-5] HTTP GET http://localhost:9090/bookings/2
2023-08-04 13:33:14,021 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-5] Accept=[application/json, application/*+json]
2023-08-04 13:33:14,022 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-3] Setting JDBC Connection [HikariProxyConnection@2119616083 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST] read-only
2023-08-04 13:33:14,024 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-3] Resetting read-only flag of JDBC Connection [HikariProxyConnection@2119616083 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST]
2023-08-04 13:33:14,024 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-3] Setting JDBC Connection [HikariProxyConnection@2119616083 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST] read-only
2023-08-04 13:33:14,025 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-3] Resetting read-only flag of JDBC Connection [HikariProxyConnection@2119616083 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST]
2023-08-04 13:33:14,028 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-5] Response 200 OK
2023-08-04 13:33:14,029 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-5] Reading to [java.lang.Object]
2023-08-04 13:33:14,052 INFO ru.practicum.shareit.booking.BookingController [http-nio-8080-exec-6] Get booking with state ALL, userId=100, from=0, size=20
2023-08-04 13:33:14,052 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-6] HTTP GET http://localhost:9090/bookings?state=ALL&from=0&size=20
2023-08-04 13:33:14,053 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-6] Accept=[application/json, application/*+json]
2023-08-04 13:33:14,056 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-5] Setting JDBC Connection [HikariProxyConnection@1780291806 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST] read-only
2023-08-04 13:33:14,057 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-5] Resetting read-only flag of JDBC Connection [HikariProxyConnection@1780291806 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST]
2023-08-04 13:33:14,057 INFO ru.practicum.ErrorHandler [http-nio-9090-exec-5] Not found: User with ID: 100 not found
2023-08-04 13:33:14,059 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-6] Response 404 NOT_FOUND
2023-08-04 13:33:14,076 INFO ru.practicum.shareit.booking.BookingController [http-nio-8080-exec-7] Get booking with state ALL, userId=100, from=0, size=20
2023-08-04 13:33:14,076 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-7] HTTP GET http://localhost:9090/bookings/owner?state=ALL&from=0&size=20
2023-08-04 13:33:14,076 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-7] Accept=[application/json, application/*+json]
2023-08-04 13:33:14,078 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-6] Setting JDBC Connection [HikariProxyConnection@1461687876 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST] read-only
2023-08-04 13:33:14,079 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-6] Resetting read-only flag of JDBC Connection [HikariProxyConnection@1461687876 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST]
2023-08-04 13:33:14,080 INFO ru.practicum.ErrorHandler [http-nio-9090-exec-6] Not found: User with ID: 100 not found
2023-08-04 13:33:14,081 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-7] Response 404 NOT_FOUND
2023-08-04 13:33:14,103 INFO ru.practicum.shareit.booking.BookingController [http-nio-8080-exec-8] Get booking with state ALL, userId=1, from=0, size=20
2023-08-04 13:33:14,103 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-8] HTTP GET http://localhost:9090/bookings?state=ALL&from=0&size=20
2023-08-04 13:33:14,103 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-8] Accept=[application/json, application/*+json]
2023-08-04 13:33:14,105 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-7] Setting JDBC Connection [HikariProxyConnection@8344949 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST] read-only
2023-08-04 13:33:14,106 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-7] Resetting read-only flag of JDBC Connection [HikariProxyConnection@8344949 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST]
2023-08-04 13:33:14,111 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-8] Response 200 OK
2023-08-04 13:33:14,112 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-8] Reading to [java.lang.Object]
2023-08-04 13:33:14,135 INFO ru.practicum.shareit.booking.BookingController [http-nio-8080-exec-9] Get booking with state ALL, userId=1, from=0, size=20
2023-08-04 13:33:14,136 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-9] HTTP GET http://localhost:9090/bookings?state=ALL&from=0&size=20
2023-08-04 13:33:14,136 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-9] Accept=[application/json, application/*+json]
2023-08-04 13:33:14,138 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-8] Setting JDBC Connection [HikariProxyConnection@1948326856 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST] read-only
2023-08-04 13:33:14,139 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-8] Resetting read-only flag of JDBC Connection [HikariProxyConnection@1948326856 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST]
2023-08-04 13:33:14,142 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-9] Response 200 OK
2023-08-04 13:33:14,143 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-9] Reading to [java.lang.Object]
2023-08-04 13:33:14,169 INFO ru.practicum.shareit.booking.BookingController [http-nio-8080-exec-10] Get booking with state FUTURE, userId=1, from=0, size=20
2023-08-04 13:33:14,169 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-10] HTTP GET http://localhost:9090/bookings?state=FUTURE&from=0&size=20
2023-08-04 13:33:14,170 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-10] Accept=[application/json, application/*+json]
2023-08-04 13:33:14,173 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-9] Setting JDBC Connection [HikariProxyConnection@1377742901 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST] read-only
2023-08-04 13:33:14,174 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-9] Resetting read-only flag of JDBC Connection [HikariProxyConnection@1377742901 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST]
2023-08-04 13:33:14,179 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-10] Response 200 OK
2023-08-04 13:33:14,179 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-10] Reading to [java.lang.Object]
2023-08-04 13:33:14,207 INFO ru.practicum.shareit.ErrorHandler [http-nio-8080-exec-2] Bad booking state: Unknown state: UNSUPPORTED_STATUS
2023-08-04 13:33:14,229 INFO ru.practicum.shareit.booking.BookingController [http-nio-8080-exec-3] Get booking with state ALL, userId=4, from=0, size=20
2023-08-04 13:33:14,229 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-3] HTTP GET http://localhost:9090/bookings/owner?state=ALL&from=0&size=20
2023-08-04 13:33:14,229 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-3] Accept=[application/json, application/*+json]
2023-08-04 13:33:14,231 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-10] Setting JDBC Connection [HikariProxyConnection@372599602 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST] read-only
2023-08-04 13:33:14,232 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-10] Resetting read-only flag of JDBC Connection [HikariProxyConnection@372599602 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST]
2023-08-04 13:33:14,236 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-3] Response 200 OK
2023-08-04 13:33:14,236 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-3] Reading to [java.lang.Object]
2023-08-04 13:33:14,259 INFO ru.practicum.shareit.booking.BookingController [http-nio-8080-exec-4] Get booking with state ALL, userId=4, from=0, size=20
2023-08-04 13:33:14,260 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-4] HTTP GET http://localhost:9090/bookings/owner?state=ALL&from=0&size=20
2023-08-04 13:33:14,260 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-4] Accept=[application/json, application/*+json]
2023-08-04 13:33:14,262 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-1] Setting JDBC Connection [HikariProxyConnection@279317285 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST] read-only
2023-08-04 13:33:14,263 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-1] Resetting read-only flag of JDBC Connection [HikariProxyConnection@279317285 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST]
2023-08-04 13:33:14,265 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-4] Response 200 OK
2023-08-04 13:33:14,265 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-4] Reading to [java.lang.Object]
2023-08-04 13:33:14,292 INFO ru.practicum.shareit.booking.BookingController [http-nio-8080-exec-5] Get booking with state FUTURE, userId=4, from=0, size=20
2023-08-04 13:33:14,292 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-5] HTTP GET http://localhost:9090/bookings/owner?state=FUTURE&from=0&size=20
2023-08-04 13:33:14,293 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-5] Accept=[application/json, application/*+json]
2023-08-04 13:33:14,303 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-2] Setting JDBC Connection [HikariProxyConnection@1461744859 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST] read-only
2023-08-04 13:33:14,304 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-2] Resetting read-only flag of JDBC Connection [HikariProxyConnection@1461744859 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST]
2023-08-04 13:33:14,309 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-5] Response 200 OK
2023-08-04 13:33:14,310 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-5] Reading to [java.lang.Object]
2023-08-04 13:33:14,335 INFO ru.practicum.shareit.ErrorHandler [http-nio-8080-exec-6] Bad booking state: Unknown state: UNSUPPORTED_STATUS
2023-08-04 13:33:14,354 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-8] HTTP GET http://localhost:9090/bookings/1000
2023-08-04 13:33:14,354 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-8] Accept=[application/json, application/*+json]
2023-08-04 13:33:14,360 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-4] Setting JDBC Connection [HikariProxyConnection@1100842580 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST] read-only
2023-08-04 13:33:14,361 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-4] Resetting read-only flag of JDBC Connection [HikariProxyConnection@1100842580 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST]
2023-08-04 13:33:14,362 INFO ru.practicum.ErrorHandler [http-nio-9090-exec-4] Not found: Бронирование: 1 000 не найдено
2023-08-04 13:33:14,363 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-8] Response 404 NOT_FOUND
2023-08-04 13:33:14,382 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-9] HTTP POST http://localhost:9090/users
2023-08-04 13:33:14,383 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-9] Accept=[application/json, application/*+json]
2023-08-04 13:33:14,383 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-9] Writing [UserDto(id=0, email=other@other.com, name=other)] as "application/json"
2023-08-04 13:33:14,386 INFO ru.practicum.user.UserController [http-nio-9090-exec-3] Было создано: ru.practicum.user.model.User@ec2f402
2023-08-04 13:33:14,388 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-9] Response 201 CREATED
2023-08-04 13:33:14,388 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-9] Reading to [java.lang.Object]
2023-08-04 13:33:14,407 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-10] HTTP GET http://localhost:9090/bookings/1
2023-08-04 13:33:14,407 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-10] Accept=[application/json, application/*+json]
2023-08-04 13:33:14,409 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-5] Setting JDBC Connection [HikariProxyConnection@934053425 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST] read-only
2023-08-04 13:33:14,410 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-5] Resetting read-only flag of JDBC Connection [HikariProxyConnection@934053425 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST]
2023-08-04 13:33:14,411 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-5] Setting JDBC Connection [HikariProxyConnection@934053425 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST] read-only
2023-08-04 13:33:14,412 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-5] Resetting read-only flag of JDBC Connection [HikariProxyConnection@934053425 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST]
2023-08-04 13:33:14,414 INFO ru.practicum.ErrorHandler [http-nio-9090-exec-5] Not found: User with id: 5 do not have available
2023-08-04 13:33:14,415 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-10] Response 404 NOT_FOUND
2023-08-04 13:33:14,431 INFO ru.practicum.shareit.ErrorHandler [http-nio-8080-exec-2] Server error Required request parameter 'approved' for method parameter type Boolean is not present
2023-08-04 13:33:14,449 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-3] HTTP PATCH http://localhost:9090/bookings/2?approved=true
2023-08-04 13:33:14,449 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-3] Accept=[application/json, application/*+json]
2023-08-04 13:33:14,453 INFO ru.practicum.ErrorHandler [http-nio-9090-exec-6] Not found: User with id: 1 do not have available
2023-08-04 13:33:14,453 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-3] Response 404 NOT_FOUND
2023-08-04 13:33:14,470 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-4] HTTP PATCH http://localhost:9090/bookings/2?approved=true
2023-08-04 13:33:14,470 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-4] Accept=[application/json, application/*+json]
2023-08-04 13:33:14,477 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-4] Response 200 OK
2023-08-04 13:33:14,477 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-4] Reading to [java.lang.Object]
2023-08-04 13:33:14,499 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-5] HTTP PATCH http://localhost:9090/bookings/2?approved=true
2023-08-04 13:33:14,500 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-5] Accept=[application/json, application/*+json]
2023-08-04 13:33:14,503 INFO ru.practicum.ErrorHandler [http-nio-9090-exec-8] Not available: Рассмотрение
2023-08-04 13:33:14,504 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-5] Response 400 BAD_REQUEST
2023-08-04 13:33:14,521 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-7] HTTP POST http://localhost:9090/users
2023-08-04 13:33:14,522 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-7] Accept=[application/json, application/*+json]
2023-08-04 13:33:14,522 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-7] Writing [UserDto(id=0, email=practicum@yandex.ru, name=practicum)] as "application/json"
2023-08-04 13:33:14,525 INFO ru.practicum.user.UserController [http-nio-9090-exec-9] Было создано: ru.practicum.user.model.User@27a5d123
2023-08-04 13:33:14,526 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-7] Response 201 CREATED
2023-08-04 13:33:14,526 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-7] Reading to [java.lang.Object]
2023-08-04 13:33:14,548 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-8] HTTP POST http://localhost:9090/bookings
2023-08-04 13:33:14,549 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-8] Accept=[application/json, application/*+json]
2023-08-04 13:33:14,549 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-8] Writing [BookingDto(id=0, itemId=1, start=2023-08-06T13:33:14, end=2023-08-07T13:33:14, status=null, booker=null)] as "application/json"
2023-08-04 13:33:14,554 INFO ru.practicum.ErrorHandler [http-nio-9090-exec-10] Not found: Ты владелец
2023-08-04 13:33:14,555 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-8] Response 404 NOT_FOUND
2023-08-04 13:33:14,577 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-9] HTTP POST http://localhost:9090/bookings
2023-08-04 13:33:14,577 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-9] Accept=[application/json, application/*+json]
2023-08-04 13:33:14,577 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-9] Writing [BookingDto(id=0, itemId=1, start=2023-08-05T13:33:14, end=2023-08-05T14:33:14, status=null, booker=null)] as "application/json"
2023-08-04 13:33:14,588 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-9] Response 200 OK
2023-08-04 13:33:14,588 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-9] Reading to [java.lang.Object]
2023-08-04 13:33:14,613 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-10] HTTP PATCH http://localhost:9090/bookings/3?approved=false
2023-08-04 13:33:14,613 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-10] Accept=[application/json, application/*+json]
2023-08-04 13:33:14,620 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-10] Response 200 OK
2023-08-04 13:33:14,621 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-10] Reading to [java.lang.Object]
2023-08-04 13:33:14,647 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-2] HTTP POST http://localhost:9090/bookings
2023-08-04 13:33:14,647 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-2] Accept=[application/json, application/*+json]
2023-08-04 13:33:14,648 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-2] Writing [BookingDto(id=0, itemId=2, start=2023-08-04T14:33:14, end=2023-08-04T15:33:14, status=null, booker=null)] as "application/json"
2023-08-04 13:33:14,654 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-2] Response 200 OK
2023-08-04 13:33:14,655 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-2] Reading to [java.lang.Object]
2023-08-04 13:33:14,678 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-1] HTTP PATCH http://localhost:9090/bookings/4?approved=true
2023-08-04 13:33:14,678 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-1] Accept=[application/json, application/*+json]
2023-08-04 13:33:14,684 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-1] Response 200 OK
2023-08-04 13:33:14,685 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-1] Reading to [java.lang.Object]
2023-08-04 13:33:18,710 INFO ru.practicum.shareit.item.ItemController [http-nio-8080-exec-3] Request from user ID: 4 on get item. ID: 2
2023-08-04 13:33:18,711 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-3] HTTP GET http://localhost:9090/items/2
2023-08-04 13:33:18,711 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-3] Accept=[application/json, application/*+json]
2023-08-04 13:33:18,714 INFO ru.practicum.item.ItemController [http-nio-9090-exec-5] Запрос от идентификатора пользователя: 4 при получении элемента. Идентификатор: 2
2023-08-04 13:33:18,715 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-5] Setting JDBC Connection [HikariProxyConnection@327168887 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST] read-only
2023-08-04 13:33:18,716 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-5] Resetting read-only flag of JDBC Connection [HikariProxyConnection@327168887 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST]
2023-08-04 13:33:18,725 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-3] Response 200 OK
2023-08-04 13:33:18,725 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-3] Reading to [java.lang.Object]
2023-08-04 13:33:18,748 INFO ru.practicum.shareit.item.ItemController [http-nio-8080-exec-4] Request from user ID: 1 on get item. ID: 2
2023-08-04 13:33:18,748 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-4] HTTP GET http://localhost:9090/items/2
2023-08-04 13:33:18,749 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-4] Accept=[application/json, application/*+json]
2023-08-04 13:33:18,750 INFO ru.practicum.item.ItemController [http-nio-9090-exec-6] Запрос от идентификатора пользователя: 1 при получении элемента. Идентификатор: 2
2023-08-04 13:33:18,750 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-6] Setting JDBC Connection [HikariProxyConnection@173698649 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST] read-only
2023-08-04 13:33:18,750 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-6] Resetting read-only flag of JDBC Connection [HikariProxyConnection@173698649 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST]
2023-08-04 13:33:18,752 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-4] Response 200 OK
2023-08-04 13:33:18,752 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-4] Reading to [java.lang.Object]
2023-08-04 13:33:18,775 INFO ru.practicum.shareit.item.ItemController [http-nio-8080-exec-5] Request from user ID: 5 on get item. ID: 2
2023-08-04 13:33:18,775 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-5] HTTP GET http://localhost:9090/items/2
2023-08-04 13:33:18,775 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-5] Accept=[application/json, application/*+json]
2023-08-04 13:33:18,777 INFO ru.practicum.item.ItemController [http-nio-9090-exec-7] Запрос от идентификатора пользователя: 5 при получении элемента. Идентификатор: 2
2023-08-04 13:33:18,777 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-7] Setting JDBC Connection [HikariProxyConnection@1103282664 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST] read-only
2023-08-04 13:33:18,778 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-7] Resetting read-only flag of JDBC Connection [HikariProxyConnection@1103282664 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST]
2023-08-04 13:33:18,780 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-5] Response 200 OK
2023-08-04 13:33:18,781 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-5] Reading to [java.lang.Object]
2023-08-04 13:33:18,803 INFO ru.practicum.shareit.item.ItemController [http-nio-8080-exec-6] Request on get all for user id: 4
2023-08-04 13:33:18,803 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-6] HTTP GET http://localhost:9090/items?from=0&size=20
2023-08-04 13:33:18,804 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-6] Accept=[application/json, application/*+json]
2023-08-04 13:33:18,805 INFO ru.practicum.item.ItemController [http-nio-9090-exec-8] Запрос на получение всего для идентификатора пользователя: 4
2023-08-04 13:33:18,805 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-8] Setting JDBC Connection [HikariProxyConnection@836484262 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST] read-only
2023-08-04 13:33:18,806 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-8] Resetting read-only flag of JDBC Connection [HikariProxyConnection@836484262 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST]
2023-08-04 13:33:18,812 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-6] Response 200 OK
2023-08-04 13:33:18,813 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-6] Reading to [java.lang.Object]
2023-08-04 13:33:18,839 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-7] HTTP POST http://localhost:9090/bookings
2023-08-04 13:33:18,840 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-7] Accept=[application/json, application/*+json]
2023-08-04 13:33:18,840 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-7] Writing [BookingDto(id=0, itemId=3, start=2023-08-04T13:33:21, end=2023-08-05T13:33:18, status=null, booker=null)] as "application/json"
2023-08-04 13:33:18,847 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-7] Response 200 OK
2023-08-04 13:33:18,847 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-7] Reading to [java.lang.Object]
2023-08-04 13:33:18,870 INFO ru.practicum.shareit.booking.BookingController [http-nio-8080-exec-8] Get booking with state WAITING, userId=1, from=0, size=20
2023-08-04 13:33:18,870 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-8] HTTP GET http://localhost:9090/bookings?state=WAITING&from=0&size=20
2023-08-04 13:33:18,870 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-8] Accept=[application/json, application/*+json]
2023-08-04 13:33:18,872 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-10] Setting JDBC Connection [HikariProxyConnection@448976771 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST] read-only
2023-08-04 13:33:18,874 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-10] Resetting read-only flag of JDBC Connection [HikariProxyConnection@448976771 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST]
2023-08-04 13:33:18,877 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-8] Response 200 OK
2023-08-04 13:33:18,878 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-8] Reading to [java.lang.Object]
2023-08-04 13:33:18,901 INFO ru.practicum.shareit.booking.BookingController [http-nio-8080-exec-9] Get booking with state WAITING, userId=4, from=0, size=20
2023-08-04 13:33:18,901 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-9] HTTP GET http://localhost:9090/bookings/owner?state=WAITING&from=0&size=20
2023-08-04 13:33:18,902 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-9] Accept=[application/json, application/*+json]
2023-08-04 13:33:18,903 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-1] Setting JDBC Connection [HikariProxyConnection@553585544 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST] read-only
2023-08-04 13:33:18,904 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-1] Resetting read-only flag of JDBC Connection [HikariProxyConnection@553585544 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST]
2023-08-04 13:33:18,908 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-9] Response 200 OK
2023-08-04 13:33:18,908 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-9] Reading to [java.lang.Object]
2023-08-04 13:33:18,935 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-10] HTTP POST http://localhost:9090/bookings
2023-08-04 13:33:18,935 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-10] Accept=[application/json, application/*+json]
2023-08-04 13:33:18,935 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-10] Writing [BookingDto(id=0, itemId=2, start=2023-08-04T13:33:21, end=2023-08-04T13:33:22, status=null, booker=null)] as "application/json"
2023-08-04 13:33:18,942 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-10] Response 200 OK
2023-08-04 13:33:18,943 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-10] Reading to [java.lang.Object]
2023-08-04 13:33:18,967 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-2] HTTP PATCH http://localhost:9090/bookings/5?approved=false
2023-08-04 13:33:18,967 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-2] Accept=[application/json, application/*+json]
2023-08-04 13:33:18,973 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-2] Response 200 OK
2023-08-04 13:33:18,973 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-2] Reading to [java.lang.Object]
2023-08-04 13:33:19,001 INFO ru.practicum.shareit.booking.BookingController [http-nio-8080-exec-1] Get booking with state REJECTED, userId=1, from=0, size=20
2023-08-04 13:33:19,001 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-1] HTTP GET http://localhost:9090/bookings?state=REJECTED&from=0&size=20
2023-08-04 13:33:19,002 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-1] Accept=[application/json, application/*+json]
2023-08-04 13:33:19,004 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-3] Setting JDBC Connection [HikariProxyConnection@371167820 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST] read-only
2023-08-04 13:33:19,005 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-3] Resetting read-only flag of JDBC Connection [HikariProxyConnection@371167820 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST]
2023-08-04 13:33:19,009 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-1] Response 200 OK
2023-08-04 13:33:19,010 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-1] Reading to [java.lang.Object]
2023-08-04 13:33:19,038 INFO ru.practicum.shareit.booking.BookingController [http-nio-8080-exec-3] Get booking with state REJECTED, userId=4, from=0, size=20
2023-08-04 13:33:19,039 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-3] HTTP GET http://localhost:9090/bookings/owner?state=REJECTED&from=0&size=20
2023-08-04 13:33:19,039 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-3] Accept=[application/json, application/*+json]
2023-08-04 13:33:19,040 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-5] Setting JDBC Connection [HikariProxyConnection@1398065176 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST] read-only
2023-08-04 13:33:19,042 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-5] Resetting read-only flag of JDBC Connection [HikariProxyConnection@1398065176 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST]
2023-08-04 13:33:19,046 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-3] Response 200 OK
2023-08-04 13:33:19,046 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-3] Reading to [java.lang.Object]
2023-08-04 13:33:19,069 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-4] HTTP PATCH http://localhost:9090/bookings/6?approved=true
2023-08-04 13:33:19,070 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-4] Accept=[application/json, application/*+json]
2023-08-04 13:33:19,077 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-4] Response 200 OK
2023-08-04 13:33:19,078 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-4] Reading to [java.lang.Object]
2023-08-04 13:33:19,100 INFO ru.practicum.shareit.item.ItemController [http-nio-8080-exec-5] Request on add ItemDto(id=0, name=Кухонный стол, description=Стол для празднования, available=true, requestId=null), user id: 6
2023-08-04 13:33:19,101 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-5] HTTP POST http://localhost:9090/items
2023-08-04 13:33:19,101 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-5] Accept=[application/json, application/*+json]
2023-08-04 13:33:19,101 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-5] Writing [ItemDto(id=0, name=Кухонный стол, description=Стол для празднования, available=true, requestId=null)] as "application/json"
2023-08-04 13:33:19,103 INFO ru.practicum.item.ItemController [http-nio-9090-exec-7] Запрос на добавление ItemDto(id=0, name=Кухонный стол, description=Стол для празднования, available=true, requestId=null), идентификатор пользователя: 6
2023-08-04 13:33:19,108 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-5] Response 200 OK
2023-08-04 13:33:19,108 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-5] Reading to [java.lang.Object]
2023-08-04 13:33:19,131 INFO ru.practicum.shareit.item.ItemController [http-nio-8080-exec-6] Request from user ID: 1 on get item. ID: 1
2023-08-04 13:33:19,131 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-6] HTTP GET http://localhost:9090/items/1
2023-08-04 13:33:19,132 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-6] Accept=[application/json, application/*+json]
2023-08-04 13:33:19,134 INFO ru.practicum.item.ItemController [http-nio-9090-exec-8] Запрос от идентификатора пользователя: 1 при получении элемента. Идентификатор: 1
2023-08-04 13:33:19,134 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-8] Setting JDBC Connection [HikariProxyConnection@830389601 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST] read-only
2023-08-04 13:33:19,135 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-8] Resetting read-only flag of JDBC Connection [HikariProxyConnection@830389601 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST]
2023-08-04 13:33:19,142 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-6] Response 200 OK
2023-08-04 13:33:19,142 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-6] Reading to [java.lang.Object]
2023-08-04 13:33:19,169 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-7] HTTP POST http://localhost:9090/bookings
2023-08-04 13:33:19,169 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-7] Accept=[application/json, application/*+json]
2023-08-04 13:33:19,169 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-7] Writing [BookingDto(id=0, itemId=1, start=2023-08-14T13:33:19, end=2023-08-15T13:33:19, status=null, booker=null)] as "application/json"
2023-08-04 13:33:19,175 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-7] Response 200 OK
2023-08-04 13:33:19,176 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-7] Reading to [java.lang.Object]
2023-08-04 13:33:19,198 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-8] HTTP POST http://localhost:9090/bookings
2023-08-04 13:33:19,198 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-8] Accept=[application/json, application/*+json]
2023-08-04 13:33:19,198 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-8] Writing [BookingDto(id=0, itemId=4, start=2023-08-04T13:33:21, end=2023-08-04T14:33:19, status=null, booker=null)] as "application/json"
2023-08-04 13:33:19,205 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-8] Response 200 OK
2023-08-04 13:33:19,206 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-8] Reading to [java.lang.Object]
2023-08-04 13:33:19,226 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-9] HTTP PATCH http://localhost:9090/bookings/8?approved=true
2023-08-04 13:33:19,227 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-9] Accept=[application/json, application/*+json]
2023-08-04 13:33:19,232 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-9] Response 200 OK
2023-08-04 13:33:19,233 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-9] Reading to [java.lang.Object]
2023-08-04 13:33:22,256 INFO ru.practicum.shareit.item.ItemController [http-nio-8080-exec-10] Request from user ID: 1 on get item. ID: 2
2023-08-04 13:33:22,257 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-10] HTTP GET http://localhost:9090/items/2
2023-08-04 13:33:22,257 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-10] Accept=[application/json, application/*+json]
2023-08-04 13:33:22,260 INFO ru.practicum.item.ItemController [http-nio-9090-exec-2] Запрос от идентификатора пользователя: 1 при получении элемента. Идентификатор: 2
2023-08-04 13:33:22,260 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-2] Setting JDBC Connection [HikariProxyConnection@2134526366 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST] read-only
2023-08-04 13:33:22,261 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-2] Resetting read-only flag of JDBC Connection [HikariProxyConnection@2134526366 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST]
2023-08-04 13:33:22,263 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-10] Response 200 OK
2023-08-04 13:33:22,263 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-10] Reading to [java.lang.Object]
2023-08-04 13:33:25,284 INFO ru.practicum.shareit.item.ItemController [http-nio-8080-exec-2] Request from user ID: 4 on get item. ID: 2
2023-08-04 13:33:25,284 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-2] HTTP GET http://localhost:9090/items/2
2023-08-04 13:33:25,285 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-2] Accept=[application/json, application/*+json]
2023-08-04 13:33:25,287 INFO ru.practicum.item.ItemController [http-nio-9090-exec-4] Запрос от идентификатора пользователя: 4 при получении элемента. Идентификатор: 2
2023-08-04 13:33:25,288 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-4] Setting JDBC Connection [HikariProxyConnection@1043343061 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST] read-only
2023-08-04 13:33:25,289 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-4] Resetting read-only flag of JDBC Connection [HikariProxyConnection@1043343061 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST]
2023-08-04 13:33:25,291 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-2] Response 200 OK
2023-08-04 13:33:25,292 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-2] Reading to [java.lang.Object]
2023-08-04 13:33:25,319 INFO ru.practicum.shareit.item.ItemController [http-nio-8080-exec-1] Request on add comment Comment for item 1, item id: 1, user id: 4
2023-08-04 13:33:25,320 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-1] HTTP POST http://localhost:9090/items/1/comment
2023-08-04 13:33:25,320 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-1] Accept=[application/json, application/*+json]
2023-08-04 13:33:25,324 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-1] Writing [CommentDto(id=0, text=Comment for item 1, authorName=null, created=null)] as "application/json"
2023-08-04 13:33:25,331 INFO ru.practicum.item.ItemController [http-nio-9090-exec-3] Запрос на добавление комментария Comment for item 1, идентификатор элемента: 1, идентификатор пользователя: 4
2023-08-04 13:33:25,337 INFO ru.practicum.ErrorHandler [http-nio-9090-exec-3] Not available: Нет доступного бронирования для идентификатора пользователя: 4 и вещи: 1
2023-08-04 13:33:25,338 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-1] Response 400 BAD_REQUEST
2023-08-04 13:33:25,361 INFO ru.practicum.shareit.ErrorHandler [http-nio-8080-exec-4] Validation failed for field: text. Error message: не должно быть пустым
2023-08-04 13:33:25,386 INFO ru.practicum.shareit.item.ItemController [http-nio-8080-exec-6] Request on add comment Add comment from user1, item id: 2, user id: 1
2023-08-04 13:33:25,386 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-6] HTTP POST http://localhost:9090/items/2/comment
2023-08-04 13:33:25,386 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-6] Accept=[application/json, application/*+json]
2023-08-04 13:33:25,387 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-6] Writing [CommentDto(id=0, text=Add comment from user1, authorName=null, created=null)] as "application/json"
2023-08-04 13:33:25,390 INFO ru.practicum.item.ItemController [http-nio-9090-exec-5] Запрос на добавление комментария Add comment from user1, идентификатор элемента: 2, идентификатор пользователя: 1
2023-08-04 13:33:25,400 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-6] Response 200 OK
2023-08-04 13:33:25,401 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-6] Reading to [java.lang.Object]
2023-08-04 13:33:25,421 INFO ru.practicum.shareit.item.ItemController [http-nio-8080-exec-7] Request from user ID: 1 on get item. ID: 2
2023-08-04 13:33:25,422 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-7] HTTP GET http://localhost:9090/items/2
2023-08-04 13:33:25,422 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-7] Accept=[application/json, application/*+json]
2023-08-04 13:33:25,424 INFO ru.practicum.item.ItemController [http-nio-9090-exec-6] Запрос от идентификатора пользователя: 1 при получении элемента. Идентификатор: 2
2023-08-04 13:33:25,425 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-6] Setting JDBC Connection [HikariProxyConnection@65199818 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST] read-only
2023-08-04 13:33:25,426 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-6] Resetting read-only flag of JDBC Connection [HikariProxyConnection@65199818 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST]
2023-08-04 13:33:25,428 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-7] Response 200 OK
2023-08-04 13:33:25,428 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-7] Reading to [java.lang.Object]
2023-08-04 13:33:25,449 INFO ru.practicum.shareit.item.ItemController [http-nio-8080-exec-8] Request from user ID: 4 on get item. ID: 2
2023-08-04 13:33:25,449 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-8] HTTP GET http://localhost:9090/items/2
2023-08-04 13:33:25,449 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-8] Accept=[application/json, application/*+json]
2023-08-04 13:33:25,451 INFO ru.practicum.item.ItemController [http-nio-9090-exec-7] Запрос от идентификатора пользователя: 4 при получении элемента. Идентификатор: 2
2023-08-04 13:33:25,451 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-7] Setting JDBC Connection [HikariProxyConnection@117106105 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST] read-only
2023-08-04 13:33:25,452 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-7] Resetting read-only flag of JDBC Connection [HikariProxyConnection@117106105 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST]
2023-08-04 13:33:25,456 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-8] Response 200 OK
2023-08-04 13:33:25,456 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-8] Reading to [java.lang.Object]
2023-08-04 13:33:25,479 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-9] HTTP PATCH http://localhost:9090/bookings/7?approved=true
2023-08-04 13:33:25,479 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-9] Accept=[application/json, application/*+json]
2023-08-04 13:33:25,485 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-9] Response 200 OK
2023-08-04 13:33:25,486 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-9] Reading to [java.lang.Object]
2023-08-04 13:33:25,513 INFO ru.practicum.shareit.item.ItemController [http-nio-8080-exec-10] Request on add comment Add comment from user5, item id: 1, user id: 5
2023-08-04 13:33:25,513 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-10] HTTP POST http://localhost:9090/items/1/comment
2023-08-04 13:33:25,513 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-10] Accept=[application/json, application/*+json]
2023-08-04 13:33:25,514 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-10] Writing [CommentDto(id=0, text=Add comment from user5, authorName=null, created=null)] as "application/json"
2023-08-04 13:33:25,516 INFO ru.practicum.item.ItemController [http-nio-9090-exec-9] Запрос на добавление комментария Add comment from user5, идентификатор элемента: 1, идентификатор пользователя: 5
2023-08-04 13:33:25,519 INFO ru.practicum.ErrorHandler [http-nio-9090-exec-9] Not available: Нет доступного бронирования для идентификатора пользователя: 5 и вещи: 1
2023-08-04 13:33:25,520 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-10] Response 400 BAD_REQUEST
2023-08-04 13:33:25,540 INFO ru.practicum.shareit.booking.BookingController [http-nio-8080-exec-1] Get booking with state CURRENT, userId=1, from=0, size=20
2023-08-04 13:33:25,540 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-1] HTTP GET http://localhost:9090/bookings?state=CURRENT&from=0&size=20
2023-08-04 13:33:25,541 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-1] Accept=[application/json, application/*+json]
2023-08-04 13:33:25,542 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-10] Setting JDBC Connection [HikariProxyConnection@930012408 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST] read-only
2023-08-04 13:33:25,543 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-10] Resetting read-only flag of JDBC Connection [HikariProxyConnection@930012408 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST]
2023-08-04 13:33:25,547 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-1] Response 200 OK
2023-08-04 13:33:25,548 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-1] Reading to [java.lang.Object]
2023-08-04 13:33:25,571 INFO ru.practicum.shareit.booking.BookingController [http-nio-8080-exec-3] Get booking with state CURRENT, userId=4, from=0, size=20
2023-08-04 13:33:25,571 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-3] HTTP GET http://localhost:9090/bookings/owner?state=CURRENT&from=0&size=20
2023-08-04 13:33:25,572 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-3] Accept=[application/json, application/*+json]
2023-08-04 13:33:25,573 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-1] Setting JDBC Connection [HikariProxyConnection@1860989439 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST] read-only
2023-08-04 13:33:25,574 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-1] Resetting read-only flag of JDBC Connection [HikariProxyConnection@1860989439 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST]
2023-08-04 13:33:25,577 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-3] Response 200 OK
2023-08-04 13:33:25,577 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-3] Reading to [java.lang.Object]
2023-08-04 13:33:25,600 INFO ru.practicum.shareit.booking.BookingController [http-nio-8080-exec-4] Get booking with state PAST, userId=1, from=0, size=20
2023-08-04 13:33:25,600 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-4] HTTP GET http://localhost:9090/bookings?state=PAST&from=0&size=20
2023-08-04 13:33:25,601 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-4] Accept=[application/json, application/*+json]
2023-08-04 13:33:25,603 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-2] Setting JDBC Connection [HikariProxyConnection@1828985596 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST] read-only
2023-08-04 13:33:25,604 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-2] Resetting read-only flag of JDBC Connection [HikariProxyConnection@1828985596 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST]
2023-08-04 13:33:25,607 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-4] Response 200 OK
2023-08-04 13:33:25,607 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-4] Reading to [java.lang.Object]
2023-08-04 13:33:25,632 INFO ru.practicum.shareit.booking.BookingController [http-nio-8080-exec-5] Get booking with state PAST, userId=4, from=0, size=20
2023-08-04 13:33:25,633 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-5] HTTP GET http://localhost:9090/bookings/owner?state=PAST&from=0&size=20
2023-08-04 13:33:25,633 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-5] Accept=[application/json, application/*+json]
2023-08-04 13:33:25,634 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-4] Setting JDBC Connection [HikariProxyConnection@648629717 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST] read-only
2023-08-04 13:33:25,635 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-4] Resetting read-only flag of JDBC Connection [HikariProxyConnection@648629717 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST]
2023-08-04 13:33:25,638 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-5] Response 200 OK
2023-08-04 13:33:25,638 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-5] Reading to [java.lang.Object]
2023-08-04 13:33:25,663 INFO ru.practicum.shareit.item.ItemController [http-nio-8080-exec-6] Request from user ID: 6 on get item. ID: 4
2023-08-04 13:33:25,663 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-6] HTTP GET http://localhost:9090/items/4
2023-08-04 13:33:25,663 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-6] Accept=[application/json, application/*+json]
2023-08-04 13:33:25,665 INFO ru.practicum.item.ItemController [http-nio-9090-exec-3] Запрос от идентификатора пользователя: 6 при получении элемента. Идентификатор: 4
2023-08-04 13:33:25,666 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-3] Setting JDBC Connection [HikariProxyConnection@1692687267 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST] read-only
2023-08-04 13:33:25,667 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-3] Resetting read-only flag of JDBC Connection [HikariProxyConnection@1692687267 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST]
2023-08-04 13:33:25,671 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-6] Response 200 OK
2023-08-04 13:33:25,672 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-6] Reading to [java.lang.Object]
2023-08-04 13:33:25,721 INFO ru.practicum.shareit.request.RequestController [http-nio-8080-exec-7] Add request on item RequestDto(id=0, description=Хотел бы воспользоваться щёткой для обуви, created=null, items=null), user id: 99
2023-08-04 13:33:25,722 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-7] HTTP POST http://localhost:9090/requests
2023-08-04 13:33:25,722 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-7] Accept=[application/json, application/*+json]
2023-08-04 13:33:25,723 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-7] Writing [RequestDto(id=0, description=Хотел бы воспользоваться щёткой для обуви, created=null, items=null)] as "application/json"
2023-08-04 13:33:25,733 INFO ru.practicum.request.RequestController [http-nio-9090-exec-5] Добавить запрос на элемент RequestDto(id=0, description=Хотел бы воспользоваться щёткой для обуви, created=null, items=null), идентификатор пользователя: 99
2023-08-04 13:33:25,741 INFO ru.practicum.ErrorHandler [http-nio-9090-exec-5] Not found: User with ID: 99 not found
2023-08-04 13:33:25,743 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-7] Response 404 NOT_FOUND
2023-08-04 13:33:25,772 INFO ru.practicum.shareit.ErrorHandler [http-nio-8080-exec-8] Validation failed for field: description. Error message: Description can't blank
2023-08-04 13:33:25,795 INFO ru.practicum.shareit.request.RequestController [http-nio-8080-exec-10] Request on get all requests from user id: 99
2023-08-04 13:33:25,795 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-10] HTTP GET http://localhost:9090/requests?from=0&size=20
2023-08-04 13:33:25,795 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-10] Accept=[application/json, application/*+json]
2023-08-04 13:33:25,797 INFO ru.practicum.request.RequestController [http-nio-9090-exec-6] Запрос на получение всех запросов от идентификатора пользователя: 99
2023-08-04 13:33:25,797 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-6] Setting JDBC Connection [HikariProxyConnection@495917913 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST] read-only
2023-08-04 13:33:25,798 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-6] Resetting read-only flag of JDBC Connection [HikariProxyConnection@495917913 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST]
2023-08-04 13:33:25,798 INFO ru.practicum.ErrorHandler [http-nio-9090-exec-6] Not found: User with ID: 99 not found
2023-08-04 13:33:25,799 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-10] Response 404 NOT_FOUND
2023-08-04 13:33:25,818 INFO ru.practicum.shareit.request.RequestController [http-nio-8080-exec-2] Request on get all requests from user id: 1
2023-08-04 13:33:25,818 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-2] HTTP GET http://localhost:9090/requests?from=0&size=20
2023-08-04 13:33:25,818 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-2] Accept=[application/json, application/*+json]
2023-08-04 13:33:25,820 INFO ru.practicum.request.RequestController [http-nio-9090-exec-7] Запрос на получение всех запросов от идентификатора пользователя: 1
2023-08-04 13:33:25,820 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-7] Setting JDBC Connection [HikariProxyConnection@79172269 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST] read-only
2023-08-04 13:33:25,821 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-7] Resetting read-only flag of JDBC Connection [HikariProxyConnection@79172269 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST]
2023-08-04 13:33:25,828 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-2] Response 200 OK
2023-08-04 13:33:25,829 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-2] Reading to [java.lang.Object]
2023-08-04 13:33:25,848 INFO ru.practicum.shareit.request.RequestController [http-nio-8080-exec-1] Request on get all requests
2023-08-04 13:33:25,848 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-1] HTTP GET http://localhost:9090/requests/all?from=0&size=20
2023-08-04 13:33:25,849 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-1] Accept=[application/json, application/*+json]
2023-08-04 13:33:25,867 INFO ru.practicum.request.RequestController [http-nio-9090-exec-8] Запрос на получение всех запросов
2023-08-04 13:33:25,868 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-1] Response 200 OK
2023-08-04 13:33:25,868 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-1] Reading to [java.lang.Object]
2023-08-04 13:33:25,889 INFO ru.practicum.shareit.ErrorHandler [http-nio-8080-exec-3] Validation failed for field: size. Error message: должно быть больше 0
2023-08-04 13:33:25,911 INFO ru.practicum.shareit.ErrorHandler [http-nio-8080-exec-5] Validation failed for field: from. Error message: должно быть больше или равно 0
2023-08-04 13:33:25,935 INFO ru.practicum.shareit.ErrorHandler [http-nio-8080-exec-7] Validation failed for field: size. Error message: должно быть больше 0
2023-08-04 13:33:25,958 INFO ru.practicum.shareit.request.RequestController [http-nio-8080-exec-9] Request on get all requests
2023-08-04 13:33:25,958 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-9] HTTP GET http://localhost:9090/requests/all?from=0&size=20
2023-08-04 13:33:25,958 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-9] Accept=[application/json, application/*+json]
2023-08-04 13:33:25,962 INFO ru.practicum.request.RequestController [http-nio-9090-exec-9] Запрос на получение всех запросов
2023-08-04 13:33:25,963 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-9] Response 200 OK
2023-08-04 13:33:25,964 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-9] Reading to [java.lang.Object]
2023-08-04 13:33:25,984 INFO ru.practicum.shareit.request.RequestController [http-nio-8080-exec-10] Add request on item RequestDto(id=0, description=Хотел бы воспользоваться щёткой для обуви, created=null, items=null), user id: 1
2023-08-04 13:33:25,985 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-10] HTTP POST http://localhost:9090/requests
2023-08-04 13:33:25,985 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-10] Accept=[application/json, application/*+json]
2023-08-04 13:33:25,985 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-10] Writing [RequestDto(id=0, description=Хотел бы воспользоваться щёткой для обуви, created=null, items=null)] as "application/json"
2023-08-04 13:33:25,987 INFO ru.practicum.request.RequestController [http-nio-9090-exec-10] Добавить запрос на элемент RequestDto(id=0, description=Хотел бы воспользоваться щёткой для обуви, created=null, items=null), идентификатор пользователя: 1
2023-08-04 13:33:25,993 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-10] Response 200 OK
2023-08-04 13:33:25,993 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-10] Reading to [java.lang.Object]
2023-08-04 13:33:27,016 INFO ru.practicum.shareit.request.RequestController [http-nio-8080-exec-2] Request on get all requests from user id: 1
2023-08-04 13:33:27,016 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-2] HTTP GET http://localhost:9090/requests?from=0&size=20
2023-08-04 13:33:27,016 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-2] Accept=[application/json, application/*+json]
2023-08-04 13:33:27,018 INFO ru.practicum.request.RequestController [http-nio-9090-exec-1] Запрос на получение всех запросов от идентификатора пользователя: 1
2023-08-04 13:33:27,018 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-1] Setting JDBC Connection [HikariProxyConnection@1961585322 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST] read-only
2023-08-04 13:33:27,019 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-1] Resetting read-only flag of JDBC Connection [HikariProxyConnection@1961585322 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST]
2023-08-04 13:33:27,024 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-2] Response 200 OK
2023-08-04 13:33:27,024 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-2] Reading to [java.lang.Object]
2023-08-04 13:33:27,043 INFO ru.practicum.shareit.item.ItemController [http-nio-8080-exec-1] Request on add ItemDto(id=0, name=Щётка для обуви, description=Стандартная щётка для обуви, available=true, requestId=1), user id: 4
2023-08-04 13:33:27,044 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-1] HTTP POST http://localhost:9090/items
2023-08-04 13:33:27,044 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-1] Accept=[application/json, application/*+json]
2023-08-04 13:33:27,044 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-1] Writing [ItemDto(id=0, name=Щётка для обуви, description=Стандартная щётка для обуви, available=true, requestId=1)] as "application/json"
2023-08-04 13:33:27,046 INFO ru.practicum.item.ItemController [http-nio-9090-exec-2] Запрос на добавление ItemDto(id=0, name=Щётка для обуви, description=Стандартная щётка для обуви, available=true, requestId=1), идентификатор пользователя: 4
2023-08-04 13:33:27,047 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-1] Response 200 OK
2023-08-04 13:33:27,047 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-1] Reading to [java.lang.Object]
2023-08-04 13:33:27,070 INFO ru.practicum.shareit.request.RequestController [http-nio-8080-exec-3] Request on get all requests from user id: 1
2023-08-04 13:33:27,071 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-3] HTTP GET http://localhost:9090/requests?from=0&size=20
2023-08-04 13:33:27,071 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-3] Accept=[application/json, application/*+json]
2023-08-04 13:33:27,073 INFO ru.practicum.request.RequestController [http-nio-9090-exec-4] Запрос на получение всех запросов от идентификатора пользователя: 1
2023-08-04 13:33:27,073 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-4] Setting JDBC Connection [HikariProxyConnection@423623933 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST] read-only
2023-08-04 13:33:27,074 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-4] Resetting read-only flag of JDBC Connection [HikariProxyConnection@423623933 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST]
2023-08-04 13:33:27,077 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-3] Response 200 OK
2023-08-04 13:33:27,078 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-3] Reading to [java.lang.Object]
2023-08-04 13:33:27,101 INFO ru.practicum.shareit.request.RequestController [http-nio-8080-exec-4] Request on get all requests
2023-08-04 13:33:27,101 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-4] HTTP GET http://localhost:9090/requests/all?from=0&size=20
2023-08-04 13:33:27,101 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-4] Accept=[application/json, application/*+json]
2023-08-04 13:33:27,104 INFO ru.practicum.request.RequestController [http-nio-9090-exec-3] Запрос на получение всех запросов
2023-08-04 13:33:27,105 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-4] Response 200 OK
2023-08-04 13:33:27,105 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-4] Reading to [java.lang.Object]
2023-08-04 13:33:27,129 INFO ru.practicum.shareit.request.RequestController [http-nio-8080-exec-5] Request on get all requests
2023-08-04 13:33:27,129 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-5] HTTP GET http://localhost:9090/requests/all?from=0&size=20
2023-08-04 13:33:27,129 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-5] Accept=[application/json, application/*+json]
2023-08-04 13:33:27,133 INFO ru.practicum.request.RequestController [http-nio-9090-exec-5] Запрос на получение всех запросов
2023-08-04 13:33:27,134 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-5] Response 200 OK
2023-08-04 13:33:27,134 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-5] Reading to [java.lang.Object]
2023-08-04 13:33:27,159 INFO ru.practicum.shareit.request.RequestController [http-nio-8080-exec-6] Request from user ID: 99 on get request. ID: 1
2023-08-04 13:33:27,159 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-6] HTTP GET http://localhost:9090/requests/1
2023-08-04 13:33:27,159 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-6] Accept=[application/json, application/*+json]
2023-08-04 13:33:27,161 INFO ru.practicum.request.RequestController [http-nio-9090-exec-6] Запрос от идентификатора пользователя: 99 по запросу get. Идентификатор: 1
2023-08-04 13:33:27,161 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-6] Setting JDBC Connection [HikariProxyConnection@1160393619 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST] read-only
2023-08-04 13:33:27,162 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-6] Resetting read-only flag of JDBC Connection [HikariProxyConnection@1160393619 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST]
2023-08-04 13:33:27,162 INFO ru.practicum.ErrorHandler [http-nio-9090-exec-6] Not found: User with ID: 99 not found
2023-08-04 13:33:27,163 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-6] Response 404 NOT_FOUND
2023-08-04 13:33:27,183 INFO ru.practicum.shareit.request.RequestController [http-nio-8080-exec-7] Request from user ID: 1 on get request. ID: 99
2023-08-04 13:33:27,183 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-7] HTTP GET http://localhost:9090/requests/99
2023-08-04 13:33:27,183 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-7] Accept=[application/json, application/*+json]
2023-08-04 13:33:27,184 INFO ru.practicum.request.RequestController [http-nio-9090-exec-7] Запрос от идентификатора пользователя: 1 по запросу get. Идентификатор: 99
2023-08-04 13:33:27,185 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-7] Setting JDBC Connection [HikariProxyConnection@1578244683 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST] read-only
2023-08-04 13:33:27,186 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-7] Resetting read-only flag of JDBC Connection [HikariProxyConnection@1578244683 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST]
2023-08-04 13:33:27,186 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-7] Setting JDBC Connection [HikariProxyConnection@1578244683 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST] read-only
2023-08-04 13:33:27,187 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-7] Resetting read-only flag of JDBC Connection [HikariProxyConnection@1578244683 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST]
2023-08-04 13:33:27,187 INFO ru.practicum.ErrorHandler [http-nio-9090-exec-7] Not found: Запрос с идентификатором: 99 не найден
2023-08-04 13:33:27,188 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-7] Response 404 NOT_FOUND
2023-08-04 13:33:27,210 INFO ru.practicum.shareit.request.RequestController [http-nio-8080-exec-8] Request from user ID: 4 on get request. ID: 1
2023-08-04 13:33:27,210 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-8] HTTP GET http://localhost:9090/requests/1
2023-08-04 13:33:27,210 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-8] Accept=[application/json, application/*+json]
2023-08-04 13:33:27,212 INFO ru.practicum.request.RequestController [http-nio-9090-exec-8] Запрос от идентификатора пользователя: 4 по запросу get. Идентификатор: 1
2023-08-04 13:33:27,212 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-8] Setting JDBC Connection [HikariProxyConnection@521744234 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST] read-only
2023-08-04 13:33:27,213 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-8] Resetting read-only flag of JDBC Connection [HikariProxyConnection@521744234 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST]
2023-08-04 13:33:27,214 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-8] Setting JDBC Connection [HikariProxyConnection@521744234 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST] read-only
2023-08-04 13:33:27,215 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-8] Resetting read-only flag of JDBC Connection [HikariProxyConnection@521744234 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST]
2023-08-04 13:33:27,217 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-8] Response 200 OK
2023-08-04 13:33:27,218 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-8] Reading to [java.lang.Object]
2023-08-04 13:33:27,248 INFO ru.practicum.shareit.request.RequestController [http-nio-8080-exec-9] Request from user ID: 1 on get request. ID: 1
2023-08-04 13:33:27,249 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-9] HTTP GET http://localhost:9090/requests/1
2023-08-04 13:33:27,250 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-9] Accept=[application/json, application/*+json]
2023-08-04 13:33:27,251 INFO ru.practicum.request.RequestController [http-nio-9090-exec-9] Запрос от идентификатора пользователя: 1 по запросу get. Идентификатор: 1
2023-08-04 13:33:27,251 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-9] Setting JDBC Connection [HikariProxyConnection@1649991546 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST] read-only
2023-08-04 13:33:27,252 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-9] Resetting read-only flag of JDBC Connection [HikariProxyConnection@1649991546 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST]
2023-08-04 13:33:27,252 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-9] Setting JDBC Connection [HikariProxyConnection@1649991546 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST] read-only
2023-08-04 13:33:27,253 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-9] Resetting read-only flag of JDBC Connection [HikariProxyConnection@1649991546 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST]
2023-08-04 13:33:27,254 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-9] Response 200 OK
2023-08-04 13:33:27,254 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-9] Reading to [java.lang.Object]
2023-08-04 13:33:27,282 INFO ru.practicum.shareit.ErrorHandler [http-nio-8080-exec-10] Validation failed for field: size. Error message: должно быть больше 0
2023-08-04 13:33:27,305 INFO ru.practicum.shareit.ErrorHandler [http-nio-8080-exec-1] Validation failed for field: size. Error message: должно быть больше 0
2023-08-04 13:33:27,329 INFO ru.practicum.shareit.ErrorHandler [http-nio-8080-exec-4] Validation failed for field: from. Error message: должно быть больше или равно 0
2023-08-04 13:33:27,351 INFO ru.practicum.shareit.ErrorHandler [http-nio-8080-exec-6] Validation failed for field: from. Error message: должно быть больше или равно 0
2023-08-04 13:33:27,373 INFO ru.practicum.shareit.ErrorHandler [http-nio-8080-exec-8] Validation failed for field: size. Error message: должно быть больше 0
2023-08-04 13:33:27,394 INFO ru.practicum.shareit.ErrorHandler [http-nio-8080-exec-10] Validation failed for field: size. Error message: должно быть больше 0
2023-08-04 13:33:27,416 INFO ru.practicum.shareit.booking.BookingController [http-nio-8080-exec-1] Get booking with state ALL, userId=1, from=4, size=2
2023-08-04 13:33:27,416 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-1] HTTP GET http://localhost:9090/bookings?state=ALL&from=4&size=2
2023-08-04 13:33:27,417 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-1] Accept=[application/json, application/*+json]
2023-08-04 13:33:27,418 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-10] Setting JDBC Connection [HikariProxyConnection@1505925948 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST] read-only
2023-08-04 13:33:27,419 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-10] Resetting read-only flag of JDBC Connection [HikariProxyConnection@1505925948 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST]
2023-08-04 13:33:27,423 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-1] Response 200 OK
2023-08-04 13:33:27,423 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-1] Reading to [java.lang.Object]
2023-08-04 13:33:27,446 INFO ru.practicum.shareit.booking.BookingController [http-nio-8080-exec-3] Get booking with state ALL, userId=1, from=1, size=1
2023-08-04 13:33:27,447 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-3] HTTP GET http://localhost:9090/bookings/owner?state=ALL&from=1&size=1
2023-08-04 13:33:27,447 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-3] Accept=[application/json, application/*+json]
2023-08-04 13:33:27,449 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-1] Setting JDBC Connection [HikariProxyConnection@205923480 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST] read-only
2023-08-04 13:33:27,449 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-1] Resetting read-only flag of JDBC Connection [HikariProxyConnection@205923480 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST]
2023-08-04 13:33:27,458 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-3] Response 200 OK
2023-08-04 13:33:27,458 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-3] Reading to [java.lang.Object]
2023-08-04 13:33:37,425 INFO org.springframework.orm.jpa.AbstractEntityManagerFactoryBean [SpringApplicationShutdownHook] Closing JPA EntityManagerFactory for persistence unit 'default'
2023-08-04 13:33:37,426 INFO org.hibernate.tool.schema.internal.SchemaDropperImpl$DelayedDropActionImpl [SpringApplicationShutdownHook] HHH000477: Starting delayed evictData of schema as part of SessionFactory shut-down'
2023-08-04 13:33:37,427 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn0: url=jdbc:h2:mem:my_db user=TEST: (connection is dead)
2023-08-04 13:33:37,427 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn1: url=jdbc:h2:mem:my_db user=TEST: (connection is dead)
2023-08-04 13:33:37,427 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 connection closer] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-08-04 13:33:37,427 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn2: url=jdbc:h2:mem:my_db user=TEST: (connection is dead)
2023-08-04 13:33:37,427 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 connection closer] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-08-04 13:33:37,427 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn3: url=jdbc:h2:mem:my_db user=TEST: (connection is dead)
2023-08-04 13:33:37,427 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 connection closer] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-08-04 13:33:37,427 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn4: url=jdbc:h2:mem:my_db user=TEST: (connection is dead)
2023-08-04 13:33:37,428 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 connection closer] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-08-04 13:33:37,428 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn5: url=jdbc:h2:mem:my_db user=TEST: (connection is dead)
2023-08-04 13:33:37,428 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 connection closer] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-08-04 13:33:37,428 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn6: url=jdbc:h2:mem:my_db user=TEST: (connection is dead)
2023-08-04 13:33:37,428 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 connection closer] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-08-04 13:33:37,428 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn7: url=jdbc:h2:mem:my_db user=TEST: (connection is dead)
2023-08-04 13:33:37,428 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 connection closer] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-08-04 13:33:37,428 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn8: url=jdbc:h2:mem:my_db user=TEST: (connection is dead)
2023-08-04 13:33:37,428 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 connection closer] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-08-04 13:33:37,428 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn9: url=jdbc:h2:mem:my_db user=TEST: (connection is dead)
2023-08-04 13:33:37,428 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 connection closer] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-08-04 13:33:37,601 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn10: url=jdbc:h2:mem:my_db user=TEST
2023-08-04 13:33:37,602 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn11: url=jdbc:h2:mem:my_db user=TEST
2023-08-04 13:33:37,602 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn12: url=jdbc:h2:mem:my_db user=TEST
2023-08-04 13:33:37,603 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn13: url=jdbc:h2:mem:my_db user=TEST
2023-08-04 13:33:37,603 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn14: url=jdbc:h2:mem:my_db user=TEST
2023-08-04 13:33:37,603 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn15: url=jdbc:h2:mem:my_db user=TEST
2023-08-04 13:33:37,603 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn16: url=jdbc:h2:mem:my_db user=TEST
2023-08-04 13:33:37,604 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn17: url=jdbc:h2:mem:my_db user=TEST
2023-08-04 13:33:37,604 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn18: url=jdbc:h2:mem:my_db user=TEST
2023-08-04 13:33:37,605 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn19: url=jdbc:h2:mem:my_db user=TEST
2023-08-04 13:33:37,605 INFO com.zaxxer.hikari.HikariDataSource [SpringApplicationShutdownHook] HikariPool-1 - Shutdown initiated...
2023-08-04 13:33:37,605 DEBUG com.zaxxer.hikari.pool.HikariPool [SpringApplicationShutdownHook] HikariPool-1 - Before shutdown stats (total=10, active=0, idle=10, waiting=0)
2023-08-04 13:33:37,606 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn10: url=jdbc:h2:mem:my_db user=TEST: (connection evicted)
2023-08-04 13:33:37,606 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn11: url=jdbc:h2:mem:my_db user=TEST: (connection evicted)
2023-08-04 13:33:37,607 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn12: url=jdbc:h2:mem:my_db user=TEST: (connection evicted)
2023-08-04 13:33:37,607 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn13: url=jdbc:h2:mem:my_db user=TEST: (connection evicted)
2023-08-04 13:33:37,607 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn14: url=jdbc:h2:mem:my_db user=TEST: (connection evicted)
2023-08-04 13:33:37,607 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn15: url=jdbc:h2:mem:my_db user=TEST: (connection evicted)
2023-08-04 13:33:37,607 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn16: url=jdbc:h2:mem:my_db user=TEST: (connection evicted)
2023-08-04 13:33:37,607 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn17: url=jdbc:h2:mem:my_db user=TEST: (connection evicted)
2023-08-04 13:33:37,607 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn18: url=jdbc:h2:mem:my_db user=TEST: (connection evicted)
2023-08-04 13:33:37,607 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn19: url=jdbc:h2:mem:my_db user=TEST: (connection evicted)
2023-08-04 13:33:37,607 DEBUG com.zaxxer.hikari.pool.HikariPool [SpringApplicationShutdownHook] HikariPool-1 - After shutdown stats (total=0, active=0, idle=0, waiting=0)
2023-08-04 13:33:37,607 INFO com.zaxxer.hikari.HikariDataSource [SpringApplicationShutdownHook] HikariPool-1 - Shutdown completed.
2023-08-04 16:23:15,197 INFO org.springframework.boot.StartupInfoLogger [main] Starting ShareItServerApp using Java 18.0.2 on DESKTOP-HBQA1DH with PID 9380 (C:\Users\Aser\dev\java-shareit\ser\target\classes started by Aser in C:\Users\Aser\dev\java-shareit)
2023-08-04 16:23:15,200 INFO org.springframework.boot.SpringApplication [main] No active profile set, falling back to 1 default profile: "default"
2023-08-04 16:23:15,909 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2023-08-04 16:23:15,997 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Finished Spring Data repository scanning in 80 ms. Found 5 JPA repository interfaces.
2023-08-04 16:23:16,595 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [main] Tomcat initialized with port(s): 9090 (http)
2023-08-04 16:23:16,603 INFO org.apache.juli.logging.DirectJDKLog [main] Initializing ProtocolHandler ["http-nio-9090"]
2023-08-04 16:23:16,603 INFO org.apache.juli.logging.DirectJDKLog [main] Starting service [Tomcat]
2023-08-04 16:23:16,603 INFO org.apache.juli.logging.DirectJDKLog [main] Starting Servlet engine: [Apache Tomcat/9.0.71]
2023-08-04 16:23:16,684 INFO org.apache.juli.logging.DirectJDKLog [main] Initializing Spring embedded WebApplicationContext
2023-08-04 16:23:16,684 INFO org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext [main] Root WebApplicationContext: initialization completed in 1434 ms
2023-08-04 16:23:16,758 DEBUG com.zaxxer.hikari.HikariConfig [main] Driver class org.h2.Driver found in Thread context class loader TomcatEmbeddedWebappClassLoader
  context: ROOT
  delegate: true
----------> Parent Classloader:
jdk.internal.loader.ClassLoaders$AppClassLoader@3cd1a2f1

2023-08-04 16:23:16,953 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [main] Fetching JDBC Connection from DataSource
2023-08-04 16:23:16,954 DEBUG com.zaxxer.hikari.HikariConfig [main] HikariPool-1 - configuration:
2023-08-04 16:23:16,956 DEBUG com.zaxxer.hikari.HikariConfig [main] allowPoolSuspension................................false
2023-08-04 16:23:16,957 DEBUG com.zaxxer.hikari.HikariConfig [main] autoCommit................................true
2023-08-04 16:23:16,957 DEBUG com.zaxxer.hikari.HikariConfig [main] catalog................................none
2023-08-04 16:23:16,957 DEBUG com.zaxxer.hikari.HikariConfig [main] connectionInitSql................................none
2023-08-04 16:23:16,957 DEBUG com.zaxxer.hikari.HikariConfig [main] connectionTestQuery................................none
2023-08-04 16:23:16,958 DEBUG com.zaxxer.hikari.HikariConfig [main] connectionTimeout................................30000
2023-08-04 16:23:16,959 DEBUG com.zaxxer.hikari.HikariConfig [main] dataSource................................none
2023-08-04 16:23:16,959 DEBUG com.zaxxer.hikari.HikariConfig [main] dataSourceClassName................................none
2023-08-04 16:23:16,959 DEBUG com.zaxxer.hikari.HikariConfig [main] dataSourceJNDI................................none
2023-08-04 16:23:16,959 DEBUG com.zaxxer.hikari.HikariConfig [main] dataSourceProperties................................{password=<masked>}
2023-08-04 16:23:16,960 DEBUG com.zaxxer.hikari.HikariConfig [main] driverClassName................................"org.h2.Driver"
2023-08-04 16:23:16,960 DEBUG com.zaxxer.hikari.HikariConfig [main] exceptionOverrideClassName................................none
2023-08-04 16:23:16,960 DEBUG com.zaxxer.hikari.HikariConfig [main] healthCheckProperties................................{}
2023-08-04 16:23:16,960 DEBUG com.zaxxer.hikari.HikariConfig [main] healthCheckRegistry................................none
2023-08-04 16:23:16,960 DEBUG com.zaxxer.hikari.HikariConfig [main] idleTimeout................................600000
2023-08-04 16:23:16,960 DEBUG com.zaxxer.hikari.HikariConfig [main] initializationFailTimeout................................1
2023-08-04 16:23:16,961 DEBUG com.zaxxer.hikari.HikariConfig [main] isolateInternalQueries................................false
2023-08-04 16:23:16,961 DEBUG com.zaxxer.hikari.HikariConfig [main] jdbcUrl................................jdbc:h2:mem:my_db
2023-08-04 16:23:16,961 DEBUG com.zaxxer.hikari.HikariConfig [main] keepaliveTime................................0
2023-08-04 16:23:16,961 DEBUG com.zaxxer.hikari.HikariConfig [main] leakDetectionThreshold................................0
2023-08-04 16:23:16,961 DEBUG com.zaxxer.hikari.HikariConfig [main] maxLifetime................................1800000
2023-08-04 16:23:16,962 DEBUG com.zaxxer.hikari.HikariConfig [main] maximumPoolSize................................10
2023-08-04 16:23:16,962 DEBUG com.zaxxer.hikari.HikariConfig [main] metricRegistry................................none
2023-08-04 16:23:16,962 DEBUG com.zaxxer.hikari.HikariConfig [main] metricsTrackerFactory................................com.zaxxer.hikari.metrics.micrometer.MicrometerMetricsTrackerFactory@7f79edee
2023-08-04 16:23:16,962 DEBUG com.zaxxer.hikari.HikariConfig [main] minimumIdle................................10
2023-08-04 16:23:16,963 DEBUG com.zaxxer.hikari.HikariConfig [main] password................................<masked>
2023-08-04 16:23:16,963 DEBUG com.zaxxer.hikari.HikariConfig [main] poolName................................"HikariPool-1"
2023-08-04 16:23:16,963 DEBUG com.zaxxer.hikari.HikariConfig [main] readOnly................................false
2023-08-04 16:23:16,963 DEBUG com.zaxxer.hikari.HikariConfig [main] registerMbeans................................false
2023-08-04 16:23:16,963 DEBUG com.zaxxer.hikari.HikariConfig [main] scheduledExecutor................................none
2023-08-04 16:23:16,964 DEBUG com.zaxxer.hikari.HikariConfig [main] schema................................none
2023-08-04 16:23:16,964 DEBUG com.zaxxer.hikari.HikariConfig [main] threadFactory................................internal
2023-08-04 16:23:16,964 DEBUG com.zaxxer.hikari.HikariConfig [main] transactionIsolation................................default
2023-08-04 16:23:16,964 DEBUG com.zaxxer.hikari.HikariConfig [main] username................................"test"
2023-08-04 16:23:16,964 DEBUG com.zaxxer.hikari.HikariConfig [main] validationTimeout................................5000
2023-08-04 16:23:16,964 INFO com.zaxxer.hikari.HikariDataSource [main] HikariPool-1 - Starting...
2023-08-04 16:23:17,129 DEBUG com.zaxxer.hikari.pool.HikariPool [main] HikariPool-1 - Added connection conn0: url=jdbc:h2:mem:my_db user=TEST
2023-08-04 16:23:17,133 INFO com.zaxxer.hikari.HikariDataSource [main] HikariPool-1 - Start completed.
2023-08-04 16:23:17,177 INFO org.hibernate.jpa.internal.util.LogHelper [main] HHH000204: Processing PersistenceUnitInfo [name: default]
2023-08-04 16:23:17,210 INFO org.hibernate.Version [main] HHH000412: Hibernate ORM core version 5.6.15.Final
2023-08-04 16:23:17,235 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=1, active=0, idle=1, waiting=0)
2023-08-04 16:23:17,236 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn1: url=jdbc:h2:mem:my_db user=TEST
2023-08-04 16:23:17,237 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn2: url=jdbc:h2:mem:my_db user=TEST
2023-08-04 16:23:17,237 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn3: url=jdbc:h2:mem:my_db user=TEST
2023-08-04 16:23:17,238 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn4: url=jdbc:h2:mem:my_db user=TEST
2023-08-04 16:23:17,238 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn5: url=jdbc:h2:mem:my_db user=TEST
2023-08-04 16:23:17,239 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn6: url=jdbc:h2:mem:my_db user=TEST
2023-08-04 16:23:17,239 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn7: url=jdbc:h2:mem:my_db user=TEST
2023-08-04 16:23:17,239 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn8: url=jdbc:h2:mem:my_db user=TEST
2023-08-04 16:23:17,240 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn9: url=jdbc:h2:mem:my_db user=TEST
2023-08-04 16:23:17,240 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 connection adder] HikariPool-1 - After adding stats (total=10, active=0, idle=10, waiting=0)
2023-08-04 16:23:17,328 INFO org.hibernate.annotations.common.reflection.java.JavaReflectionManager [main] HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2023-08-04 16:23:17,411 INFO org.hibernate.dialect.Dialect [main] HHH000400: Using dialect: org.hibernate.dialect.PostgreSQL10Dialect
2023-08-04 16:23:17,856 INFO org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator [main] HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2023-08-04 16:23:17,863 INFO org.springframework.orm.jpa.AbstractEntityManagerFactoryBean [main] Initialized JPA EntityManagerFactory for persistence unit 'default'
2023-08-04 16:23:18,418 WARN org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration [main] spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2023-08-04 16:23:18,755 INFO org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver [main] Exposing 1 endpoint(s) beneath base path '/actuator'
2023-08-04 16:23:18,782 INFO org.apache.juli.logging.DirectJDKLog [main] Starting ProtocolHandler ["http-nio-9090"]
2023-08-04 16:23:18,800 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [main] Tomcat started on port(s): 9090 (http) with context path ''
2023-08-04 16:23:18,815 INFO org.springframework.boot.StartupInfoLogger [main] Started ShareItServerApp in 4.097 seconds (JVM running for 4.445)
2023-08-04 16:23:47,236 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-08-04 16:23:47,236 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-08-04 16:23:49,776 INFO org.springframework.orm.jpa.AbstractEntityManagerFactoryBean [SpringApplicationShutdownHook] Closing JPA EntityManagerFactory for persistence unit 'default'
2023-08-04 16:23:49,776 INFO org.hibernate.tool.schema.internal.SchemaDropperImpl$DelayedDropActionImpl [SpringApplicationShutdownHook] HHH000477: Starting delayed evictData of schema as part of SessionFactory shut-down'
2023-08-04 16:23:49,777 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn0: url=jdbc:h2:mem:my_db user=TEST: (connection is dead)
2023-08-04 16:23:49,777 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn1: url=jdbc:h2:mem:my_db user=TEST: (connection is dead)
2023-08-04 16:23:49,778 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 connection closer] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-08-04 16:23:49,778 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn2: url=jdbc:h2:mem:my_db user=TEST: (connection is dead)
2023-08-04 16:23:49,778 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 connection closer] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-08-04 16:23:49,778 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn3: url=jdbc:h2:mem:my_db user=TEST: (connection is dead)
2023-08-04 16:23:49,778 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 connection closer] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-08-04 16:23:49,778 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn4: url=jdbc:h2:mem:my_db user=TEST: (connection is dead)
2023-08-04 16:23:49,778 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 connection closer] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-08-04 16:23:49,778 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn5: url=jdbc:h2:mem:my_db user=TEST: (connection is dead)
2023-08-04 16:23:49,778 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 connection closer] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-08-04 16:23:49,778 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn6: url=jdbc:h2:mem:my_db user=TEST: (connection is dead)
2023-08-04 16:23:49,778 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 connection closer] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-08-04 16:23:49,778 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn7: url=jdbc:h2:mem:my_db user=TEST: (connection is dead)
2023-08-04 16:23:49,778 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 connection closer] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-08-04 16:23:49,778 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn8: url=jdbc:h2:mem:my_db user=TEST: (connection is dead)
2023-08-04 16:23:49,778 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 connection closer] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-08-04 16:23:49,778 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn9: url=jdbc:h2:mem:my_db user=TEST: (connection is dead)
2023-08-04 16:23:49,778 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 connection closer] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-08-04 16:23:49,961 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn10: url=jdbc:h2:mem:my_db user=TEST
2023-08-04 16:23:49,961 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn11: url=jdbc:h2:mem:my_db user=TEST
2023-08-04 16:23:49,962 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn12: url=jdbc:h2:mem:my_db user=TEST
2023-08-04 16:23:49,962 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn13: url=jdbc:h2:mem:my_db user=TEST
2023-08-04 16:23:49,962 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn14: url=jdbc:h2:mem:my_db user=TEST
2023-08-04 16:23:49,962 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn15: url=jdbc:h2:mem:my_db user=TEST
2023-08-04 16:23:49,963 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn16: url=jdbc:h2:mem:my_db user=TEST
2023-08-04 16:23:49,963 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn17: url=jdbc:h2:mem:my_db user=TEST
2023-08-04 16:23:49,963 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn18: url=jdbc:h2:mem:my_db user=TEST
2023-08-04 16:23:49,964 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn19: url=jdbc:h2:mem:my_db user=TEST
2023-08-04 16:23:49,964 INFO com.zaxxer.hikari.HikariDataSource [SpringApplicationShutdownHook] HikariPool-1 - Shutdown initiated...
2023-08-04 16:23:49,964 DEBUG com.zaxxer.hikari.pool.HikariPool [SpringApplicationShutdownHook] HikariPool-1 - Before shutdown stats (total=10, active=0, idle=10, waiting=0)
2023-08-04 16:23:49,964 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn10: url=jdbc:h2:mem:my_db user=TEST: (connection evicted)
2023-08-04 16:23:49,964 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn11: url=jdbc:h2:mem:my_db user=TEST: (connection evicted)
2023-08-04 16:23:49,964 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn12: url=jdbc:h2:mem:my_db user=TEST: (connection evicted)
2023-08-04 16:23:49,965 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn13: url=jdbc:h2:mem:my_db user=TEST: (connection evicted)
2023-08-04 16:23:49,965 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn14: url=jdbc:h2:mem:my_db user=TEST: (connection evicted)
2023-08-04 16:23:49,965 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn15: url=jdbc:h2:mem:my_db user=TEST: (connection evicted)
2023-08-04 16:23:49,965 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn16: url=jdbc:h2:mem:my_db user=TEST: (connection evicted)
2023-08-04 16:23:49,965 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn17: url=jdbc:h2:mem:my_db user=TEST: (connection evicted)
2023-08-04 16:23:49,965 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn18: url=jdbc:h2:mem:my_db user=TEST: (connection evicted)
2023-08-04 16:23:49,965 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn19: url=jdbc:h2:mem:my_db user=TEST: (connection evicted)
2023-08-04 16:23:49,965 DEBUG com.zaxxer.hikari.pool.HikariPool [SpringApplicationShutdownHook] HikariPool-1 - After shutdown stats (total=0, active=0, idle=0, waiting=0)
2023-08-04 16:23:49,965 INFO com.zaxxer.hikari.HikariDataSource [SpringApplicationShutdownHook] HikariPool-1 - Shutdown completed.
2023-08-04 16:28:02,474 INFO org.hibernate.validator.internal.util.Version [background-preinit] HV000001: Hibernate Validator 6.2.5.Final
2023-08-04 16:28:02,483 INFO org.springframework.boot.StartupInfoLogger [main] Starting ShareItGateway using Java 18.0.2 on DESKTOP-HBQA1DH with PID 11500 (C:\Users\Aser\dev\java-shareit\gateway\target\classes started by Aser in C:\Users\Aser\dev\java-shareit)
2023-08-04 16:28:02,484 INFO org.springframework.boot.SpringApplication [main] No active profile set, falling back to 1 default profile: "default"
2023-08-04 16:28:03,392 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [main] Tomcat initialized with port(s): 8080 (http)
2023-08-04 16:28:03,399 INFO org.apache.juli.logging.DirectJDKLog [main] Initializing ProtocolHandler ["http-nio-8080"]
2023-08-04 16:28:03,399 INFO org.apache.juli.logging.DirectJDKLog [main] Starting service [Tomcat]
2023-08-04 16:28:03,400 INFO org.apache.juli.logging.DirectJDKLog [main] Starting Servlet engine: [Apache Tomcat/9.0.71]
2023-08-04 16:28:03,461 INFO org.apache.juli.logging.DirectJDKLog [main] Initializing Spring embedded WebApplicationContext
2023-08-04 16:28:03,462 INFO org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext [main] Root WebApplicationContext: initialization completed in 938 ms
2023-08-04 16:28:04,031 INFO org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver [main] Exposing 1 endpoint(s) beneath base path '/actuator'
2023-08-04 16:28:04,048 INFO org.apache.juli.logging.DirectJDKLog [main] Starting ProtocolHandler ["http-nio-8080"]
2023-08-04 16:28:04,064 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [main] Tomcat started on port(s): 8080 (http) with context path ''
2023-08-04 16:28:04,078 INFO org.springframework.boot.StartupInfoLogger [main] Started ShareItGateway in 1.976 seconds (JVM running for 2.307)
2023-08-04 16:30:41,452 INFO org.hibernate.validator.internal.util.Version [background-preinit] HV000001: Hibernate Validator 6.2.5.Final
2023-08-04 16:30:41,457 INFO org.springframework.boot.StartupInfoLogger [main] Starting ShareItGateway using Java 18.0.2 on DESKTOP-HBQA1DH with PID 10720 (C:\Users\Aser\dev\java-shareit\gateway\target\classes started by Aser in C:\Users\Aser\dev\java-shareit)
2023-08-04 16:30:41,458 INFO org.springframework.boot.SpringApplication [main] No active profile set, falling back to 1 default profile: "default"
2023-08-04 16:30:42,446 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [main] Tomcat initialized with port(s): 8080 (http)
2023-08-04 16:30:42,453 INFO org.apache.juli.logging.DirectJDKLog [main] Initializing ProtocolHandler ["http-nio-8080"]
2023-08-04 16:30:42,453 INFO org.apache.juli.logging.DirectJDKLog [main] Starting service [Tomcat]
2023-08-04 16:30:42,454 INFO org.apache.juli.logging.DirectJDKLog [main] Starting Servlet engine: [Apache Tomcat/9.0.71]
2023-08-04 16:30:42,519 INFO org.apache.juli.logging.DirectJDKLog [main] Initializing Spring embedded WebApplicationContext
2023-08-04 16:30:42,520 INFO org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext [main] Root WebApplicationContext: initialization completed in 1025 ms
2023-08-04 16:30:43,086 INFO org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver [main] Exposing 1 endpoint(s) beneath base path '/actuator'
2023-08-04 16:30:43,104 INFO org.apache.juli.logging.DirectJDKLog [main] Starting ProtocolHandler ["http-nio-8080"]
2023-08-04 16:30:43,121 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [main] Tomcat started on port(s): 8080 (http) with context path ''
2023-08-04 16:30:43,135 INFO org.springframework.boot.StartupInfoLogger [main] Started ShareItGateway in 2.073 seconds (JVM running for 2.36)
2023-08-04 16:30:56,632 INFO org.hibernate.validator.internal.util.Version [background-preinit] HV000001: Hibernate Validator 6.2.5.Final
2023-08-04 16:30:56,638 INFO org.springframework.boot.StartupInfoLogger [main] Starting ShareItGateway using Java 18.0.2 on DESKTOP-HBQA1DH with PID 12132 (C:\Users\Aser\dev\java-shareit\gateway\target\classes started by Aser in C:\Users\Aser\dev\java-shareit)
2023-08-04 16:30:56,639 INFO org.springframework.boot.SpringApplication [main] No active profile set, falling back to 1 default profile: "default"
2023-08-04 16:30:57,555 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [main] Tomcat initialized with port(s): 8080 (http)
2023-08-04 16:30:57,562 INFO org.apache.juli.logging.DirectJDKLog [main] Initializing ProtocolHandler ["http-nio-8080"]
2023-08-04 16:30:57,562 INFO org.apache.juli.logging.DirectJDKLog [main] Starting service [Tomcat]
2023-08-04 16:30:57,563 INFO org.apache.juli.logging.DirectJDKLog [main] Starting Servlet engine: [Apache Tomcat/9.0.71]
2023-08-04 16:30:57,627 INFO org.apache.juli.logging.DirectJDKLog [main] Initializing Spring embedded WebApplicationContext
2023-08-04 16:30:57,628 INFO org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext [main] Root WebApplicationContext: initialization completed in 950 ms
2023-08-04 16:30:58,188 INFO org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver [main] Exposing 1 endpoint(s) beneath base path '/actuator'
2023-08-04 16:30:58,206 INFO org.apache.juli.logging.DirectJDKLog [main] Starting ProtocolHandler ["http-nio-8080"]
2023-08-04 16:30:58,222 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [main] Tomcat started on port(s): 8080 (http) with context path ''
2023-08-04 16:30:58,234 INFO org.springframework.boot.StartupInfoLogger [main] Started ShareItGateway in 1.989 seconds (JVM running for 2.286)
2023-08-04 16:33:39,366 INFO org.springframework.boot.StartupInfoLogger [main] Starting ShareItServerApp using Java 18.0.2 on DESKTOP-HBQA1DH with PID 1876 (C:\Users\Aser\dev\java-shareit\ser\target\classes started by Aser in C:\Users\Aser\dev\java-shareit)
2023-08-04 16:33:39,368 INFO org.springframework.boot.SpringApplication [main] No active profile set, falling back to 1 default profile: "default"
2023-08-04 16:33:40,065 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2023-08-04 16:33:40,126 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Finished Spring Data repository scanning in 54 ms. Found 5 JPA repository interfaces.
2023-08-04 16:33:40,602 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [main] Tomcat initialized with port(s): 9090 (http)
2023-08-04 16:33:40,609 INFO org.apache.juli.logging.DirectJDKLog [main] Initializing ProtocolHandler ["http-nio-9090"]
2023-08-04 16:33:40,610 INFO org.apache.juli.logging.DirectJDKLog [main] Starting service [Tomcat]
2023-08-04 16:33:40,610 INFO org.apache.juli.logging.DirectJDKLog [main] Starting Servlet engine: [Apache Tomcat/9.0.71]
2023-08-04 16:33:40,687 INFO org.apache.juli.logging.DirectJDKLog [main] Initializing Spring embedded WebApplicationContext
2023-08-04 16:33:40,687 INFO org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext [main] Root WebApplicationContext: initialization completed in 1273 ms
2023-08-04 16:33:40,750 DEBUG com.zaxxer.hikari.HikariConfig [main] Driver class org.h2.Driver found in Thread context class loader TomcatEmbeddedWebappClassLoader
  context: ROOT
  delegate: true
----------> Parent Classloader:
jdk.internal.loader.ClassLoaders$AppClassLoader@3cd1a2f1

2023-08-04 16:33:40,918 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [main] Fetching JDBC Connection from DataSource
2023-08-04 16:33:40,919 DEBUG com.zaxxer.hikari.HikariConfig [main] HikariPool-1 - configuration:
2023-08-04 16:33:40,921 DEBUG com.zaxxer.hikari.HikariConfig [main] allowPoolSuspension................................false
2023-08-04 16:33:40,921 DEBUG com.zaxxer.hikari.HikariConfig [main] autoCommit................................true
2023-08-04 16:33:40,922 DEBUG com.zaxxer.hikari.HikariConfig [main] catalog................................none
2023-08-04 16:33:40,922 DEBUG com.zaxxer.hikari.HikariConfig [main] connectionInitSql................................none
2023-08-04 16:33:40,922 DEBUG com.zaxxer.hikari.HikariConfig [main] connectionTestQuery................................none
2023-08-04 16:33:40,923 DEBUG com.zaxxer.hikari.HikariConfig [main] connectionTimeout................................30000
2023-08-04 16:33:40,924 DEBUG com.zaxxer.hikari.HikariConfig [main] dataSource................................none
2023-08-04 16:33:40,924 DEBUG com.zaxxer.hikari.HikariConfig [main] dataSourceClassName................................none
2023-08-04 16:33:40,924 DEBUG com.zaxxer.hikari.HikariConfig [main] dataSourceJNDI................................none
2023-08-04 16:33:40,924 DEBUG com.zaxxer.hikari.HikariConfig [main] dataSourceProperties................................{password=<masked>}
2023-08-04 16:33:40,925 DEBUG com.zaxxer.hikari.HikariConfig [main] driverClassName................................"org.h2.Driver"
2023-08-04 16:33:40,925 DEBUG com.zaxxer.hikari.HikariConfig [main] exceptionOverrideClassName................................none
2023-08-04 16:33:40,925 DEBUG com.zaxxer.hikari.HikariConfig [main] healthCheckProperties................................{}
2023-08-04 16:33:40,925 DEBUG com.zaxxer.hikari.HikariConfig [main] healthCheckRegistry................................none
2023-08-04 16:33:40,925 DEBUG com.zaxxer.hikari.HikariConfig [main] idleTimeout................................600000
2023-08-04 16:33:40,925 DEBUG com.zaxxer.hikari.HikariConfig [main] initializationFailTimeout................................1
2023-08-04 16:33:40,926 DEBUG com.zaxxer.hikari.HikariConfig [main] isolateInternalQueries................................false
2023-08-04 16:33:40,926 DEBUG com.zaxxer.hikari.HikariConfig [main] jdbcUrl................................jdbc:h2:mem:my_db
2023-08-04 16:33:40,926 DEBUG com.zaxxer.hikari.HikariConfig [main] keepaliveTime................................0
2023-08-04 16:33:40,926 DEBUG com.zaxxer.hikari.HikariConfig [main] leakDetectionThreshold................................0
2023-08-04 16:33:40,926 DEBUG com.zaxxer.hikari.HikariConfig [main] maxLifetime................................1800000
2023-08-04 16:33:40,926 DEBUG com.zaxxer.hikari.HikariConfig [main] maximumPoolSize................................10
2023-08-04 16:33:40,927 DEBUG com.zaxxer.hikari.HikariConfig [main] metricRegistry................................none
2023-08-04 16:33:40,927 DEBUG com.zaxxer.hikari.HikariConfig [main] metricsTrackerFactory................................com.zaxxer.hikari.metrics.micrometer.MicrometerMetricsTrackerFactory@7f79edee
2023-08-04 16:33:40,927 DEBUG com.zaxxer.hikari.HikariConfig [main] minimumIdle................................10
2023-08-04 16:33:40,927 DEBUG com.zaxxer.hikari.HikariConfig [main] password................................<masked>
2023-08-04 16:33:40,927 DEBUG com.zaxxer.hikari.HikariConfig [main] poolName................................"HikariPool-1"
2023-08-04 16:33:40,928 DEBUG com.zaxxer.hikari.HikariConfig [main] readOnly................................false
2023-08-04 16:33:40,928 DEBUG com.zaxxer.hikari.HikariConfig [main] registerMbeans................................false
2023-08-04 16:33:40,928 DEBUG com.zaxxer.hikari.HikariConfig [main] scheduledExecutor................................none
2023-08-04 16:33:40,928 DEBUG com.zaxxer.hikari.HikariConfig [main] schema................................none
2023-08-04 16:33:40,928 DEBUG com.zaxxer.hikari.HikariConfig [main] threadFactory................................internal
2023-08-04 16:33:40,929 DEBUG com.zaxxer.hikari.HikariConfig [main] transactionIsolation................................default
2023-08-04 16:33:40,929 DEBUG com.zaxxer.hikari.HikariConfig [main] username................................"test"
2023-08-04 16:33:40,929 DEBUG com.zaxxer.hikari.HikariConfig [main] validationTimeout................................5000
2023-08-04 16:33:40,929 INFO com.zaxxer.hikari.HikariDataSource [main] HikariPool-1 - Starting...
2023-08-04 16:33:41,084 DEBUG com.zaxxer.hikari.pool.HikariPool [main] HikariPool-1 - Added connection conn0: url=jdbc:h2:mem:my_db user=TEST
2023-08-04 16:33:41,088 INFO com.zaxxer.hikari.HikariDataSource [main] HikariPool-1 - Start completed.
2023-08-04 16:33:41,132 INFO org.hibernate.jpa.internal.util.LogHelper [main] HHH000204: Processing PersistenceUnitInfo [name: default]
2023-08-04 16:33:41,168 INFO org.hibernate.Version [main] HHH000412: Hibernate ORM core version 5.6.15.Final
2023-08-04 16:33:41,190 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=1, active=0, idle=1, waiting=0)
2023-08-04 16:33:41,191 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn1: url=jdbc:h2:mem:my_db user=TEST
2023-08-04 16:33:41,191 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn2: url=jdbc:h2:mem:my_db user=TEST
2023-08-04 16:33:41,191 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn3: url=jdbc:h2:mem:my_db user=TEST
2023-08-04 16:33:41,192 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn4: url=jdbc:h2:mem:my_db user=TEST
2023-08-04 16:33:41,192 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn5: url=jdbc:h2:mem:my_db user=TEST
2023-08-04 16:33:41,192 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn6: url=jdbc:h2:mem:my_db user=TEST
2023-08-04 16:33:41,193 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn7: url=jdbc:h2:mem:my_db user=TEST
2023-08-04 16:33:41,193 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn8: url=jdbc:h2:mem:my_db user=TEST
2023-08-04 16:33:41,193 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn9: url=jdbc:h2:mem:my_db user=TEST
2023-08-04 16:33:41,194 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 connection adder] HikariPool-1 - After adding stats (total=10, active=0, idle=10, waiting=0)
2023-08-04 16:33:41,286 INFO org.hibernate.annotations.common.reflection.java.JavaReflectionManager [main] HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2023-08-04 16:33:41,366 INFO org.hibernate.dialect.Dialect [main] HHH000400: Using dialect: org.hibernate.dialect.PostgreSQL10Dialect
2023-08-04 16:33:41,805 INFO org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator [main] HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2023-08-04 16:33:41,811 INFO org.springframework.orm.jpa.AbstractEntityManagerFactoryBean [main] Initialized JPA EntityManagerFactory for persistence unit 'default'
2023-08-04 16:33:42,344 WARN org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration [main] spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2023-08-04 16:33:42,668 INFO org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver [main] Exposing 1 endpoint(s) beneath base path '/actuator'
2023-08-04 16:33:42,687 INFO org.apache.juli.logging.DirectJDKLog [main] Starting ProtocolHandler ["http-nio-9090"]
2023-08-04 16:33:42,706 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [main] Tomcat started on port(s): 9090 (http) with context path ''
2023-08-04 16:33:42,719 INFO org.springframework.boot.StartupInfoLogger [main] Started ShareItServerApp in 3.76 seconds (JVM running for 4.081)
2023-08-04 16:33:48,839 INFO org.hibernate.validator.internal.util.Version [background-preinit] HV000001: Hibernate Validator 6.2.5.Final
2023-08-04 16:33:48,843 INFO org.springframework.boot.StartupInfoLogger [main] Starting ShareItGateway using Java 18.0.2 on DESKTOP-HBQA1DH with PID 12272 (C:\Users\Aser\dev\java-shareit\gateway\target\classes started by Aser in C:\Users\Aser\dev\java-shareit)
2023-08-04 16:33:48,844 INFO org.springframework.boot.SpringApplication [main] No active profile set, falling back to 1 default profile: "default"
2023-08-04 16:33:49,768 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [main] Tomcat initialized with port(s): 8080 (http)
2023-08-04 16:33:49,775 INFO org.apache.juli.logging.DirectJDKLog [main] Initializing ProtocolHandler ["http-nio-8080"]
2023-08-04 16:33:49,775 INFO org.apache.juli.logging.DirectJDKLog [main] Starting service [Tomcat]
2023-08-04 16:33:49,775 INFO org.apache.juli.logging.DirectJDKLog [main] Starting Servlet engine: [Apache Tomcat/9.0.71]
2023-08-04 16:33:49,839 INFO org.apache.juli.logging.DirectJDKLog [main] Initializing Spring embedded WebApplicationContext
2023-08-04 16:33:49,840 INFO org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext [main] Root WebApplicationContext: initialization completed in 957 ms
2023-08-04 16:33:50,396 INFO org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver [main] Exposing 1 endpoint(s) beneath base path '/actuator'
2023-08-04 16:33:50,412 INFO org.apache.juli.logging.DirectJDKLog [main] Starting ProtocolHandler ["http-nio-8080"]
2023-08-04 16:33:50,428 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [main] Tomcat started on port(s): 8080 (http) with context path ''
2023-08-04 16:33:50,443 INFO org.springframework.boot.StartupInfoLogger [main] Started ShareItGateway in 1.985 seconds (JVM running for 2.276)
2023-08-04 16:34:11,191 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-08-04 16:34:11,191 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-08-04 16:34:14,224 INFO org.apache.juli.logging.DirectJDKLog [http-nio-8080-exec-2] Initializing Spring DispatcherServlet 'dispatcherServlet'
2023-08-04 16:34:14,224 INFO org.springframework.web.servlet.FrameworkServlet [http-nio-8080-exec-2] Initializing Servlet 'dispatcherServlet'
2023-08-04 16:34:14,226 INFO org.springframework.web.servlet.FrameworkServlet [http-nio-8080-exec-2] Completed initialization in 1 ms
2023-08-04 16:34:14,364 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-2] HTTP POST http://localhost:9090/users
2023-08-04 16:34:14,370 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-2] Accept=[application/json, application/*+json]
2023-08-04 16:34:14,380 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-2] Writing [UserDto(id=0, email=user@user.com, name=user)] as "application/json"
2023-08-04 16:34:14,455 INFO org.apache.juli.logging.DirectJDKLog [http-nio-9090-exec-1] Initializing Spring DispatcherServlet 'dispatcherServlet'
2023-08-04 16:34:14,456 INFO org.springframework.web.servlet.FrameworkServlet [http-nio-9090-exec-1] Initializing Servlet 'dispatcherServlet'
2023-08-04 16:34:14,457 INFO org.springframework.web.servlet.FrameworkServlet [http-nio-9090-exec-1] Completed initialization in 1 ms
2023-08-04 16:34:14,581 INFO ru.practicum.user.UserController [http-nio-9090-exec-1] Было создано: ru.practicum.user.model.User@16c04fd
2023-08-04 16:34:14,604 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-2] Response 201 CREATED
2023-08-04 16:34:14,605 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-2] Reading to [java.lang.Object]
2023-08-04 16:34:14,661 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-3] HTTP POST http://localhost:9090/users
2023-08-04 16:34:14,661 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-3] Accept=[application/json, application/*+json]
2023-08-04 16:34:14,661 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-3] Writing [UserDto(id=0, email=user@user.com, name=user)] as "application/json"
2023-08-04 16:34:14,667 WARN org.hibernate.engine.jdbc.spi.SqlExceptionHelper [http-nio-9090-exec-2] SQL Error: 23505, SQLState: 23505
2023-08-04 16:34:14,667 ERROR org.hibernate.engine.jdbc.spi.SqlExceptionHelper [http-nio-9090-exec-2] Нарушение уникального индекса или первичного ключа: "PUBLIC.UNIQ_EMAIL_INDEX_4 ON PUBLIC.USERS(EMAIL NULLS FIRST) VALUES ( /* 1 */ 'user@user.com' )"
Unique index or primary key violation: "PUBLIC.UNIQ_EMAIL_INDEX_4 ON PUBLIC.USERS(EMAIL NULLS FIRST) VALUES ( /* 1 */ 'user@user.com' )"; SQL statement:
insert into users (email, name) values (?, ?) [23505-214]
2023-08-04 16:34:14,671 INFO ru.practicum.ErrorHandler [http-nio-9090-exec-2] Server error could not execute statement; SQL [n/a]; constraint [null]; nested exception is org.hibernate.exception.ConstraintViolationException: could not execute statement
2023-08-04 16:34:14,676 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-3] Response 500 INTERNAL_SERVER_ERROR
2023-08-04 16:34:14,710 INFO ru.practicum.shareit.ErrorHandler [http-nio-8080-exec-5] Validation failed for field: email. Error message: Email can not be null
2023-08-04 16:34:14,736 INFO ru.practicum.shareit.ErrorHandler [http-nio-8080-exec-7] Validation failed for field: email. Error message: Email is wrong
2023-08-04 16:34:14,764 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-9] HTTP PATCH http://localhost:9090/users/1
2023-08-04 16:34:14,765 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-9] Accept=[application/json, application/*+json]
2023-08-04 16:34:14,765 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-9] Writing [UserDto(id=0, email=update@user.com, name=update)] as "application/json"
2023-08-04 16:34:14,786 INFO ru.practicum.user.UserServiceImpl [http-nio-9090-exec-3] Обновление: ru.practicum.user.model.User@196960a5
2023-08-04 16:34:14,787 INFO ru.practicum.user.UserServiceImpl [http-nio-9090-exec-3] Электронная почта обновлена
2023-08-04 16:34:14,787 INFO ru.practicum.user.UserServiceImpl [http-nio-9090-exec-3] Имя ползователя обновлено
2023-08-04 16:34:14,795 INFO ru.practicum.user.UserController [http-nio-9090-exec-3] Был обновлен: ru.practicum.user.model.User@196960a5
2023-08-04 16:34:14,797 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-9] Response 200 OK
2023-08-04 16:34:14,797 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-9] Reading to [java.lang.Object]
2023-08-04 16:34:14,798 INFO ru.practicum.shareit.user.UserController [http-nio-8080-exec-9] Has been updated: <200,{id=1, email=update@user.com, name=update},[Content-Type:"application/json", Transfer-Encoding:"chunked", Date:"Fri, 04 Aug 2023 12:34:14 GMT", Keep-Alive:"timeout=60", Connection:"keep-alive"]>
2023-08-04 16:34:14,825 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-10] HTTP POST http://localhost:9090/users
2023-08-04 16:34:14,825 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-10] Accept=[application/json, application/*+json]
2023-08-04 16:34:14,825 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-10] Writing [UserDto(id=0, email=user@user.com, name=user)] as "application/json"
2023-08-04 16:34:14,829 INFO ru.practicum.user.UserController [http-nio-9090-exec-4] Было создано: ru.practicum.user.model.User@4fa92d42
2023-08-04 16:34:14,830 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-10] Response 201 CREATED
2023-08-04 16:34:14,830 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-10] Reading to [java.lang.Object]
2023-08-04 16:34:14,851 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-1] HTTP PATCH http://localhost:9090/users/1
2023-08-04 16:34:14,851 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-1] Accept=[application/json, application/*+json]
2023-08-04 16:34:14,852 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-1] Writing [UserDto(id=0, email=null, name=updateName)] as "application/json"
2023-08-04 16:34:14,855 INFO ru.practicum.user.UserServiceImpl [http-nio-9090-exec-5] Обновление: ru.practicum.user.model.User@6fda4740
2023-08-04 16:34:14,855 INFO ru.practicum.user.UserServiceImpl [http-nio-9090-exec-5] Имя ползователя обновлено
2023-08-04 16:34:14,856 INFO ru.practicum.user.UserController [http-nio-9090-exec-5] Был обновлен: ru.practicum.user.model.User@6fda4740
2023-08-04 16:34:14,858 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-1] Response 200 OK
2023-08-04 16:34:14,858 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-1] Reading to [java.lang.Object]
2023-08-04 16:34:14,858 INFO ru.practicum.shareit.user.UserController [http-nio-8080-exec-1] Has been updated: <200,{id=1, email=update@user.com, name=updateName},[Content-Type:"application/json", Transfer-Encoding:"chunked", Date:"Fri, 04 Aug 2023 12:34:14 GMT", Keep-Alive:"timeout=60", Connection:"keep-alive"]>
2023-08-04 16:34:14,884 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-2] HTTP PATCH http://localhost:9090/users/1
2023-08-04 16:34:14,884 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-2] Accept=[application/json, application/*+json]
2023-08-04 16:34:14,884 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-2] Writing [UserDto(id=0, email=updateName@user.com, name=null)] as "application/json"
2023-08-04 16:34:14,888 INFO ru.practicum.user.UserServiceImpl [http-nio-9090-exec-6] Обновление: ru.practicum.user.model.User@7ffda6d0
2023-08-04 16:34:14,889 INFO ru.practicum.user.UserServiceImpl [http-nio-9090-exec-6] Электронная почта обновлена
2023-08-04 16:34:14,891 INFO ru.practicum.user.UserController [http-nio-9090-exec-6] Был обновлен: ru.practicum.user.model.User@7ffda6d0
2023-08-04 16:34:14,893 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-2] Response 200 OK
2023-08-04 16:34:14,894 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-2] Reading to [java.lang.Object]
2023-08-04 16:34:14,894 INFO ru.practicum.shareit.user.UserController [http-nio-8080-exec-2] Has been updated: <200,{id=1, email=updateName@user.com, name=updateName},[Content-Type:"application/json", Transfer-Encoding:"chunked", Date:"Fri, 04 Aug 2023 12:34:14 GMT", Keep-Alive:"timeout=60", Connection:"keep-alive"]>
2023-08-04 16:34:14,915 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-3] HTTP PATCH http://localhost:9090/users/1
2023-08-04 16:34:14,915 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-3] Accept=[application/json, application/*+json]
2023-08-04 16:34:14,916 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-3] Writing [UserDto(id=0, email=updateName@user.com, name=null)] as "application/json"
2023-08-04 16:34:14,918 INFO ru.practicum.user.UserServiceImpl [http-nio-9090-exec-7] Обновление: ru.practicum.user.model.User@530d4fe0
2023-08-04 16:34:14,919 INFO ru.practicum.user.UserController [http-nio-9090-exec-7] Был обновлен: ru.practicum.user.model.User@530d4fe0
2023-08-04 16:34:14,920 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-3] Response 200 OK
2023-08-04 16:34:14,921 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-3] Reading to [java.lang.Object]
2023-08-04 16:34:14,921 INFO ru.practicum.shareit.user.UserController [http-nio-8080-exec-3] Has been updated: <200,{id=1, email=updateName@user.com, name=updateName},[Content-Type:"application/json", Transfer-Encoding:"chunked", Date:"Fri, 04 Aug 2023 12:34:14 GMT", Keep-Alive:"timeout=60", Connection:"keep-alive"]>
2023-08-04 16:34:14,944 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-4] HTTP PATCH http://localhost:9090/users/1
2023-08-04 16:34:14,944 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-4] Accept=[application/json, application/*+json]
2023-08-04 16:34:14,944 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-4] Writing [UserDto(id=0, email=user@user.com, name=null)] as "application/json"
2023-08-04 16:34:14,947 INFO ru.practicum.user.UserServiceImpl [http-nio-9090-exec-8] Обновление: ru.practicum.user.model.User@228f49c3
2023-08-04 16:34:14,947 INFO ru.practicum.user.UserServiceImpl [http-nio-9090-exec-8] Электронная почта обновлена
2023-08-04 16:34:14,948 WARN org.hibernate.engine.jdbc.spi.SqlExceptionHelper [http-nio-9090-exec-8] SQL Error: 23505, SQLState: 23505
2023-08-04 16:34:14,949 ERROR org.hibernate.engine.jdbc.spi.SqlExceptionHelper [http-nio-9090-exec-8] Нарушение уникального индекса или первичного ключа: "PUBLIC.UNIQ_EMAIL_INDEX_4 ON PUBLIC.USERS(EMAIL NULLS FIRST) VALUES ( /* 3 */ 'user@user.com' )"
Unique index or primary key violation: "PUBLIC.UNIQ_EMAIL_INDEX_4 ON PUBLIC.USERS(EMAIL NULLS FIRST) VALUES ( /* 3 */ 'user@user.com' )"; SQL statement:
update users set email=?, name=? where id=? [23505-214]
2023-08-04 16:34:14,949 INFO org.hibernate.engine.jdbc.batch.internal.AbstractBatchImpl [http-nio-9090-exec-8] HHH000010: On release of batch it still contained JDBC statements
2023-08-04 16:34:14,950 INFO ru.practicum.ErrorHandler [http-nio-9090-exec-8] Server error could not execute statement; SQL [n/a]; constraint [null]; nested exception is org.hibernate.exception.ConstraintViolationException: could not execute statement
2023-08-04 16:34:14,951 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-4] Response 500 INTERNAL_SERVER_ERROR
2023-08-04 16:34:14,952 INFO ru.practicum.shareit.user.UserController [http-nio-8080-exec-4] Has been updated: <500 INTERNAL_SERVER_ERROR Internal Server Error,[B@e840e89,[]>
2023-08-04 16:34:14,976 INFO ru.practicum.shareit.user.UserController [http-nio-8080-exec-6] Request to get user with ID: 1
2023-08-04 16:34:14,978 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-6] HTTP GET http://localhost:9090/users/1
2023-08-04 16:34:14,978 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-6] Accept=[application/json, application/*+json]
2023-08-04 16:34:14,981 INFO ru.practicum.user.UserController [http-nio-9090-exec-9] Запрос на получение пользователя ID: 1
2023-08-04 16:34:14,982 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-9] Setting JDBC Connection [HikariProxyConnection@1140682980 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST] read-only
2023-08-04 16:34:14,983 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-9] Resetting read-only flag of JDBC Connection [HikariProxyConnection@1140682980 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST]
2023-08-04 16:34:14,985 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-6] Response 200 OK
2023-08-04 16:34:14,986 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-6] Reading to [java.lang.Object]
2023-08-04 16:34:15,010 INFO ru.practicum.shareit.user.UserController [http-nio-8080-exec-7] Request to get user with ID: 3
2023-08-04 16:34:15,010 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-7] HTTP GET http://localhost:9090/users/3
2023-08-04 16:34:15,011 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-7] Accept=[application/json, application/*+json]
2023-08-04 16:34:15,013 INFO ru.practicum.user.UserController [http-nio-9090-exec-10] Запрос на получение пользователя ID: 3
2023-08-04 16:34:15,013 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-10] Setting JDBC Connection [HikariProxyConnection@612212425 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST] read-only
2023-08-04 16:34:15,014 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-10] Resetting read-only flag of JDBC Connection [HikariProxyConnection@612212425 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST]
2023-08-04 16:34:15,016 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-7] Response 200 OK
2023-08-04 16:34:15,016 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-7] Reading to [java.lang.Object]
2023-08-04 16:34:15,038 INFO ru.practicum.shareit.user.UserController [http-nio-8080-exec-8] Request to get user with ID: 100
2023-08-04 16:34:15,039 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-8] HTTP GET http://localhost:9090/users/100
2023-08-04 16:34:15,039 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-8] Accept=[application/json, application/*+json]
2023-08-04 16:34:15,041 INFO ru.practicum.user.UserController [http-nio-9090-exec-1] Запрос на получение пользователя ID: 100
2023-08-04 16:34:15,042 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-1] Setting JDBC Connection [HikariProxyConnection@2067002240 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST] read-only
2023-08-04 16:34:15,043 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-1] Resetting read-only flag of JDBC Connection [HikariProxyConnection@2067002240 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST]
2023-08-04 16:34:15,043 INFO ru.practicum.user.UserServiceImpl [http-nio-9090-exec-1] Throw new NotFoundException
2023-08-04 16:34:15,045 INFO ru.practicum.ErrorHandler [http-nio-9090-exec-1] Not found: User with ID: 100 not found
2023-08-04 16:34:15,046 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-8] Response 404 NOT_FOUND
2023-08-04 16:34:15,070 INFO ru.practicum.shareit.user.UserController [http-nio-8080-exec-9] Request to delete with id: 3
2023-08-04 16:34:15,071 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-9] HTTP DELETE http://localhost:9090/users/3
2023-08-04 16:34:15,071 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-9] Accept=[application/json, application/*+json]
2023-08-04 16:34:15,074 INFO ru.practicum.user.UserController [http-nio-9090-exec-2] Запрос на удаление с ID: 3
2023-08-04 16:34:15,081 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-9] Response 204 NO_CONTENT
2023-08-04 16:34:15,106 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-10] HTTP POST http://localhost:9090/users
2023-08-04 16:34:15,107 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-10] Accept=[application/json, application/*+json]
2023-08-04 16:34:15,107 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-10] Writing [UserDto(id=0, email=user@user.com, name=user)] as "application/json"
2023-08-04 16:34:15,111 INFO ru.practicum.user.UserController [http-nio-9090-exec-3] Было создано: ru.practicum.user.model.User@7542a80a
2023-08-04 16:34:15,113 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-10] Response 201 CREATED
2023-08-04 16:34:15,113 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-10] Reading to [java.lang.Object]
2023-08-04 16:34:15,133 INFO ru.practicum.shareit.user.UserController [http-nio-8080-exec-1] Request on get all
2023-08-04 16:34:15,133 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-1] HTTP GET http://localhost:9090/users
2023-08-04 16:34:15,134 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-1] Accept=[application/json, application/*+json]
2023-08-04 16:34:15,135 INFO ru.practicum.user.UserController [http-nio-9090-exec-4] Запрос на получение всего
2023-08-04 16:34:15,136 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-4] Setting JDBC Connection [HikariProxyConnection@110509705 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST] read-only
2023-08-04 16:34:15,143 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-4] Resetting read-only flag of JDBC Connection [HikariProxyConnection@110509705 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST]
2023-08-04 16:34:15,147 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-1] Response 200 OK
2023-08-04 16:34:15,148 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-1] Reading to [java.lang.Object]
2023-08-04 16:34:15,209 INFO ru.practicum.shareit.item.ItemController [http-nio-8080-exec-2] Request on add ItemDto(id=0, name=Дрель, description=Простая дрель, available=true, requestId=null), user id: 1
2023-08-04 16:34:15,213 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-2] HTTP POST http://localhost:9090/items
2023-08-04 16:34:15,214 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-2] Accept=[application/json, application/*+json]
2023-08-04 16:34:15,214 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-2] Writing [ItemDto(id=0, name=Дрель, description=Простая дрель, available=true, requestId=null)] as "application/json"
2023-08-04 16:34:15,224 INFO ru.practicum.item.ItemController [http-nio-9090-exec-5] Запрос на добавление ItemDto(id=0, name=Дрель, description=Простая дрель, available=true, requestId=null), идентификатор пользователя: 1
2023-08-04 16:34:15,245 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-2] Response 200 OK
2023-08-04 16:34:15,246 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-2] Reading to [java.lang.Object]
2023-08-04 16:34:15,270 INFO ru.practicum.shareit.ErrorHandler [http-nio-8080-exec-3] Missing request header: Required request header 'X-Sharer-User-Id' for method parameter type Long is not present
2023-08-04 16:34:15,291 INFO ru.practicum.shareit.item.ItemController [http-nio-8080-exec-5] Request on add ItemDto(id=0, name=Дрель, description=Простая дрель, available=true, requestId=null), user id: 10
2023-08-04 16:34:15,292 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-5] HTTP POST http://localhost:9090/items
2023-08-04 16:34:15,292 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-5] Accept=[application/json, application/*+json]
2023-08-04 16:34:15,293 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-5] Writing [ItemDto(id=0, name=Дрель, description=Простая дрель, available=true, requestId=null)] as "application/json"
2023-08-04 16:34:15,296 INFO ru.practicum.item.ItemController [http-nio-9090-exec-6] Запрос на добавление ItemDto(id=0, name=Дрель, description=Простая дрель, available=true, requestId=null), идентификатор пользователя: 10
2023-08-04 16:34:15,297 INFO ru.practicum.ErrorHandler [http-nio-9090-exec-6] Not found: User with ID: 10 not found
2023-08-04 16:34:15,298 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-5] Response 404 NOT_FOUND
2023-08-04 16:34:15,320 INFO ru.practicum.shareit.ErrorHandler [http-nio-8080-exec-6] Validation failed for field: available. Error message: Available should be specified
2023-08-04 16:34:15,342 INFO ru.practicum.shareit.ErrorHandler [http-nio-8080-exec-8] Validation failed for field: name. Error message: Name can't blank
2023-08-04 16:34:15,362 INFO ru.practicum.shareit.ErrorHandler [http-nio-8080-exec-10] Validation failed for field: description. Error message: Description can't blank
2023-08-04 16:34:15,382 INFO ru.practicum.shareit.item.ItemController [http-nio-8080-exec-2] Request on edit item id: 1, ItemDto(id=1, name=Дрель+, description=Аккумуляторная дрель, available=false, requestId=null), user id: 1
2023-08-04 16:34:15,383 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-2] HTTP PATCH http://localhost:9090/items/1
2023-08-04 16:34:15,384 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-2] Accept=[application/json, application/*+json]
2023-08-04 16:34:15,384 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-2] Writing [ItemDto(id=1, name=Дрель+, description=Аккумуляторная дрель, available=false, requestId=null)] as "application/json"
2023-08-04 16:34:15,387 INFO ru.practicum.item.ItemController [http-nio-9090-exec-7] Запрос на редактирование идентификатора элемента: 1, ItemDto(id=1, name=Дрель+, description=Аккумуляторная дрель, available=false, requestId=null), идентификатор пользователя: 1
2023-08-04 16:34:15,394 INFO ru.practicum.item.ItemServiceImpl [http-nio-9090-exec-7] Обновление: ru.practicum.item.model.Item@762034aa
2023-08-04 16:34:15,394 INFO ru.practicum.item.ItemServiceImpl [http-nio-9090-exec-7] Название обновлено
2023-08-04 16:34:15,394 INFO ru.practicum.item.ItemServiceImpl [http-nio-9090-exec-7] Описание обновлено
2023-08-04 16:34:15,394 INFO ru.practicum.item.ItemServiceImpl [http-nio-9090-exec-7] Доступность обновлена
2023-08-04 16:34:15,398 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-2] Response 200 OK
2023-08-04 16:34:15,398 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-2] Reading to [java.lang.Object]
2023-08-04 16:34:15,424 INFO ru.practicum.shareit.ErrorHandler [http-nio-8080-exec-3] Missing request header: Required request header 'X-Sharer-User-Id' for method parameter type Long is not present
2023-08-04 16:34:15,444 INFO ru.practicum.shareit.item.ItemController [http-nio-8080-exec-5] Request on edit item id: 1, ItemDto(id=0, name=Дрель, description=Простая дрель, available=false, requestId=null), user id: 3
2023-08-04 16:34:15,445 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-5] HTTP PATCH http://localhost:9090/items/1
2023-08-04 16:34:15,445 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-5] Accept=[application/json, application/*+json]
2023-08-04 16:34:15,445 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-5] Writing [ItemDto(id=0, name=Дрель, description=Простая дрель, available=false, requestId=null)] as "application/json"
2023-08-04 16:34:15,448 INFO ru.practicum.item.ItemController [http-nio-9090-exec-8] Запрос на редактирование идентификатора элемента: 1, ItemDto(id=0, name=Дрель, description=Простая дрель, available=false, requestId=null), идентификатор пользователя: 3
2023-08-04 16:34:15,450 INFO ru.practicum.item.ItemServiceImpl [http-nio-9090-exec-8] Обновление: ru.practicum.item.model.Item@3ec57ba
2023-08-04 16:34:15,451 INFO ru.practicum.ErrorHandler [http-nio-9090-exec-8] Not found: Пользователь не является владельцем элемента
2023-08-04 16:34:15,453 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-5] Response 404 NOT_FOUND
2023-08-04 16:34:15,473 INFO ru.practicum.shareit.item.ItemController [http-nio-8080-exec-6] Request on edit item id: 1, ItemDto(id=0, name=null, description=null, available=true, requestId=null), user id: 1
2023-08-04 16:34:15,473 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-6] HTTP PATCH http://localhost:9090/items/1
2023-08-04 16:34:15,473 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-6] Accept=[application/json, application/*+json]
2023-08-04 16:34:15,473 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-6] Writing [ItemDto(id=0, name=null, description=null, available=true, requestId=null)] as "application/json"
2023-08-04 16:34:15,476 INFO ru.practicum.item.ItemController [http-nio-9090-exec-9] Запрос на редактирование идентификатора элемента: 1, ItemDto(id=0, name=null, description=null, available=true, requestId=null), идентификатор пользователя: 1
2023-08-04 16:34:15,477 INFO ru.practicum.item.ItemServiceImpl [http-nio-9090-exec-9] Обновление: ru.practicum.item.model.Item@5cf985cc
2023-08-04 16:34:15,477 INFO ru.practicum.item.ItemServiceImpl [http-nio-9090-exec-9] Доступность обновлена
2023-08-04 16:34:15,480 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-6] Response 200 OK
2023-08-04 16:34:15,480 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-6] Reading to [java.lang.Object]
2023-08-04 16:34:15,505 INFO ru.practicum.shareit.item.ItemController [http-nio-8080-exec-7] Request on edit item id: 1, ItemDto(id=0, name=null, description=Аккумуляторная дрель + аккумулятор, available=null, requestId=null), user id: 1
2023-08-04 16:34:15,506 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-7] HTTP PATCH http://localhost:9090/items/1
2023-08-04 16:34:15,506 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-7] Accept=[application/json, application/*+json]
2023-08-04 16:34:15,507 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-7] Writing [ItemDto(id=0, name=null, description=Аккумуляторная дрель + аккумулятор, available=null, requestId=null)] as "application/json"
2023-08-04 16:34:15,510 INFO ru.practicum.item.ItemController [http-nio-9090-exec-10] Запрос на редактирование идентификатора элемента: 1, ItemDto(id=0, name=null, description=Аккумуляторная дрель + аккумулятор, available=null, requestId=null), идентификатор пользователя: 1
2023-08-04 16:34:15,511 INFO ru.practicum.item.ItemServiceImpl [http-nio-9090-exec-10] Обновление: ru.practicum.item.model.Item@5b8ffb28
2023-08-04 16:34:15,512 INFO ru.practicum.item.ItemServiceImpl [http-nio-9090-exec-10] Описание обновлено
2023-08-04 16:34:15,514 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-7] Response 200 OK
2023-08-04 16:34:15,515 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-7] Reading to [java.lang.Object]
2023-08-04 16:34:15,536 INFO ru.practicum.shareit.item.ItemController [http-nio-8080-exec-8] Request on edit item id: 1, ItemDto(id=0, name=Аккумуляторная дрель, description=null, available=null, requestId=null), user id: 1
2023-08-04 16:34:15,537 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-8] HTTP PATCH http://localhost:9090/items/1
2023-08-04 16:34:15,537 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-8] Accept=[application/json, application/*+json]
2023-08-04 16:34:15,538 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-8] Writing [ItemDto(id=0, name=Аккумуляторная дрель, description=null, available=null, requestId=null)] as "application/json"
2023-08-04 16:34:15,540 INFO ru.practicum.item.ItemController [http-nio-9090-exec-1] Запрос на редактирование идентификатора элемента: 1, ItemDto(id=0, name=Аккумуляторная дрель, description=null, available=null, requestId=null), идентификатор пользователя: 1
2023-08-04 16:34:15,541 INFO ru.practicum.item.ItemServiceImpl [http-nio-9090-exec-1] Обновление: ru.practicum.item.model.Item@5523756c
2023-08-04 16:34:15,542 INFO ru.practicum.item.ItemServiceImpl [http-nio-9090-exec-1] Название обновлено
2023-08-04 16:34:15,544 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-8] Response 200 OK
2023-08-04 16:34:15,544 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-8] Reading to [java.lang.Object]
2023-08-04 16:34:15,567 INFO ru.practicum.shareit.item.ItemController [http-nio-8080-exec-9] Request from user ID: 1 on get item. ID: 1
2023-08-04 16:34:15,568 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-9] HTTP GET http://localhost:9090/items/1
2023-08-04 16:34:15,568 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-9] Accept=[application/json, application/*+json]
2023-08-04 16:34:15,570 INFO ru.practicum.item.ItemController [http-nio-9090-exec-2] Запрос от идентификатора пользователя: 1 при получении элемента. Идентификатор: 1
2023-08-04 16:34:15,571 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-2] Setting JDBC Connection [HikariProxyConnection@120469499 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST] read-only
2023-08-04 16:34:15,572 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-2] Resetting read-only flag of JDBC Connection [HikariProxyConnection@120469499 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST]
2023-08-04 16:34:15,594 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-9] Response 200 OK
2023-08-04 16:34:15,595 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-9] Reading to [java.lang.Object]
2023-08-04 16:34:15,615 INFO ru.practicum.shareit.item.ItemController [http-nio-8080-exec-10] Request from user ID: 4 on get item. ID: 1
2023-08-04 16:34:15,615 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-10] HTTP GET http://localhost:9090/items/1
2023-08-04 16:34:15,615 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-10] Accept=[application/json, application/*+json]
2023-08-04 16:34:15,617 INFO ru.practicum.item.ItemController [http-nio-9090-exec-3] Запрос от идентификатора пользователя: 4 при получении элемента. Идентификатор: 1
2023-08-04 16:34:15,618 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-3] Setting JDBC Connection [HikariProxyConnection@1783656785 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST] read-only
2023-08-04 16:34:15,619 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-3] Resetting read-only flag of JDBC Connection [HikariProxyConnection@1783656785 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST]
2023-08-04 16:34:15,622 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-10] Response 200 OK
2023-08-04 16:34:15,623 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-10] Reading to [java.lang.Object]
2023-08-04 16:34:15,643 INFO ru.practicum.shareit.item.ItemController [http-nio-8080-exec-1] Request from user ID: 4 on get item. ID: 100
2023-08-04 16:34:15,644 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-1] HTTP GET http://localhost:9090/items/100
2023-08-04 16:34:15,644 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-1] Accept=[application/json, application/*+json]
2023-08-04 16:34:15,645 INFO ru.practicum.item.ItemController [http-nio-9090-exec-4] Запрос от идентификатора пользователя: 4 при получении элемента. Идентификатор: 100
2023-08-04 16:34:15,646 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-4] Setting JDBC Connection [HikariProxyConnection@323890065 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST] read-only
2023-08-04 16:34:15,647 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-4] Resetting read-only flag of JDBC Connection [HikariProxyConnection@323890065 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST]
2023-08-04 16:34:15,647 INFO ru.practicum.ErrorHandler [http-nio-9090-exec-4] Not found: Вещь не найдена
2023-08-04 16:34:15,648 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-1] Response 404 NOT_FOUND
2023-08-04 16:34:15,667 INFO ru.practicum.shareit.item.ItemController [http-nio-8080-exec-2] Request on add ItemDto(id=0, name=Отвертка, description=Аккумуляторная отвертка, available=true, requestId=null), user id: 4
2023-08-04 16:34:15,668 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-2] HTTP POST http://localhost:9090/items
2023-08-04 16:34:15,668 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-2] Accept=[application/json, application/*+json]
2023-08-04 16:34:15,668 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-2] Writing [ItemDto(id=0, name=Отвертка, description=Аккумуляторная отвертка, available=true, requestId=null)] as "application/json"
2023-08-04 16:34:15,670 INFO ru.practicum.item.ItemController [http-nio-9090-exec-5] Запрос на добавление ItemDto(id=0, name=Отвертка, description=Аккумуляторная отвертка, available=true, requestId=null), идентификатор пользователя: 4
2023-08-04 16:34:15,673 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-2] Response 200 OK
2023-08-04 16:34:15,673 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-2] Reading to [java.lang.Object]
2023-08-04 16:34:15,696 INFO ru.practicum.shareit.item.ItemController [http-nio-8080-exec-3] Request on add ItemDto(id=0, name=Клей Момент, description=Тюбик суперклея марки Момент, available=true, requestId=null), user id: 4
2023-08-04 16:34:15,696 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-3] HTTP POST http://localhost:9090/items
2023-08-04 16:34:15,696 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-3] Accept=[application/json, application/*+json]
2023-08-04 16:34:15,697 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-3] Writing [ItemDto(id=0, name=Клей Момент, description=Тюбик суперклея марки Момент, available=true, requestId=null)] as "application/json"
2023-08-04 16:34:15,700 INFO ru.practicum.item.ItemController [http-nio-9090-exec-6] Запрос на добавление ItemDto(id=0, name=Клей Момент, description=Тюбик суперклея марки Момент, available=true, requestId=null), идентификатор пользователя: 4
2023-08-04 16:34:15,704 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-3] Response 200 OK
2023-08-04 16:34:15,705 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-3] Reading to [java.lang.Object]
2023-08-04 16:34:15,727 INFO ru.practicum.shareit.item.ItemController [http-nio-8080-exec-4] Request on get all for user id: 1
2023-08-04 16:34:15,728 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-4] HTTP GET http://localhost:9090/items?from=0&size=20
2023-08-04 16:34:15,729 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-4] Accept=[application/json, application/*+json]
2023-08-04 16:34:15,734 INFO ru.practicum.item.ItemController [http-nio-9090-exec-7] Запрос на получение всего для идентификатора пользователя: 1
2023-08-04 16:34:15,735 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-7] Setting JDBC Connection [HikariProxyConnection@25390258 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST] read-only
2023-08-04 16:34:15,736 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-7] Resetting read-only flag of JDBC Connection [HikariProxyConnection@25390258 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST]
2023-08-04 16:34:15,756 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-4] Response 200 OK
2023-08-04 16:34:15,756 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-4] Reading to [java.lang.Object]
2023-08-04 16:34:15,776 INFO ru.practicum.shareit.item.ItemController [http-nio-8080-exec-5] Request on get all for user id: 4
2023-08-04 16:34:15,777 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-5] HTTP GET http://localhost:9090/items?from=0&size=20
2023-08-04 16:34:15,777 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-5] Accept=[application/json, application/*+json]
2023-08-04 16:34:15,778 INFO ru.practicum.item.ItemController [http-nio-9090-exec-8] Запрос на получение всего для идентификатора пользователя: 4
2023-08-04 16:34:15,779 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-8] Setting JDBC Connection [HikariProxyConnection@384983374 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST] read-only
2023-08-04 16:34:15,780 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-8] Resetting read-only flag of JDBC Connection [HikariProxyConnection@384983374 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST]
2023-08-04 16:34:15,789 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-5] Response 200 OK
2023-08-04 16:34:15,789 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-5] Reading to [java.lang.Object]
2023-08-04 16:34:15,813 INFO ru.practicum.shareit.item.ItemController [http-nio-8080-exec-6] Request on search text: аккУМУляторная
2023-08-04 16:34:15,814 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-6] HTTP GET http://localhost:9090/items/search?text=%D0%B0%D0%BA%D0%BA%D1%83%D0%BC%D1%83%D0%BB%D1%8F%D1%82%D0%BE%D1%80%D0%BD%D0%B0%D1%8F&from=0&size=20
2023-08-04 16:34:15,814 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-6] Accept=[application/json, application/*+json]
2023-08-04 16:34:15,821 INFO ru.practicum.item.ItemController [http-nio-9090-exec-9] Запрос по поисковому тексту: аккумуляторная
2023-08-04 16:34:15,827 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-6] Response 200 OK
2023-08-04 16:34:15,827 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-6] Reading to [java.lang.Object]
2023-08-04 16:34:15,857 INFO ru.practicum.shareit.item.ItemController [http-nio-8080-exec-7] Request on edit item id: 2, ItemDto(id=0, name=null, description=null, available=false, requestId=null), user id: 4
2023-08-04 16:34:15,858 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-7] HTTP PATCH http://localhost:9090/items/2
2023-08-04 16:34:15,858 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-7] Accept=[application/json, application/*+json]
2023-08-04 16:34:15,858 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-7] Writing [ItemDto(id=0, name=null, description=null, available=false, requestId=null)] as "application/json"
2023-08-04 16:34:15,861 INFO ru.practicum.item.ItemController [http-nio-9090-exec-10] Запрос на редактирование идентификатора элемента: 2, ItemDto(id=0, name=null, description=null, available=false, requestId=null), идентификатор пользователя: 4
2023-08-04 16:34:15,862 INFO ru.practicum.item.ItemServiceImpl [http-nio-9090-exec-10] Обновление: ru.practicum.item.model.Item@fe67e4b
2023-08-04 16:34:15,863 INFO ru.practicum.item.ItemServiceImpl [http-nio-9090-exec-10] Доступность обновлена
2023-08-04 16:34:15,866 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-7] Response 200 OK
2023-08-04 16:34:15,866 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-7] Reading to [java.lang.Object]
2023-08-04 16:34:15,889 INFO ru.practicum.shareit.item.ItemController [http-nio-8080-exec-8] Request on search text: дРелЬ
2023-08-04 16:34:15,890 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-8] HTTP GET http://localhost:9090/items/search?text=%D0%B4%D1%80%D0%B5%D0%BB%D1%8C&from=0&size=20
2023-08-04 16:34:15,890 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-8] Accept=[application/json, application/*+json]
2023-08-04 16:34:15,892 INFO ru.practicum.item.ItemController [http-nio-9090-exec-1] Запрос по поисковому тексту: дрель
2023-08-04 16:34:15,895 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-8] Response 200 OK
2023-08-04 16:34:15,895 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-8] Reading to [java.lang.Object]
2023-08-04 16:34:15,921 INFO ru.practicum.shareit.item.ItemController [http-nio-8080-exec-9] Request on search text: аккУМУляторная
2023-08-04 16:34:15,922 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-9] HTTP GET http://localhost:9090/items/search?text=%D0%B0%D0%BA%D0%BA%D1%83%D0%BC%D1%83%D0%BB%D1%8F%D1%82%D0%BE%D1%80%D0%BD%D0%B0%D1%8F&from=0&size=20
2023-08-04 16:34:15,923 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-9] Accept=[application/json, application/*+json]
2023-08-04 16:34:15,925 INFO ru.practicum.item.ItemController [http-nio-9090-exec-2] Запрос по поисковому тексту: аккумуляторная
2023-08-04 16:34:15,928 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-9] Response 200 OK
2023-08-04 16:34:15,928 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-9] Reading to [java.lang.Object]
2023-08-04 16:34:15,951 INFO ru.practicum.shareit.item.ItemController [http-nio-8080-exec-10] Request on edit item id: 2, ItemDto(id=0, name=null, description=null, available=true, requestId=null), user id: 4
2023-08-04 16:34:15,952 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-10] HTTP PATCH http://localhost:9090/items/2
2023-08-04 16:34:15,952 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-10] Accept=[application/json, application/*+json]
2023-08-04 16:34:15,952 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-10] Writing [ItemDto(id=0, name=null, description=null, available=true, requestId=null)] as "application/json"
2023-08-04 16:34:15,955 INFO ru.practicum.item.ItemController [http-nio-9090-exec-3] Запрос на редактирование идентификатора элемента: 2, ItemDto(id=0, name=null, description=null, available=true, requestId=null), идентификатор пользователя: 4
2023-08-04 16:34:15,956 INFO ru.practicum.item.ItemServiceImpl [http-nio-9090-exec-3] Обновление: ru.practicum.item.model.Item@4517b99a
2023-08-04 16:34:15,957 INFO ru.practicum.item.ItemServiceImpl [http-nio-9090-exec-3] Доступность обновлена
2023-08-04 16:34:15,960 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-10] Response 200 OK
2023-08-04 16:34:15,961 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-10] Reading to [java.lang.Object]
2023-08-04 16:34:15,982 INFO ru.practicum.shareit.item.ItemController [http-nio-8080-exec-1] Request on search text: оТверТ
2023-08-04 16:34:15,982 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-1] HTTP GET http://localhost:9090/items/search?text=%D0%BE%D1%82%D0%B2%D0%B5%D1%80%D1%82&from=0&size=20
2023-08-04 16:34:15,983 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-1] Accept=[application/json, application/*+json]
2023-08-04 16:34:15,985 INFO ru.practicum.item.ItemController [http-nio-9090-exec-4] Запрос по поисковому тексту: отверт
2023-08-04 16:34:15,989 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-1] Response 200 OK
2023-08-04 16:34:15,990 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-1] Reading to [java.lang.Object]
2023-08-04 16:34:16,011 INFO ru.practicum.shareit.item.ItemController [http-nio-8080-exec-2] Request on search text: 
2023-08-04 16:34:16,035 INFO ru.practicum.shareit.item.ItemController [http-nio-8080-exec-3] Request on edit item id: 2, ItemDto(id=0, name=null, description=null, available=false, requestId=null), user id: 4
2023-08-04 16:34:16,036 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-3] HTTP PATCH http://localhost:9090/items/2
2023-08-04 16:34:16,037 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-3] Accept=[application/json, application/*+json]
2023-08-04 16:34:16,037 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-3] Writing [ItemDto(id=0, name=null, description=null, available=false, requestId=null)] as "application/json"
2023-08-04 16:34:16,040 INFO ru.practicum.item.ItemController [http-nio-9090-exec-5] Запрос на редактирование идентификатора элемента: 2, ItemDto(id=0, name=null, description=null, available=false, requestId=null), идентификатор пользователя: 4
2023-08-04 16:34:16,042 INFO ru.practicum.item.ItemServiceImpl [http-nio-9090-exec-5] Обновление: ru.practicum.item.model.Item@32502d7e
2023-08-04 16:34:16,042 INFO ru.practicum.item.ItemServiceImpl [http-nio-9090-exec-5] Доступность обновлена
2023-08-04 16:34:16,045 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-3] Response 200 OK
2023-08-04 16:34:16,045 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-3] Reading to [java.lang.Object]
2023-08-04 16:34:16,116 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-4] HTTP POST http://localhost:9090/bookings
2023-08-04 16:34:16,117 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-4] Accept=[application/json, application/*+json]
2023-08-04 16:34:16,122 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-4] Writing [BookingDto(id=0, itemId=2, start=2023-08-05T16:34:16, end=2023-08-06T16:34:16, status=null, booker=null)] as "application/json"
2023-08-04 16:34:16,143 INFO ru.practicum.ErrorHandler [http-nio-9090-exec-6] Not available: Элемент с идентификатором: 2 недоступен
2023-08-04 16:34:16,144 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-4] Response 400 BAD_REQUEST
2023-08-04 16:34:16,169 INFO ru.practicum.shareit.item.ItemController [http-nio-8080-exec-6] Request on edit item id: 2, ItemDto(id=0, name=null, description=null, available=true, requestId=null), user id: 4
2023-08-04 16:34:16,170 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-6] HTTP PATCH http://localhost:9090/items/2
2023-08-04 16:34:16,170 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-6] Accept=[application/json, application/*+json]
2023-08-04 16:34:16,170 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-6] Writing [ItemDto(id=0, name=null, description=null, available=true, requestId=null)] as "application/json"
2023-08-04 16:34:16,173 INFO ru.practicum.item.ItemController [http-nio-9090-exec-7] Запрос на редактирование идентификатора элемента: 2, ItemDto(id=0, name=null, description=null, available=true, requestId=null), идентификатор пользователя: 4
2023-08-04 16:34:16,175 INFO ru.practicum.item.ItemServiceImpl [http-nio-9090-exec-7] Обновление: ru.practicum.item.model.Item@762d0bdf
2023-08-04 16:34:16,175 INFO ru.practicum.item.ItemServiceImpl [http-nio-9090-exec-7] Доступность обновлена
2023-08-04 16:34:16,178 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-6] Response 200 OK
2023-08-04 16:34:16,178 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-6] Reading to [java.lang.Object]
2023-08-04 16:34:16,203 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-7] HTTP POST http://localhost:9090/bookings
2023-08-04 16:34:16,203 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-7] Accept=[application/json, application/*+json]
2023-08-04 16:34:16,203 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-7] Writing [BookingDto(id=0, itemId=2, start=2023-08-05T16:34:16, end=2023-08-06T16:34:16, status=null, booker=null)] as "application/json"
2023-08-04 16:34:16,209 INFO ru.practicum.ErrorHandler [http-nio-9090-exec-8] Not found: User with ID: 100 not found
2023-08-04 16:34:16,210 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-7] Response 404 NOT_FOUND
2023-08-04 16:34:16,235 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-8] HTTP POST http://localhost:9090/bookings
2023-08-04 16:34:16,235 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-8] Accept=[application/json, application/*+json]
2023-08-04 16:34:16,235 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-8] Writing [BookingDto(id=0, itemId=200, start=2023-08-05T16:34:16, end=2023-08-06T16:34:16, status=null, booker=null)] as "application/json"
2023-08-04 16:34:16,240 INFO ru.practicum.ErrorHandler [http-nio-9090-exec-9] Not found: Элемент с идентификатором:200 не найден
2023-08-04 16:34:16,241 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-8] Response 404 NOT_FOUND
2023-08-04 16:34:16,280 INFO ru.practicum.shareit.ErrorHandler [http-nio-8080-exec-9] Validation failed for field: end. Error message: должно содержать дату, которая еще не наступила
2023-08-04 16:34:16,280 INFO ru.practicum.shareit.ErrorHandler [http-nio-8080-exec-9] Validation failed for field: validDateOrder. Error message: End date must be after start date and dates cannot be equal
2023-08-04 16:34:16,307 INFO ru.practicum.shareit.ErrorHandler [http-nio-8080-exec-1] Validation failed for field: validDateOrder. Error message: End date must be after start date and dates cannot be equal
2023-08-04 16:34:16,334 INFO ru.practicum.shareit.ErrorHandler [http-nio-8080-exec-3] Validation failed for field: validDateOrder. Error message: End date must be after start date and dates cannot be equal
2023-08-04 16:34:16,359 INFO ru.practicum.shareit.ErrorHandler [http-nio-8080-exec-5] Validation failed for field: start. Error message: не должно равняться null
2023-08-04 16:34:16,359 INFO ru.practicum.shareit.ErrorHandler [http-nio-8080-exec-5] Validation failed for field: validDateOrder. Error message: End date must be after start date and dates cannot be equal
2023-08-04 16:34:16,383 INFO ru.practicum.shareit.ErrorHandler [http-nio-8080-exec-7] Validation failed for field: validDateOrder. Error message: End date must be after start date and dates cannot be equal
2023-08-04 16:34:16,383 INFO ru.practicum.shareit.ErrorHandler [http-nio-8080-exec-7] Validation failed for field: end. Error message: не должно равняться null
2023-08-04 16:34:16,411 INFO ru.practicum.shareit.ErrorHandler [http-nio-8080-exec-9] Validation failed for field: start. Error message: должно содержать сегодняшнее число или дату, которая еще не наступила
2023-08-04 16:34:16,433 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-1] HTTP POST http://localhost:9090/bookings
2023-08-04 16:34:16,433 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-1] Accept=[application/json, application/*+json]
2023-08-04 16:34:16,433 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-1] Writing [BookingDto(id=0, itemId=2, start=2023-08-04T16:34:19, end=2023-08-04T16:34:20, status=null, booker=null)] as "application/json"
2023-08-04 16:34:16,447 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-1] Response 200 OK
2023-08-04 16:34:16,448 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-1] Reading to [java.lang.Object]
2023-08-04 16:34:16,472 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-2] HTTP PATCH http://localhost:9090/bookings/1?approved=true
2023-08-04 16:34:16,472 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-2] Accept=[application/json, application/*+json]
2023-08-04 16:34:16,480 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-2] Response 200 OK
2023-08-04 16:34:16,480 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-2] Reading to [java.lang.Object]
2023-08-04 16:34:16,504 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-3] HTTP POST http://localhost:9090/bookings
2023-08-04 16:34:16,505 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-3] Accept=[application/json, application/*+json]
2023-08-04 16:34:16,505 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-3] Writing [BookingDto(id=0, itemId=2, start=2023-08-05T16:34:16, end=2023-08-06T16:34:16, status=null, booker=null)] as "application/json"
2023-08-04 16:34:16,510 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-3] Response 200 OK
2023-08-04 16:34:16,511 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-3] Reading to [java.lang.Object]
2023-08-04 16:34:16,534 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-4] HTTP GET http://localhost:9090/bookings/2
2023-08-04 16:34:16,534 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-4] Accept=[application/json, application/*+json]
2023-08-04 16:34:16,536 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-3] Setting JDBC Connection [HikariProxyConnection@954612659 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST] read-only
2023-08-04 16:34:16,538 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-3] Resetting read-only flag of JDBC Connection [HikariProxyConnection@954612659 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST]
2023-08-04 16:34:16,538 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-3] Setting JDBC Connection [HikariProxyConnection@954612659 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST] read-only
2023-08-04 16:34:16,540 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-3] Resetting read-only flag of JDBC Connection [HikariProxyConnection@954612659 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST]
2023-08-04 16:34:16,543 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-4] Response 200 OK
2023-08-04 16:34:16,543 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-4] Reading to [java.lang.Object]
2023-08-04 16:34:16,568 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-5] HTTP GET http://localhost:9090/bookings/2
2023-08-04 16:34:16,569 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-5] Accept=[application/json, application/*+json]
2023-08-04 16:34:16,571 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-4] Setting JDBC Connection [HikariProxyConnection@20647698 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST] read-only
2023-08-04 16:34:16,572 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-4] Resetting read-only flag of JDBC Connection [HikariProxyConnection@20647698 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST]
2023-08-04 16:34:16,573 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-4] Setting JDBC Connection [HikariProxyConnection@20647698 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST] read-only
2023-08-04 16:34:16,574 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-4] Resetting read-only flag of JDBC Connection [HikariProxyConnection@20647698 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST]
2023-08-04 16:34:16,577 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-5] Response 200 OK
2023-08-04 16:34:16,577 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-5] Reading to [java.lang.Object]
2023-08-04 16:34:16,596 INFO ru.practicum.shareit.booking.BookingController [http-nio-8080-exec-6] Get booking with state ALL, userId=100, from=0, size=20
2023-08-04 16:34:16,596 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-6] HTTP GET http://localhost:9090/bookings?state=ALL&from=0&size=20
2023-08-04 16:34:16,597 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-6] Accept=[application/json, application/*+json]
2023-08-04 16:34:16,600 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-5] Setting JDBC Connection [HikariProxyConnection@1678472984 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST] read-only
2023-08-04 16:34:16,600 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-5] Resetting read-only flag of JDBC Connection [HikariProxyConnection@1678472984 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST]
2023-08-04 16:34:16,601 INFO ru.practicum.ErrorHandler [http-nio-9090-exec-5] Not found: User with ID: 100 not found
2023-08-04 16:34:16,602 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-6] Response 404 NOT_FOUND
2023-08-04 16:34:16,623 INFO ru.practicum.shareit.booking.BookingController [http-nio-8080-exec-7] Get booking with state ALL, userId=100, from=0, size=20
2023-08-04 16:34:16,624 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-7] HTTP GET http://localhost:9090/bookings/owner?state=ALL&from=0&size=20
2023-08-04 16:34:16,624 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-7] Accept=[application/json, application/*+json]
2023-08-04 16:34:16,627 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-6] Setting JDBC Connection [HikariProxyConnection@1591701498 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST] read-only
2023-08-04 16:34:16,628 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-6] Resetting read-only flag of JDBC Connection [HikariProxyConnection@1591701498 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST]
2023-08-04 16:34:16,629 INFO ru.practicum.ErrorHandler [http-nio-9090-exec-6] Not found: User with ID: 100 not found
2023-08-04 16:34:16,630 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-7] Response 404 NOT_FOUND
2023-08-04 16:34:16,649 INFO ru.practicum.shareit.booking.BookingController [http-nio-8080-exec-8] Get booking with state ALL, userId=1, from=0, size=20
2023-08-04 16:34:16,649 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-8] HTTP GET http://localhost:9090/bookings?state=ALL&from=0&size=20
2023-08-04 16:34:16,650 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-8] Accept=[application/json, application/*+json]
2023-08-04 16:34:16,651 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-7] Setting JDBC Connection [HikariProxyConnection@824699241 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST] read-only
2023-08-04 16:34:16,652 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-7] Resetting read-only flag of JDBC Connection [HikariProxyConnection@824699241 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST]
2023-08-04 16:34:16,656 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-8] Response 200 OK
2023-08-04 16:34:16,656 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-8] Reading to [java.lang.Object]
2023-08-04 16:34:16,679 INFO ru.practicum.shareit.booking.BookingController [http-nio-8080-exec-9] Get booking with state ALL, userId=1, from=0, size=20
2023-08-04 16:34:16,679 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-9] HTTP GET http://localhost:9090/bookings?state=ALL&from=0&size=20
2023-08-04 16:34:16,679 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-9] Accept=[application/json, application/*+json]
2023-08-04 16:34:16,681 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-8] Setting JDBC Connection [HikariProxyConnection@1535861541 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST] read-only
2023-08-04 16:34:16,682 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-8] Resetting read-only flag of JDBC Connection [HikariProxyConnection@1535861541 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST]
2023-08-04 16:34:16,684 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-9] Response 200 OK
2023-08-04 16:34:16,685 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-9] Reading to [java.lang.Object]
2023-08-04 16:34:16,711 INFO ru.practicum.shareit.booking.BookingController [http-nio-8080-exec-10] Get booking with state FUTURE, userId=1, from=0, size=20
2023-08-04 16:34:16,711 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-10] HTTP GET http://localhost:9090/bookings?state=FUTURE&from=0&size=20
2023-08-04 16:34:16,712 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-10] Accept=[application/json, application/*+json]
2023-08-04 16:34:16,714 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-9] Setting JDBC Connection [HikariProxyConnection@841402068 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST] read-only
2023-08-04 16:34:16,715 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-9] Resetting read-only flag of JDBC Connection [HikariProxyConnection@841402068 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST]
2023-08-04 16:34:16,718 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-10] Response 200 OK
2023-08-04 16:34:16,718 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-10] Reading to [java.lang.Object]
2023-08-04 16:34:16,744 INFO ru.practicum.shareit.ErrorHandler [http-nio-8080-exec-1] Bad booking state: Unknown state: UNSUPPORTED_STATUS
2023-08-04 16:34:16,763 INFO ru.practicum.shareit.booking.BookingController [http-nio-8080-exec-3] Get booking with state ALL, userId=4, from=0, size=20
2023-08-04 16:34:16,763 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-3] HTTP GET http://localhost:9090/bookings/owner?state=ALL&from=0&size=20
2023-08-04 16:34:16,764 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-3] Accept=[application/json, application/*+json]
2023-08-04 16:34:16,765 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-10] Setting JDBC Connection [HikariProxyConnection@22920730 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST] read-only
2023-08-04 16:34:16,766 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-10] Resetting read-only flag of JDBC Connection [HikariProxyConnection@22920730 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST]
2023-08-04 16:34:16,770 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-3] Response 200 OK
2023-08-04 16:34:16,770 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-3] Reading to [java.lang.Object]
2023-08-04 16:34:16,795 INFO ru.practicum.shareit.booking.BookingController [http-nio-8080-exec-4] Get booking with state ALL, userId=4, from=0, size=20
2023-08-04 16:34:16,795 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-4] HTTP GET http://localhost:9090/bookings/owner?state=ALL&from=0&size=20
2023-08-04 16:34:16,796 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-4] Accept=[application/json, application/*+json]
2023-08-04 16:34:16,797 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-1] Setting JDBC Connection [HikariProxyConnection@229374745 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST] read-only
2023-08-04 16:34:16,798 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-1] Resetting read-only flag of JDBC Connection [HikariProxyConnection@229374745 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST]
2023-08-04 16:34:16,800 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-4] Response 200 OK
2023-08-04 16:34:16,801 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-4] Reading to [java.lang.Object]
2023-08-04 16:34:16,825 INFO ru.practicum.shareit.booking.BookingController [http-nio-8080-exec-5] Get booking with state FUTURE, userId=4, from=0, size=20
2023-08-04 16:34:16,825 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-5] HTTP GET http://localhost:9090/bookings/owner?state=FUTURE&from=0&size=20
2023-08-04 16:34:16,826 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-5] Accept=[application/json, application/*+json]
2023-08-04 16:34:16,827 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-2] Setting JDBC Connection [HikariProxyConnection@1405462613 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST] read-only
2023-08-04 16:34:16,828 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-2] Resetting read-only flag of JDBC Connection [HikariProxyConnection@1405462613 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST]
2023-08-04 16:34:16,832 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-5] Response 200 OK
2023-08-04 16:34:16,832 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-5] Reading to [java.lang.Object]
2023-08-04 16:34:16,858 INFO ru.practicum.shareit.ErrorHandler [http-nio-8080-exec-6] Bad booking state: Unknown state: UNSUPPORTED_STATUS
2023-08-04 16:34:16,878 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-8] HTTP GET http://localhost:9090/bookings/1000
2023-08-04 16:34:16,878 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-8] Accept=[application/json, application/*+json]
2023-08-04 16:34:16,881 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-3] Setting JDBC Connection [HikariProxyConnection@1525629870 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST] read-only
2023-08-04 16:34:16,882 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-3] Resetting read-only flag of JDBC Connection [HikariProxyConnection@1525629870 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST]
2023-08-04 16:34:16,883 INFO ru.practicum.ErrorHandler [http-nio-9090-exec-3] Not found: Бронирование: 1 000 не найдено
2023-08-04 16:34:16,884 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-8] Response 404 NOT_FOUND
2023-08-04 16:34:16,903 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-9] HTTP POST http://localhost:9090/users
2023-08-04 16:34:16,903 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-9] Accept=[application/json, application/*+json]
2023-08-04 16:34:16,904 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-9] Writing [UserDto(id=0, email=other@other.com, name=other)] as "application/json"
2023-08-04 16:34:16,907 INFO ru.practicum.user.UserController [http-nio-9090-exec-4] Было создано: ru.practicum.user.model.User@b96f57a
2023-08-04 16:34:16,908 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-9] Response 201 CREATED
2023-08-04 16:34:16,908 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-9] Reading to [java.lang.Object]
2023-08-04 16:34:16,928 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-10] HTTP GET http://localhost:9090/bookings/1
2023-08-04 16:34:16,928 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-10] Accept=[application/json, application/*+json]
2023-08-04 16:34:16,929 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-5] Setting JDBC Connection [HikariProxyConnection@864995644 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST] read-only
2023-08-04 16:34:16,931 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-5] Resetting read-only flag of JDBC Connection [HikariProxyConnection@864995644 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST]
2023-08-04 16:34:16,931 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-5] Setting JDBC Connection [HikariProxyConnection@864995644 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST] read-only
2023-08-04 16:34:16,931 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-5] Resetting read-only flag of JDBC Connection [HikariProxyConnection@864995644 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST]
2023-08-04 16:34:16,932 INFO ru.practicum.ErrorHandler [http-nio-9090-exec-5] Not found: User with id: 5 do not have available
2023-08-04 16:34:16,933 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-10] Response 404 NOT_FOUND
2023-08-04 16:34:16,952 INFO ru.practicum.shareit.ErrorHandler [http-nio-8080-exec-1] Server error Required request parameter 'approved' for method parameter type Boolean is not present
2023-08-04 16:34:16,973 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-3] HTTP PATCH http://localhost:9090/bookings/2?approved=true
2023-08-04 16:34:16,974 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-3] Accept=[application/json, application/*+json]
2023-08-04 16:34:16,977 INFO ru.practicum.ErrorHandler [http-nio-9090-exec-6] Not found: User with id: 1 do not have available
2023-08-04 16:34:16,978 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-3] Response 404 NOT_FOUND
2023-08-04 16:34:16,997 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-4] HTTP PATCH http://localhost:9090/bookings/2?approved=true
2023-08-04 16:34:16,997 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-4] Accept=[application/json, application/*+json]
2023-08-04 16:34:17,004 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-4] Response 200 OK
2023-08-04 16:34:17,004 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-4] Reading to [java.lang.Object]
2023-08-04 16:34:17,026 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-5] HTTP PATCH http://localhost:9090/bookings/2?approved=true
2023-08-04 16:34:17,026 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-5] Accept=[application/json, application/*+json]
2023-08-04 16:34:17,031 INFO ru.practicum.ErrorHandler [http-nio-9090-exec-8] Not available: Рассмотрение
2023-08-04 16:34:17,032 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-5] Response 400 BAD_REQUEST
2023-08-04 16:34:17,054 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-7] HTTP POST http://localhost:9090/users
2023-08-04 16:34:17,054 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-7] Accept=[application/json, application/*+json]
2023-08-04 16:34:17,055 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-7] Writing [UserDto(id=0, email=practicum@yandex.ru, name=practicum)] as "application/json"
2023-08-04 16:34:17,058 INFO ru.practicum.user.UserController [http-nio-9090-exec-9] Было создано: ru.practicum.user.model.User@7264605e
2023-08-04 16:34:17,059 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-7] Response 201 CREATED
2023-08-04 16:34:17,059 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-7] Reading to [java.lang.Object]
2023-08-04 16:34:17,082 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-8] HTTP POST http://localhost:9090/bookings
2023-08-04 16:34:17,083 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-8] Accept=[application/json, application/*+json]
2023-08-04 16:34:17,083 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-8] Writing [BookingDto(id=0, itemId=1, start=2023-08-06T16:34:17, end=2023-08-07T16:34:17, status=null, booker=null)] as "application/json"
2023-08-04 16:34:17,087 INFO ru.practicum.ErrorHandler [http-nio-9090-exec-10] Not found: Ты владелец
2023-08-04 16:34:17,088 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-8] Response 404 NOT_FOUND
2023-08-04 16:34:17,106 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-9] HTTP POST http://localhost:9090/bookings
2023-08-04 16:34:17,106 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-9] Accept=[application/json, application/*+json]
2023-08-04 16:34:17,107 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-9] Writing [BookingDto(id=0, itemId=1, start=2023-08-05T16:34:17, end=2023-08-05T17:34:17, status=null, booker=null)] as "application/json"
2023-08-04 16:34:17,113 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-9] Response 200 OK
2023-08-04 16:34:17,113 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-9] Reading to [java.lang.Object]
2023-08-04 16:34:17,133 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-10] HTTP PATCH http://localhost:9090/bookings/3?approved=false
2023-08-04 16:34:17,133 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-10] Accept=[application/json, application/*+json]
2023-08-04 16:34:17,138 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-10] Response 200 OK
2023-08-04 16:34:17,139 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-10] Reading to [java.lang.Object]
2023-08-04 16:34:17,162 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-1] HTTP POST http://localhost:9090/bookings
2023-08-04 16:34:17,162 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-1] Accept=[application/json, application/*+json]
2023-08-04 16:34:17,163 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-1] Writing [BookingDto(id=0, itemId=2, start=2023-08-04T17:34:17, end=2023-08-04T18:34:17, status=null, booker=null)] as "application/json"
2023-08-04 16:34:17,168 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-1] Response 200 OK
2023-08-04 16:34:17,168 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-1] Reading to [java.lang.Object]
2023-08-04 16:34:17,193 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-2] HTTP PATCH http://localhost:9090/bookings/4?approved=true
2023-08-04 16:34:17,194 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-2] Accept=[application/json, application/*+json]
2023-08-04 16:34:17,200 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-2] Response 200 OK
2023-08-04 16:34:17,200 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-2] Reading to [java.lang.Object]
2023-08-04 16:34:21,225 INFO ru.practicum.shareit.item.ItemController [http-nio-8080-exec-3] Request from user ID: 4 on get item. ID: 2
2023-08-04 16:34:21,226 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-3] HTTP GET http://localhost:9090/items/2
2023-08-04 16:34:21,226 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-3] Accept=[application/json, application/*+json]
2023-08-04 16:34:21,231 INFO ru.practicum.item.ItemController [http-nio-9090-exec-5] Запрос от идентификатора пользователя: 4 при получении элемента. Идентификатор: 2
2023-08-04 16:34:21,232 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-5] Setting JDBC Connection [HikariProxyConnection@732294113 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST] read-only
2023-08-04 16:34:21,234 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-5] Resetting read-only flag of JDBC Connection [HikariProxyConnection@732294113 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST]
2023-08-04 16:34:21,244 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-3] Response 200 OK
2023-08-04 16:34:21,244 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-3] Reading to [java.lang.Object]
2023-08-04 16:34:21,266 INFO ru.practicum.shareit.item.ItemController [http-nio-8080-exec-4] Request from user ID: 1 on get item. ID: 2
2023-08-04 16:34:21,267 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-4] HTTP GET http://localhost:9090/items/2
2023-08-04 16:34:21,267 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-4] Accept=[application/json, application/*+json]
2023-08-04 16:34:21,269 INFO ru.practicum.item.ItemController [http-nio-9090-exec-6] Запрос от идентификатора пользователя: 1 при получении элемента. Идентификатор: 2
2023-08-04 16:34:21,269 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-6] Setting JDBC Connection [HikariProxyConnection@189691687 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST] read-only
2023-08-04 16:34:21,270 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-6] Resetting read-only flag of JDBC Connection [HikariProxyConnection@189691687 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST]
2023-08-04 16:34:21,272 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-4] Response 200 OK
2023-08-04 16:34:21,272 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-4] Reading to [java.lang.Object]
2023-08-04 16:34:21,291 INFO ru.practicum.shareit.item.ItemController [http-nio-8080-exec-5] Request from user ID: 5 on get item. ID: 2
2023-08-04 16:34:21,291 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-5] HTTP GET http://localhost:9090/items/2
2023-08-04 16:34:21,291 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-5] Accept=[application/json, application/*+json]
2023-08-04 16:34:21,293 INFO ru.practicum.item.ItemController [http-nio-9090-exec-7] Запрос от идентификатора пользователя: 5 при получении элемента. Идентификатор: 2
2023-08-04 16:34:21,293 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-7] Setting JDBC Connection [HikariProxyConnection@1028553518 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST] read-only
2023-08-04 16:34:21,294 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-7] Resetting read-only flag of JDBC Connection [HikariProxyConnection@1028553518 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST]
2023-08-04 16:34:21,295 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-5] Response 200 OK
2023-08-04 16:34:21,295 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-5] Reading to [java.lang.Object]
2023-08-04 16:34:21,318 INFO ru.practicum.shareit.item.ItemController [http-nio-8080-exec-6] Request on get all for user id: 4
2023-08-04 16:34:21,318 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-6] HTTP GET http://localhost:9090/items?from=0&size=20
2023-08-04 16:34:21,318 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-6] Accept=[application/json, application/*+json]
2023-08-04 16:34:21,320 INFO ru.practicum.item.ItemController [http-nio-9090-exec-8] Запрос на получение всего для идентификатора пользователя: 4
2023-08-04 16:34:21,320 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-8] Setting JDBC Connection [HikariProxyConnection@212552091 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST] read-only
2023-08-04 16:34:21,321 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-8] Resetting read-only flag of JDBC Connection [HikariProxyConnection@212552091 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST]
2023-08-04 16:34:21,328 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-6] Response 200 OK
2023-08-04 16:34:21,328 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-6] Reading to [java.lang.Object]
2023-08-04 16:34:21,360 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-7] HTTP POST http://localhost:9090/bookings
2023-08-04 16:34:21,360 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-7] Accept=[application/json, application/*+json]
2023-08-04 16:34:21,361 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-7] Writing [BookingDto(id=0, itemId=3, start=2023-08-04T16:34:24, end=2023-08-05T16:34:21, status=null, booker=null)] as "application/json"
2023-08-04 16:34:21,367 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-7] Response 200 OK
2023-08-04 16:34:21,367 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-7] Reading to [java.lang.Object]
2023-08-04 16:34:21,389 INFO ru.practicum.shareit.booking.BookingController [http-nio-8080-exec-8] Get booking with state WAITING, userId=1, from=0, size=20
2023-08-04 16:34:21,390 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-8] HTTP GET http://localhost:9090/bookings?state=WAITING&from=0&size=20
2023-08-04 16:34:21,390 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-8] Accept=[application/json, application/*+json]
2023-08-04 16:34:21,392 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-10] Setting JDBC Connection [HikariProxyConnection@801165881 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST] read-only
2023-08-04 16:34:21,393 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-10] Resetting read-only flag of JDBC Connection [HikariProxyConnection@801165881 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST]
2023-08-04 16:34:21,396 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-8] Response 200 OK
2023-08-04 16:34:21,396 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-8] Reading to [java.lang.Object]
2023-08-04 16:34:21,420 INFO ru.practicum.shareit.booking.BookingController [http-nio-8080-exec-9] Get booking with state WAITING, userId=4, from=0, size=20
2023-08-04 16:34:21,420 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-9] HTTP GET http://localhost:9090/bookings/owner?state=WAITING&from=0&size=20
2023-08-04 16:34:21,420 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-9] Accept=[application/json, application/*+json]
2023-08-04 16:34:21,422 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-1] Setting JDBC Connection [HikariProxyConnection@679776730 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST] read-only
2023-08-04 16:34:21,423 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-1] Resetting read-only flag of JDBC Connection [HikariProxyConnection@679776730 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST]
2023-08-04 16:34:21,426 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-9] Response 200 OK
2023-08-04 16:34:21,426 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-9] Reading to [java.lang.Object]
2023-08-04 16:34:21,451 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-10] HTTP POST http://localhost:9090/bookings
2023-08-04 16:34:21,452 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-10] Accept=[application/json, application/*+json]
2023-08-04 16:34:21,452 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-10] Writing [BookingDto(id=0, itemId=2, start=2023-08-04T16:34:24, end=2023-08-04T16:34:25, status=null, booker=null)] as "application/json"
2023-08-04 16:34:21,457 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-10] Response 200 OK
2023-08-04 16:34:21,458 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-10] Reading to [java.lang.Object]
2023-08-04 16:34:21,478 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-1] HTTP PATCH http://localhost:9090/bookings/5?approved=false
2023-08-04 16:34:21,478 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-1] Accept=[application/json, application/*+json]
2023-08-04 16:34:21,483 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-1] Response 200 OK
2023-08-04 16:34:21,483 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-1] Reading to [java.lang.Object]
2023-08-04 16:34:21,507 INFO ru.practicum.shareit.booking.BookingController [http-nio-8080-exec-2] Get booking with state REJECTED, userId=1, from=0, size=20
2023-08-04 16:34:21,507 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-2] HTTP GET http://localhost:9090/bookings?state=REJECTED&from=0&size=20
2023-08-04 16:34:21,508 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-2] Accept=[application/json, application/*+json]
2023-08-04 16:34:21,510 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-4] Setting JDBC Connection [HikariProxyConnection@899738554 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST] read-only
2023-08-04 16:34:21,511 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-4] Resetting read-only flag of JDBC Connection [HikariProxyConnection@899738554 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST]
2023-08-04 16:34:21,515 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-2] Response 200 OK
2023-08-04 16:34:21,515 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-2] Reading to [java.lang.Object]
2023-08-04 16:34:21,539 INFO ru.practicum.shareit.booking.BookingController [http-nio-8080-exec-3] Get booking with state REJECTED, userId=4, from=0, size=20
2023-08-04 16:34:21,539 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-3] HTTP GET http://localhost:9090/bookings/owner?state=REJECTED&from=0&size=20
2023-08-04 16:34:21,540 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-3] Accept=[application/json, application/*+json]
2023-08-04 16:34:21,542 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-5] Setting JDBC Connection [HikariProxyConnection@326018158 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST] read-only
2023-08-04 16:34:21,543 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-5] Resetting read-only flag of JDBC Connection [HikariProxyConnection@326018158 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST]
2023-08-04 16:34:21,546 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-3] Response 200 OK
2023-08-04 16:34:21,546 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-3] Reading to [java.lang.Object]
2023-08-04 16:34:21,567 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-4] HTTP PATCH http://localhost:9090/bookings/6?approved=true
2023-08-04 16:34:21,567 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-4] Accept=[application/json, application/*+json]
2023-08-04 16:34:21,573 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-4] Response 200 OK
2023-08-04 16:34:21,573 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-4] Reading to [java.lang.Object]
2023-08-04 16:34:21,597 INFO ru.practicum.shareit.item.ItemController [http-nio-8080-exec-5] Request on add ItemDto(id=0, name=Кухонный стол, description=Стол для празднования, available=true, requestId=null), user id: 6
2023-08-04 16:34:21,598 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-5] HTTP POST http://localhost:9090/items
2023-08-04 16:34:21,598 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-5] Accept=[application/json, application/*+json]
2023-08-04 16:34:21,598 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-5] Writing [ItemDto(id=0, name=Кухонный стол, description=Стол для празднования, available=true, requestId=null)] as "application/json"
2023-08-04 16:34:21,600 INFO ru.practicum.item.ItemController [http-nio-9090-exec-7] Запрос на добавление ItemDto(id=0, name=Кухонный стол, description=Стол для празднования, available=true, requestId=null), идентификатор пользователя: 6
2023-08-04 16:34:21,603 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-5] Response 200 OK
2023-08-04 16:34:21,603 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-5] Reading to [java.lang.Object]
2023-08-04 16:34:21,625 INFO ru.practicum.shareit.item.ItemController [http-nio-8080-exec-6] Request from user ID: 1 on get item. ID: 1
2023-08-04 16:34:21,625 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-6] HTTP GET http://localhost:9090/items/1
2023-08-04 16:34:21,625 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-6] Accept=[application/json, application/*+json]
2023-08-04 16:34:21,627 INFO ru.practicum.item.ItemController [http-nio-9090-exec-8] Запрос от идентификатора пользователя: 1 при получении элемента. Идентификатор: 1
2023-08-04 16:34:21,627 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-8] Setting JDBC Connection [HikariProxyConnection@1129608864 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST] read-only
2023-08-04 16:34:21,628 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-8] Resetting read-only flag of JDBC Connection [HikariProxyConnection@1129608864 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST]
2023-08-04 16:34:21,632 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-6] Response 200 OK
2023-08-04 16:34:21,632 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-6] Reading to [java.lang.Object]
2023-08-04 16:34:21,659 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-7] HTTP POST http://localhost:9090/bookings
2023-08-04 16:34:21,660 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-7] Accept=[application/json, application/*+json]
2023-08-04 16:34:21,660 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-7] Writing [BookingDto(id=0, itemId=1, start=2023-08-14T16:34:21, end=2023-08-15T16:34:21, status=null, booker=null)] as "application/json"
2023-08-04 16:34:21,668 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-7] Response 200 OK
2023-08-04 16:34:21,669 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-7] Reading to [java.lang.Object]
2023-08-04 16:34:21,688 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-8] HTTP POST http://localhost:9090/bookings
2023-08-04 16:34:21,689 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-8] Accept=[application/json, application/*+json]
2023-08-04 16:34:21,689 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-8] Writing [BookingDto(id=0, itemId=4, start=2023-08-04T16:34:23, end=2023-08-04T17:34:21, status=null, booker=null)] as "application/json"
2023-08-04 16:34:21,694 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-8] Response 200 OK
2023-08-04 16:34:21,695 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-8] Reading to [java.lang.Object]
2023-08-04 16:34:21,715 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-9] HTTP PATCH http://localhost:9090/bookings/8?approved=true
2023-08-04 16:34:21,715 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-9] Accept=[application/json, application/*+json]
2023-08-04 16:34:21,720 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-9] Response 200 OK
2023-08-04 16:34:21,720 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-9] Reading to [java.lang.Object]
2023-08-04 16:34:24,744 INFO ru.practicum.shareit.item.ItemController [http-nio-8080-exec-10] Request from user ID: 1 on get item. ID: 2
2023-08-04 16:34:24,744 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-10] HTTP GET http://localhost:9090/items/2
2023-08-04 16:34:24,745 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-10] Accept=[application/json, application/*+json]
2023-08-04 16:34:24,747 INFO ru.practicum.item.ItemController [http-nio-9090-exec-2] Запрос от идентификатора пользователя: 1 при получении элемента. Идентификатор: 2
2023-08-04 16:34:24,748 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-2] Setting JDBC Connection [HikariProxyConnection@1002200880 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST] read-only
2023-08-04 16:34:24,749 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-2] Resetting read-only flag of JDBC Connection [HikariProxyConnection@1002200880 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST]
2023-08-04 16:34:24,751 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-10] Response 200 OK
2023-08-04 16:34:24,752 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-10] Reading to [java.lang.Object]
2023-08-04 16:34:27,774 INFO ru.practicum.shareit.item.ItemController [http-nio-8080-exec-1] Request from user ID: 4 on get item. ID: 2
2023-08-04 16:34:27,775 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-1] HTTP GET http://localhost:9090/items/2
2023-08-04 16:34:27,775 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-1] Accept=[application/json, application/*+json]
2023-08-04 16:34:27,777 INFO ru.practicum.item.ItemController [http-nio-9090-exec-3] Запрос от идентификатора пользователя: 4 при получении элемента. Идентификатор: 2
2023-08-04 16:34:27,778 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-3] Setting JDBC Connection [HikariProxyConnection@786382326 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST] read-only
2023-08-04 16:34:27,779 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-3] Resetting read-only flag of JDBC Connection [HikariProxyConnection@786382326 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST]
2023-08-04 16:34:27,781 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-1] Response 200 OK
2023-08-04 16:34:27,781 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-1] Reading to [java.lang.Object]
2023-08-04 16:34:27,809 INFO ru.practicum.shareit.item.ItemController [http-nio-8080-exec-2] Request on add comment Comment for item 1, item id: 1, user id: 4
2023-08-04 16:34:27,810 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-2] HTTP POST http://localhost:9090/items/1/comment
2023-08-04 16:34:27,811 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-2] Accept=[application/json, application/*+json]
2023-08-04 16:34:27,814 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-2] Writing [CommentDto(id=0, text=Comment for item 1, authorName=null, created=null)] as "application/json"
2023-08-04 16:34:27,820 INFO ru.practicum.item.ItemController [http-nio-9090-exec-4] Запрос на добавление комментария Comment for item 1, идентификатор элемента: 1, идентификатор пользователя: 4
2023-08-04 16:34:27,828 INFO ru.practicum.ErrorHandler [http-nio-9090-exec-4] Not available: Нет доступного бронирования для идентификатора пользователя: 4 и вещи: 1
2023-08-04 16:34:27,829 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-2] Response 400 BAD_REQUEST
2023-08-04 16:34:27,854 INFO ru.practicum.shareit.ErrorHandler [http-nio-8080-exec-4] Validation failed for field: text. Error message: не должно быть пустым
2023-08-04 16:34:27,881 INFO ru.practicum.shareit.item.ItemController [http-nio-8080-exec-6] Request on add comment Add comment from user1, item id: 2, user id: 1
2023-08-04 16:34:27,882 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-6] HTTP POST http://localhost:9090/items/2/comment
2023-08-04 16:34:27,882 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-6] Accept=[application/json, application/*+json]
2023-08-04 16:34:27,882 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-6] Writing [CommentDto(id=0, text=Add comment from user1, authorName=null, created=null)] as "application/json"
2023-08-04 16:34:27,885 INFO ru.practicum.item.ItemController [http-nio-9090-exec-5] Запрос на добавление комментария Add comment from user1, идентификатор элемента: 2, идентификатор пользователя: 1
2023-08-04 16:34:27,895 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-6] Response 200 OK
2023-08-04 16:34:27,896 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-6] Reading to [java.lang.Object]
2023-08-04 16:34:27,916 INFO ru.practicum.shareit.item.ItemController [http-nio-8080-exec-7] Request from user ID: 1 on get item. ID: 2
2023-08-04 16:34:27,916 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-7] HTTP GET http://localhost:9090/items/2
2023-08-04 16:34:27,917 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-7] Accept=[application/json, application/*+json]
2023-08-04 16:34:27,919 INFO ru.practicum.item.ItemController [http-nio-9090-exec-6] Запрос от идентификатора пользователя: 1 при получении элемента. Идентификатор: 2
2023-08-04 16:34:27,919 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-6] Setting JDBC Connection [HikariProxyConnection@674048226 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST] read-only
2023-08-04 16:34:27,920 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-6] Resetting read-only flag of JDBC Connection [HikariProxyConnection@674048226 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST]
2023-08-04 16:34:27,923 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-7] Response 200 OK
2023-08-04 16:34:27,923 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-7] Reading to [java.lang.Object]
2023-08-04 16:34:27,946 INFO ru.practicum.shareit.item.ItemController [http-nio-8080-exec-8] Request from user ID: 4 on get item. ID: 2
2023-08-04 16:34:27,946 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-8] HTTP GET http://localhost:9090/items/2
2023-08-04 16:34:27,947 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-8] Accept=[application/json, application/*+json]
2023-08-04 16:34:27,948 INFO ru.practicum.item.ItemController [http-nio-9090-exec-7] Запрос от идентификатора пользователя: 4 при получении элемента. Идентификатор: 2
2023-08-04 16:34:27,949 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-7] Setting JDBC Connection [HikariProxyConnection@135251117 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST] read-only
2023-08-04 16:34:27,949 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-7] Resetting read-only flag of JDBC Connection [HikariProxyConnection@135251117 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST]
2023-08-04 16:34:27,953 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-8] Response 200 OK
2023-08-04 16:34:27,953 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-8] Reading to [java.lang.Object]
2023-08-04 16:34:27,976 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-9] HTTP PATCH http://localhost:9090/bookings/7?approved=true
2023-08-04 16:34:27,976 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-9] Accept=[application/json, application/*+json]
2023-08-04 16:34:27,983 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-9] Response 200 OK
2023-08-04 16:34:27,983 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-9] Reading to [java.lang.Object]
2023-08-04 16:34:28,005 INFO ru.practicum.shareit.item.ItemController [http-nio-8080-exec-10] Request on add comment Add comment from user5, item id: 1, user id: 5
2023-08-04 16:34:28,005 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-10] HTTP POST http://localhost:9090/items/1/comment
2023-08-04 16:34:28,005 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-10] Accept=[application/json, application/*+json]
2023-08-04 16:34:28,006 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-10] Writing [CommentDto(id=0, text=Add comment from user5, authorName=null, created=null)] as "application/json"
2023-08-04 16:34:28,007 INFO ru.practicum.item.ItemController [http-nio-9090-exec-9] Запрос на добавление комментария Add comment from user5, идентификатор элемента: 1, идентификатор пользователя: 5
2023-08-04 16:34:28,011 INFO ru.practicum.ErrorHandler [http-nio-9090-exec-9] Not available: Нет доступного бронирования для идентификатора пользователя: 5 и вещи: 1
2023-08-04 16:34:28,012 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-10] Response 400 BAD_REQUEST
2023-08-04 16:34:28,037 INFO ru.practicum.shareit.booking.BookingController [http-nio-8080-exec-2] Get booking with state CURRENT, userId=1, from=0, size=20
2023-08-04 16:34:28,038 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-2] HTTP GET http://localhost:9090/bookings?state=CURRENT&from=0&size=20
2023-08-04 16:34:28,038 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-2] Accept=[application/json, application/*+json]
2023-08-04 16:34:28,040 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-10] Setting JDBC Connection [HikariProxyConnection@744158319 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST] read-only
2023-08-04 16:34:28,042 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-10] Resetting read-only flag of JDBC Connection [HikariProxyConnection@744158319 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST]
2023-08-04 16:34:28,046 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-2] Response 200 OK
2023-08-04 16:34:28,046 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-2] Reading to [java.lang.Object]
2023-08-04 16:34:28,076 INFO ru.practicum.shareit.booking.BookingController [http-nio-8080-exec-3] Get booking with state CURRENT, userId=4, from=0, size=20
2023-08-04 16:34:28,076 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-3] HTTP GET http://localhost:9090/bookings/owner?state=CURRENT&from=0&size=20
2023-08-04 16:34:28,077 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-3] Accept=[application/json, application/*+json]
2023-08-04 16:34:28,078 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-1] Setting JDBC Connection [HikariProxyConnection@944437741 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST] read-only
2023-08-04 16:34:28,079 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-1] Resetting read-only flag of JDBC Connection [HikariProxyConnection@944437741 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST]
2023-08-04 16:34:28,083 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-3] Response 200 OK
2023-08-04 16:34:28,084 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-3] Reading to [java.lang.Object]
2023-08-04 16:34:28,109 INFO ru.practicum.shareit.booking.BookingController [http-nio-8080-exec-4] Get booking with state PAST, userId=1, from=0, size=20
2023-08-04 16:34:28,109 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-4] HTTP GET http://localhost:9090/bookings?state=PAST&from=0&size=20
2023-08-04 16:34:28,109 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-4] Accept=[application/json, application/*+json]
2023-08-04 16:34:28,111 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-2] Setting JDBC Connection [HikariProxyConnection@1979878599 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST] read-only
2023-08-04 16:34:28,112 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-2] Resetting read-only flag of JDBC Connection [HikariProxyConnection@1979878599 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST]
2023-08-04 16:34:28,115 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-4] Response 200 OK
2023-08-04 16:34:28,115 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-4] Reading to [java.lang.Object]
2023-08-04 16:34:28,142 INFO ru.practicum.shareit.booking.BookingController [http-nio-8080-exec-5] Get booking with state PAST, userId=4, from=0, size=20
2023-08-04 16:34:28,143 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-5] HTTP GET http://localhost:9090/bookings/owner?state=PAST&from=0&size=20
2023-08-04 16:34:28,143 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-5] Accept=[application/json, application/*+json]
2023-08-04 16:34:28,144 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-3] Setting JDBC Connection [HikariProxyConnection@2046300671 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST] read-only
2023-08-04 16:34:28,145 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-3] Resetting read-only flag of JDBC Connection [HikariProxyConnection@2046300671 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST]
2023-08-04 16:34:28,149 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-5] Response 200 OK
2023-08-04 16:34:28,149 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-5] Reading to [java.lang.Object]
2023-08-04 16:34:28,168 INFO ru.practicum.shareit.item.ItemController [http-nio-8080-exec-6] Request from user ID: 6 on get item. ID: 4
2023-08-04 16:34:28,168 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-6] HTTP GET http://localhost:9090/items/4
2023-08-04 16:34:28,169 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-6] Accept=[application/json, application/*+json]
2023-08-04 16:34:28,171 INFO ru.practicum.item.ItemController [http-nio-9090-exec-4] Запрос от идентификатора пользователя: 6 при получении элемента. Идентификатор: 4
2023-08-04 16:34:28,171 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-4] Setting JDBC Connection [HikariProxyConnection@2098093978 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST] read-only
2023-08-04 16:34:28,172 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-4] Resetting read-only flag of JDBC Connection [HikariProxyConnection@2098093978 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST]
2023-08-04 16:34:28,177 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-6] Response 200 OK
2023-08-04 16:34:28,178 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-6] Reading to [java.lang.Object]
2023-08-04 16:34:28,222 INFO ru.practicum.shareit.request.RequestController [http-nio-8080-exec-7] Add request on item RequestDto(id=0, description=Хотел бы воспользоваться щёткой для обуви, created=null, items=null), user id: 99
2023-08-04 16:34:28,223 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-7] HTTP POST http://localhost:9090/requests
2023-08-04 16:34:28,223 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-7] Accept=[application/json, application/*+json]
2023-08-04 16:34:28,224 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-7] Writing [RequestDto(id=0, description=Хотел бы воспользоваться щёткой для обуви, created=null, items=null)] as "application/json"
2023-08-04 16:34:28,238 INFO ru.practicum.request.RequestController [http-nio-9090-exec-5] Добавить запрос на элемент RequestDto(id=0, description=Хотел бы воспользоваться щёткой для обуви, created=null, items=null), идентификатор пользователя: 99
2023-08-04 16:34:28,247 INFO ru.practicum.ErrorHandler [http-nio-9090-exec-5] Not found: User with ID: 99 not found
2023-08-04 16:34:28,248 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-7] Response 404 NOT_FOUND
2023-08-04 16:34:28,277 INFO ru.practicum.shareit.ErrorHandler [http-nio-8080-exec-8] Validation failed for field: description. Error message: Description can't blank
2023-08-04 16:34:28,300 INFO ru.practicum.shareit.request.RequestController [http-nio-8080-exec-10] Request on get all requests from user id: 99
2023-08-04 16:34:28,301 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-10] HTTP GET http://localhost:9090/requests?from=0&size=20
2023-08-04 16:34:28,301 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-10] Accept=[application/json, application/*+json]
2023-08-04 16:34:28,303 INFO ru.practicum.request.RequestController [http-nio-9090-exec-6] Запрос на получение всех запросов от идентификатора пользователя: 99
2023-08-04 16:34:28,307 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-6] Setting JDBC Connection [HikariProxyConnection@1721056834 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST] read-only
2023-08-04 16:34:28,308 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-6] Resetting read-only flag of JDBC Connection [HikariProxyConnection@1721056834 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST]
2023-08-04 16:34:28,308 INFO ru.practicum.ErrorHandler [http-nio-9090-exec-6] Not found: User with ID: 99 not found
2023-08-04 16:34:28,309 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-10] Response 404 NOT_FOUND
2023-08-04 16:34:28,328 INFO ru.practicum.shareit.request.RequestController [http-nio-8080-exec-1] Request on get all requests from user id: 1
2023-08-04 16:34:28,329 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-1] HTTP GET http://localhost:9090/requests?from=0&size=20
2023-08-04 16:34:28,329 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-1] Accept=[application/json, application/*+json]
2023-08-04 16:34:28,331 INFO ru.practicum.request.RequestController [http-nio-9090-exec-7] Запрос на получение всех запросов от идентификатора пользователя: 1
2023-08-04 16:34:28,331 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-7] Setting JDBC Connection [HikariProxyConnection@776376599 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST] read-only
2023-08-04 16:34:28,332 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-7] Resetting read-only flag of JDBC Connection [HikariProxyConnection@776376599 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST]
2023-08-04 16:34:28,338 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-1] Response 200 OK
2023-08-04 16:34:28,338 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-1] Reading to [java.lang.Object]
2023-08-04 16:34:28,361 INFO ru.practicum.shareit.request.RequestController [http-nio-8080-exec-2] Request on get all requests
2023-08-04 16:34:28,362 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-2] HTTP GET http://localhost:9090/requests/all?from=0&size=20
2023-08-04 16:34:28,362 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-2] Accept=[application/json, application/*+json]
2023-08-04 16:34:28,369 INFO ru.practicum.request.RequestController [http-nio-9090-exec-8] Запрос на получение всех запросов
2023-08-04 16:34:28,370 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-2] Response 200 OK
2023-08-04 16:34:28,370 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-2] Reading to [java.lang.Object]
2023-08-04 16:34:28,392 INFO ru.practicum.shareit.ErrorHandler [http-nio-8080-exec-3] Validation failed for field: size. Error message: должно быть больше 0
2023-08-04 16:34:28,415 INFO ru.practicum.shareit.ErrorHandler [http-nio-8080-exec-5] Validation failed for field: from. Error message: должно быть больше или равно 0
2023-08-04 16:34:28,439 INFO ru.practicum.shareit.ErrorHandler [http-nio-8080-exec-7] Validation failed for field: size. Error message: должно быть больше 0
2023-08-04 16:34:28,461 INFO ru.practicum.shareit.request.RequestController [http-nio-8080-exec-9] Request on get all requests
2023-08-04 16:34:28,461 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-9] HTTP GET http://localhost:9090/requests/all?from=0&size=20
2023-08-04 16:34:28,462 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-9] Accept=[application/json, application/*+json]
2023-08-04 16:34:28,464 INFO ru.practicum.request.RequestController [http-nio-9090-exec-9] Запрос на получение всех запросов
2023-08-04 16:34:28,465 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-9] Response 200 OK
2023-08-04 16:34:28,465 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-9] Reading to [java.lang.Object]
2023-08-04 16:34:28,485 INFO ru.practicum.shareit.request.RequestController [http-nio-8080-exec-10] Add request on item RequestDto(id=0, description=Хотел бы воспользоваться щёткой для обуви, created=null, items=null), user id: 1
2023-08-04 16:34:28,485 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-10] HTTP POST http://localhost:9090/requests
2023-08-04 16:34:28,486 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-10] Accept=[application/json, application/*+json]
2023-08-04 16:34:28,486 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-10] Writing [RequestDto(id=0, description=Хотел бы воспользоваться щёткой для обуви, created=null, items=null)] as "application/json"
2023-08-04 16:34:28,487 INFO ru.practicum.request.RequestController [http-nio-9090-exec-10] Добавить запрос на элемент RequestDto(id=0, description=Хотел бы воспользоваться щёткой для обуви, created=null, items=null), идентификатор пользователя: 1
2023-08-04 16:34:28,492 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-10] Response 200 OK
2023-08-04 16:34:28,492 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-10] Reading to [java.lang.Object]
2023-08-04 16:34:29,517 INFO ru.practicum.shareit.request.RequestController [http-nio-8080-exec-1] Request on get all requests from user id: 1
2023-08-04 16:34:29,517 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-1] HTTP GET http://localhost:9090/requests?from=0&size=20
2023-08-04 16:34:29,517 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-1] Accept=[application/json, application/*+json]
2023-08-04 16:34:29,519 INFO ru.practicum.request.RequestController [http-nio-9090-exec-1] Запрос на получение всех запросов от идентификатора пользователя: 1
2023-08-04 16:34:29,519 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-1] Setting JDBC Connection [HikariProxyConnection@48812479 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST] read-only
2023-08-04 16:34:29,520 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-1] Resetting read-only flag of JDBC Connection [HikariProxyConnection@48812479 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST]
2023-08-04 16:34:29,524 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-1] Response 200 OK
2023-08-04 16:34:29,524 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-1] Reading to [java.lang.Object]
2023-08-04 16:34:29,542 INFO ru.practicum.shareit.item.ItemController [http-nio-8080-exec-2] Request on add ItemDto(id=0, name=Щётка для обуви, description=Стандартная щётка для обуви, available=true, requestId=1), user id: 4
2023-08-04 16:34:29,542 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-2] HTTP POST http://localhost:9090/items
2023-08-04 16:34:29,543 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-2] Accept=[application/json, application/*+json]
2023-08-04 16:34:29,543 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-2] Writing [ItemDto(id=0, name=Щётка для обуви, description=Стандартная щётка для обуви, available=true, requestId=1)] as "application/json"
2023-08-04 16:34:29,544 INFO ru.practicum.item.ItemController [http-nio-9090-exec-2] Запрос на добавление ItemDto(id=0, name=Щётка для обуви, description=Стандартная щётка для обуви, available=true, requestId=1), идентификатор пользователя: 4
2023-08-04 16:34:29,547 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-2] Response 200 OK
2023-08-04 16:34:29,548 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-2] Reading to [java.lang.Object]
2023-08-04 16:34:29,571 INFO ru.practicum.shareit.request.RequestController [http-nio-8080-exec-3] Request on get all requests from user id: 1
2023-08-04 16:34:29,571 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-3] HTTP GET http://localhost:9090/requests?from=0&size=20
2023-08-04 16:34:29,572 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-3] Accept=[application/json, application/*+json]
2023-08-04 16:34:29,573 INFO ru.practicum.request.RequestController [http-nio-9090-exec-3] Запрос на получение всех запросов от идентификатора пользователя: 1
2023-08-04 16:34:29,573 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-3] Setting JDBC Connection [HikariProxyConnection@505355723 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST] read-only
2023-08-04 16:34:29,574 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-3] Resetting read-only flag of JDBC Connection [HikariProxyConnection@505355723 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST]
2023-08-04 16:34:29,578 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-3] Response 200 OK
2023-08-04 16:34:29,578 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-3] Reading to [java.lang.Object]
2023-08-04 16:34:29,602 INFO ru.practicum.shareit.request.RequestController [http-nio-8080-exec-4] Request on get all requests
2023-08-04 16:34:29,603 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-4] HTTP GET http://localhost:9090/requests/all?from=0&size=20
2023-08-04 16:34:29,603 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-4] Accept=[application/json, application/*+json]
2023-08-04 16:34:29,606 INFO ru.practicum.request.RequestController [http-nio-9090-exec-4] Запрос на получение всех запросов
2023-08-04 16:34:29,607 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-4] Response 200 OK
2023-08-04 16:34:29,607 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-4] Reading to [java.lang.Object]
2023-08-04 16:34:29,629 INFO ru.practicum.shareit.request.RequestController [http-nio-8080-exec-5] Request on get all requests
2023-08-04 16:34:29,630 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-5] HTTP GET http://localhost:9090/requests/all?from=0&size=20
2023-08-04 16:34:29,630 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-5] Accept=[application/json, application/*+json]
2023-08-04 16:34:29,633 INFO ru.practicum.request.RequestController [http-nio-9090-exec-5] Запрос на получение всех запросов
2023-08-04 16:34:29,634 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-5] Response 200 OK
2023-08-04 16:34:29,634 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-5] Reading to [java.lang.Object]
2023-08-04 16:34:29,655 INFO ru.practicum.shareit.request.RequestController [http-nio-8080-exec-6] Request from user ID: 99 on get request. ID: 1
2023-08-04 16:34:29,656 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-6] HTTP GET http://localhost:9090/requests/1
2023-08-04 16:34:29,656 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-6] Accept=[application/json, application/*+json]
2023-08-04 16:34:29,657 INFO ru.practicum.request.RequestController [http-nio-9090-exec-6] Запрос от идентификатора пользователя: 99 по запросу get. Идентификатор: 1
2023-08-04 16:34:29,658 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-6] Setting JDBC Connection [HikariProxyConnection@125446182 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST] read-only
2023-08-04 16:34:29,658 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-6] Resetting read-only flag of JDBC Connection [HikariProxyConnection@125446182 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST]
2023-08-04 16:34:29,659 INFO ru.practicum.ErrorHandler [http-nio-9090-exec-6] Not found: User with ID: 99 not found
2023-08-04 16:34:29,659 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-6] Response 404 NOT_FOUND
2023-08-04 16:34:29,680 INFO ru.practicum.shareit.request.RequestController [http-nio-8080-exec-7] Request from user ID: 1 on get request. ID: 99
2023-08-04 16:34:29,680 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-7] HTTP GET http://localhost:9090/requests/99
2023-08-04 16:34:29,680 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-7] Accept=[application/json, application/*+json]
2023-08-04 16:34:29,682 INFO ru.practicum.request.RequestController [http-nio-9090-exec-7] Запрос от идентификатора пользователя: 1 по запросу get. Идентификатор: 99
2023-08-04 16:34:29,683 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-7] Setting JDBC Connection [HikariProxyConnection@495245437 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST] read-only
2023-08-04 16:34:29,683 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-7] Resetting read-only flag of JDBC Connection [HikariProxyConnection@495245437 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST]
2023-08-04 16:34:29,684 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-7] Setting JDBC Connection [HikariProxyConnection@495245437 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST] read-only
2023-08-04 16:34:29,685 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-7] Resetting read-only flag of JDBC Connection [HikariProxyConnection@495245437 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST]
2023-08-04 16:34:29,685 INFO ru.practicum.ErrorHandler [http-nio-9090-exec-7] Not found: Запрос с идентификатором: 99 не найден
2023-08-04 16:34:29,686 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-7] Response 404 NOT_FOUND
2023-08-04 16:34:29,707 INFO ru.practicum.shareit.request.RequestController [http-nio-8080-exec-8] Request from user ID: 4 on get request. ID: 1
2023-08-04 16:34:29,707 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-8] HTTP GET http://localhost:9090/requests/1
2023-08-04 16:34:29,707 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-8] Accept=[application/json, application/*+json]
2023-08-04 16:34:29,708 INFO ru.practicum.request.RequestController [http-nio-9090-exec-8] Запрос от идентификатора пользователя: 4 по запросу get. Идентификатор: 1
2023-08-04 16:34:29,709 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-8] Setting JDBC Connection [HikariProxyConnection@1070918422 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST] read-only
2023-08-04 16:34:29,709 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-8] Resetting read-only flag of JDBC Connection [HikariProxyConnection@1070918422 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST]
2023-08-04 16:34:29,709 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-8] Setting JDBC Connection [HikariProxyConnection@1070918422 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST] read-only
2023-08-04 16:34:29,710 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-8] Resetting read-only flag of JDBC Connection [HikariProxyConnection@1070918422 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST]
2023-08-04 16:34:29,712 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-8] Response 200 OK
2023-08-04 16:34:29,713 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-8] Reading to [java.lang.Object]
2023-08-04 16:34:29,737 INFO ru.practicum.shareit.request.RequestController [http-nio-8080-exec-9] Request from user ID: 1 on get request. ID: 1
2023-08-04 16:34:29,737 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-9] HTTP GET http://localhost:9090/requests/1
2023-08-04 16:34:29,737 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-9] Accept=[application/json, application/*+json]
2023-08-04 16:34:29,739 INFO ru.practicum.request.RequestController [http-nio-9090-exec-9] Запрос от идентификатора пользователя: 1 по запросу get. Идентификатор: 1
2023-08-04 16:34:29,739 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-9] Setting JDBC Connection [HikariProxyConnection@1262276270 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST] read-only
2023-08-04 16:34:29,740 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-9] Resetting read-only flag of JDBC Connection [HikariProxyConnection@1262276270 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST]
2023-08-04 16:34:29,741 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-9] Setting JDBC Connection [HikariProxyConnection@1262276270 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST] read-only
2023-08-04 16:34:29,741 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-9] Resetting read-only flag of JDBC Connection [HikariProxyConnection@1262276270 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST]
2023-08-04 16:34:29,743 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-9] Response 200 OK
2023-08-04 16:34:29,743 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-9] Reading to [java.lang.Object]
2023-08-04 16:34:29,767 INFO ru.practicum.shareit.ErrorHandler [http-nio-8080-exec-10] Validation failed for field: size. Error message: должно быть больше 0
2023-08-04 16:34:29,790 INFO ru.practicum.shareit.ErrorHandler [http-nio-8080-exec-2] Validation failed for field: size. Error message: должно быть больше 0
2023-08-04 16:34:29,813 INFO ru.practicum.shareit.ErrorHandler [http-nio-8080-exec-4] Validation failed for field: from. Error message: должно быть больше или равно 0
2023-08-04 16:34:29,836 INFO ru.practicum.shareit.ErrorHandler [http-nio-8080-exec-6] Validation failed for field: from. Error message: должно быть больше или равно 0
2023-08-04 16:34:29,857 INFO ru.practicum.shareit.ErrorHandler [http-nio-8080-exec-8] Validation failed for field: size. Error message: должно быть больше 0
2023-08-04 16:34:29,878 INFO ru.practicum.shareit.ErrorHandler [http-nio-8080-exec-10] Validation failed for field: size. Error message: должно быть больше 0
2023-08-04 16:34:29,900 INFO ru.practicum.shareit.booking.BookingController [http-nio-8080-exec-2] Get booking with state ALL, userId=1, from=4, size=2
2023-08-04 16:34:29,901 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-2] HTTP GET http://localhost:9090/bookings?state=ALL&from=4&size=2
2023-08-04 16:34:29,901 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-2] Accept=[application/json, application/*+json]
2023-08-04 16:34:29,902 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-10] Setting JDBC Connection [HikariProxyConnection@1449005667 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST] read-only
2023-08-04 16:34:29,903 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-10] Resetting read-only flag of JDBC Connection [HikariProxyConnection@1449005667 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST]
2023-08-04 16:34:29,906 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-2] Response 200 OK
2023-08-04 16:34:29,907 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-2] Reading to [java.lang.Object]
2023-08-04 16:34:29,927 INFO ru.practicum.shareit.booking.BookingController [http-nio-8080-exec-3] Get booking with state ALL, userId=1, from=1, size=1
2023-08-04 16:34:29,927 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-3] HTTP GET http://localhost:9090/bookings/owner?state=ALL&from=1&size=1
2023-08-04 16:34:29,927 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-3] Accept=[application/json, application/*+json]
2023-08-04 16:34:29,929 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-1] Setting JDBC Connection [HikariProxyConnection@2088453030 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST] read-only
2023-08-04 16:34:29,929 DEBUG org.springframework.jdbc.datasource.DataSourceUtils [http-nio-9090-exec-1] Resetting read-only flag of JDBC Connection [HikariProxyConnection@2088453030 wrapping conn0: url=jdbc:h2:mem:my_db user=TEST]
2023-08-04 16:34:29,934 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-3] Response 200 OK
2023-08-04 16:34:29,935 DEBUG org.springframework.core.log.CompositeLog [http-nio-8080-exec-3] Reading to [java.lang.Object]
2023-08-04 16:34:35,581 INFO org.springframework.orm.jpa.AbstractEntityManagerFactoryBean [SpringApplicationShutdownHook] Closing JPA EntityManagerFactory for persistence unit 'default'
2023-08-04 16:34:35,581 INFO org.hibernate.tool.schema.internal.SchemaDropperImpl$DelayedDropActionImpl [SpringApplicationShutdownHook] HHH000477: Starting delayed evictData of schema as part of SessionFactory shut-down'
2023-08-04 16:34:35,583 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn0: url=jdbc:h2:mem:my_db user=TEST: (connection is dead)
2023-08-04 16:34:35,583 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn1: url=jdbc:h2:mem:my_db user=TEST: (connection is dead)
2023-08-04 16:34:35,583 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 connection closer] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-08-04 16:34:35,583 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn2: url=jdbc:h2:mem:my_db user=TEST: (connection is dead)
2023-08-04 16:34:35,583 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 connection closer] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-08-04 16:34:35,583 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn3: url=jdbc:h2:mem:my_db user=TEST: (connection is dead)
2023-08-04 16:34:35,583 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 connection closer] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-08-04 16:34:35,583 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn4: url=jdbc:h2:mem:my_db user=TEST: (connection is dead)
2023-08-04 16:34:35,583 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 connection closer] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-08-04 16:34:35,583 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn5: url=jdbc:h2:mem:my_db user=TEST: (connection is dead)
2023-08-04 16:34:35,583 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 connection closer] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-08-04 16:34:35,583 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn6: url=jdbc:h2:mem:my_db user=TEST: (connection is dead)
2023-08-04 16:34:35,583 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 connection closer] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-08-04 16:34:35,583 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn7: url=jdbc:h2:mem:my_db user=TEST: (connection is dead)
2023-08-04 16:34:35,583 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 connection closer] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-08-04 16:34:35,583 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn8: url=jdbc:h2:mem:my_db user=TEST: (connection is dead)
2023-08-04 16:34:35,583 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 connection closer] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-08-04 16:34:35,583 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn9: url=jdbc:h2:mem:my_db user=TEST: (connection is dead)
2023-08-04 16:34:35,583 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 connection closer] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-08-04 16:34:35,765 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn10: url=jdbc:h2:mem:my_db user=TEST
2023-08-04 16:34:35,767 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn11: url=jdbc:h2:mem:my_db user=TEST
2023-08-04 16:34:35,767 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn12: url=jdbc:h2:mem:my_db user=TEST
2023-08-04 16:34:35,768 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn13: url=jdbc:h2:mem:my_db user=TEST
2023-08-04 16:34:35,768 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn14: url=jdbc:h2:mem:my_db user=TEST
2023-08-04 16:34:35,768 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn15: url=jdbc:h2:mem:my_db user=TEST
2023-08-04 16:34:35,768 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn16: url=jdbc:h2:mem:my_db user=TEST
2023-08-04 16:34:35,769 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn17: url=jdbc:h2:mem:my_db user=TEST
2023-08-04 16:34:35,769 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn18: url=jdbc:h2:mem:my_db user=TEST
2023-08-04 16:34:35,769 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn19: url=jdbc:h2:mem:my_db user=TEST
2023-08-04 16:34:35,769 INFO com.zaxxer.hikari.HikariDataSource [SpringApplicationShutdownHook] HikariPool-1 - Shutdown initiated...
2023-08-04 16:34:35,769 DEBUG com.zaxxer.hikari.pool.HikariPool [SpringApplicationShutdownHook] HikariPool-1 - Before shutdown stats (total=10, active=0, idle=10, waiting=0)
2023-08-04 16:34:35,770 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn10: url=jdbc:h2:mem:my_db user=TEST: (connection evicted)
2023-08-04 16:34:35,770 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn11: url=jdbc:h2:mem:my_db user=TEST: (connection evicted)
2023-08-04 16:34:35,770 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn12: url=jdbc:h2:mem:my_db user=TEST: (connection evicted)
2023-08-04 16:34:35,770 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn13: url=jdbc:h2:mem:my_db user=TEST: (connection evicted)
2023-08-04 16:34:35,770 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn14: url=jdbc:h2:mem:my_db user=TEST: (connection evicted)
2023-08-04 16:34:35,770 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn15: url=jdbc:h2:mem:my_db user=TEST: (connection evicted)
2023-08-04 16:34:35,770 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn16: url=jdbc:h2:mem:my_db user=TEST: (connection evicted)
2023-08-04 16:34:35,770 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn17: url=jdbc:h2:mem:my_db user=TEST: (connection evicted)
2023-08-04 16:34:35,770 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn18: url=jdbc:h2:mem:my_db user=TEST: (connection evicted)
2023-08-04 16:34:35,770 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn19: url=jdbc:h2:mem:my_db user=TEST: (connection evicted)
2023-08-04 16:34:35,770 DEBUG com.zaxxer.hikari.pool.HikariPool [SpringApplicationShutdownHook] HikariPool-1 - After shutdown stats (total=0, active=0, idle=0, waiting=0)
2023-08-04 16:34:35,771 INFO com.zaxxer.hikari.HikariDataSource [SpringApplicationShutdownHook] HikariPool-1 - Shutdown completed.
